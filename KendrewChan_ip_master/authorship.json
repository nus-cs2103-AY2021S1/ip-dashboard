[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 25,
      "KendrewChan": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "KendrewChan": 16
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "E,1,borrow book,2019-04-18 0000"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "### CRUD Operations"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Able to Create, Read, Update and Delete Tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "##### `todo [String]` - Add a todo task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Creates a new todo task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "`todo borrow book`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "[T][X] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "##### `event [String] /at YYYY-MM-DD HHMM` - Add an event task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Creates a new event task on a particular date and time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "`event borrow book /at 2019-04-18 1400`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "[E][X] borrow book (at: Apr 18 2019, 2.00pm)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "##### `deadline [String] /by YYYY-MM-DD HHMM` - Add a deadline task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Creates a new deadline task on a particular date and time"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "`deadline return book /at 2019-04-26 1800`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "[D][X] return book (at: Apr 26 2019, 6.00pm)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "##### `list` - Lists all tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Lists all the saved tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "1.[T][X] read book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "2.[E][X] borrow book (at: Apr 18 2019, 2.00pm)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "3.[D][X] return book (at: Apr 26 2019, 6.00pm)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "##### `done [Integer]` - Complete a task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Completes a task according to the task number provided"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "##### `delete [Integer]` - Deletes a task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Deletes a task according to the task number provided"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "KendrewChan": 93
    }
  },
  {
    "path": "src/main/java/Duke/Errors/DateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type DateFormatException exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class DateFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new DateFormatException exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public DateFormatException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(\"☹ OOPS!!! Please enter date format as yyyy-mm-dd hhmm, e.g. 2019-12-01 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 13
    }
  },
  {
    "path": "src/main/java/Duke/Errors/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Deadline exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class DeadlineException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Deadline exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public DeadlineException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(\"☹ OOPS!!! Please include a /by\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 13
    }
  },
  {
    "path": "src/main/java/Duke/Errors/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Duke exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Duke exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param errorMessage the error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 15
    }
  },
  {
    "path": "src/main/java/Duke/Errors/DuplicateTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type DuplicateTaskException command exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class DuplicateTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new DuplicateTaskException command exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public DuplicateTaskException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(\"☹ OOPS!!! That is a duplicate task!!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 13
    }
  },
  {
    "path": "src/main/java/Duke/Errors/EmptyDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Empty desc exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class EmptyDescException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Empty desc exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public EmptyDescException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(\"☹ OOPS!!! The description cannot be empty\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 13
    }
  },
  {
    "path": "src/main/java/Duke/Errors/EventTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Event task exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class EventTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Event task exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public EventTaskException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(\"☹ OOPS!!! Please include a /at\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 13
    }
  },
  {
    "path": "src/main/java/Duke/Errors/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Invalid command exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Invalid command exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(\"☹ OOPS!!! That is an invalid command\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 13
    }
  },
  {
    "path": "src/main/java/Duke/Errors/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.errors;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Invalid index exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Invalid index exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(\"☹ OOPS!!! The item does not exist within the list\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 13
    }
  },
  {
    "path": "src/main/java/Duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.fxml.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Launcher."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * The entry point of application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param args the input arguments"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 19
    }
  },
  {
    "path": "src/main/java/Duke/Main/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.DeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.EmptyDescException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.EventTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Todo command string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param arr     the arr"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param comText the com text"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param tasks   the tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String todoCommand(String[] arr, String comText, TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new EmptyDescException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            Task todo \u003d new Todo(comText, \"0\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.addTask(todo.getStringArr());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    \"Got it. I\u0027ve added this task:\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                            \"\\n%s\\nNow you have %d tasks in the list.\", todo,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    tasks.getSize()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Event command string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param arr     the arr"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param comText the com text"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param tasks   the tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String eventCommand(String[] arr, String comText, TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        int eIdx \u003d comText.lastIndexOf(\"/at\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new EmptyDescException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } else if (eIdx \u003d\u003d -1 || comText.length() \u003d\u003d (eIdx + 3)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new EventTaskException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String desc \u003d comText.substring(0, eIdx - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String at \u003d comText.substring(eIdx + 4, comText.length()).trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            LocalDateTime eventDate \u003d Parser.strToDate(at);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            Task event \u003d new Event(desc, \"0\", eventDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.addTask(event.getStringArr());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    \"Got it. I\u0027ve added this task:\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                            \"\\n%s\\nNow you have %d tasks in the list.\", event,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    tasks.getSize()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Deadline command string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param arr     the arr"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param comText the com text"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param tasks   the tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String deadlineCommand(String[] arr, String comText, TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        int dIdx \u003d comText.lastIndexOf(\"/by\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new EmptyDescException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } else if (dIdx \u003d\u003d -1 || comText.length() \u003d\u003d (dIdx + 3)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new DeadlineException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String desc \u003d comText.substring(0, dIdx - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String by \u003d comText.substring(dIdx + 4, comText.length()).trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            LocalDateTime deadlineDate \u003d Parser.strToDate(by);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            Task deadline \u003d new Deadline(desc, \"0\", deadlineDate);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.addTask(deadline.getStringArr());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    \"Got it. I\u0027ve added this task:\" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                            \"\\n%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    deadline, tasks.getSize()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Done command string."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param arr     the arr"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param comText the com text"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param tasks   the tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String doneCommand(String[] arr, String comText, TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (arr.length !\u003d 2) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        int doneNum \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (doneNum \u003e tasks.getSize() || doneNum \u003c 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            Task item \u003d tasks.completeTask(doneNum);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    \"Nice! I\u0027ve marked this task as done:\\n%s\","
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    item"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            );"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Delete command string."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param arr     the arr"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param comText the com text"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param tasks   the tasks"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String deleteCommand(String[] arr, String comText, TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (arr.length !\u003d 2) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        int deleteNum \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (deleteNum \u003e tasks.getSize() || deleteNum \u003c 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            Task item \u003d tasks.deleteTask(deleteNum);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    \"Noted. I\u0027ve removed this task:\\n%s\" + \"\\nNow you have %d tasks in the list.\", item,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                    tasks.getSize()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            );"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Find command string."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param comText the com text"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param tasks   the tasks"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String findCommand(String comText, TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d tasks.findTasks(comText);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                \"Here are the matching tasks in your list:\\n%s\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                Ui.getList(foundTasks)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 169
    }
  },
  {
    "path": "src/main/java/Duke/Main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * Duke is a chatbot that allows crud operations, and can add three different types of task,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * namely todo, events, and deadlines"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            this.tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the response"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return this.ui.commandParser(input, this.tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 37
    }
  },
  {
    "path": "src/main/java/Duke/Main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.InvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.DateFormatException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Parser."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Converts a date string into LocalDateTime object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param by the by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return LocalDateTime object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static LocalDateTime strToDate(String by) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] arr \u003d by.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        LocalDate localDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                // Only date provided"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                String date \u003d arr[0].replace(\"/\", \"-\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                localDateTime \u003d localDate.atTime(0, 0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            } else if (arr.length \u003d\u003d 2 \u0026\u0026 arr[1].length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                // Date and time provided"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                String date \u003d arr[0].replace(\"/\", \"-\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                String time \u003d arr[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                int hours \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                int minutes \u003d Integer.parseInt(time.substring(2, 4));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                localDateTime \u003d localDate.atTime(hours, minutes);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            return localDateTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new DateFormatException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Parses a LocalDateTime object into a String for printing on Duke"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param datetime LocalDateTime object"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return Parsed String"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String parseDateTime(LocalDateTime datetime) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h.mma\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 59
    }
  },
  {
    "path": "src/main/java/Duke/Main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param filepath the filepath"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        //Create the file if it does not exist"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            System.out.println(\"Error occurred while creating file in Storage\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Resets the entire txt file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private void resetFile() throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath, false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Appends string to txt file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param textToAppend the text to append"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws IOException the io exception"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        bw.write(textToAppend);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Returns the entire txt file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return List of Tasks from file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public List\u003cTask\u003e getFileContents() throws Exception {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        FileReader fr \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String line \u003d br.readLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String[] arr \u003d line.split(\",\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String type \u003d arr[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String checked \u003d arr[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String desc \u003d arr[2];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                Task todo \u003d new Todo(desc, checked);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                lst.add(todo);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                Task event \u003d new Event(desc, checked, Parser.strToDate(arr[3]));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                lst.add(event);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                Task deadline \u003d new Deadline(desc, checked, Parser.strToDate(arr[3]));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                lst.add(deadline);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            line \u003d br.readLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Rewrites the file contents, each line corresponding to each element of list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param lst the lst"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void rewriteFileContents(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            resetFile();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                String[] arr \u003d lst.get(i).getStringArr();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                String s \u003d Task.stringFormat(arr);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                appendToFile(s);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 119
    }
  },
  {
    "path": "src/main/java/Duke/Main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.DuplicateTaskException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * The Storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param storage the storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "           - Values are constantly updated to prevent User\u0027s data"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "           from disappearing if they quit halfway through."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "           - This however reduces the efficiency as it has to"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "           pull and push to the txt file each time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "         */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Gets list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public List\u003cTask\u003e getList() throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return storage.getFileContents();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Checks if index is within acceptable range"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param i index for fileContents"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param fileContents List of Tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private void checkIndex(int i, List\u003cTask\u003e fileContents) throws Exception {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        boolean greaterThanOne \u003d i \u003e 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        boolean smallerThanFileSize \u003d i \u003c\u003d fileContents.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        assert (greaterThanOne || smallerThanFileSize) : \"Index out of range\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (!(greaterThanOne \u0026\u0026 smallerThanFileSize)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Pulls from txt file into a Task object"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param i Line to get"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return Task object"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Task getTask(int i) throws Exception {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        List\u003cTask\u003e fileContents \u003d storage.getFileContents();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        checkIndex(i, fileContents);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return fileContents.get(i - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Adds a Task into txt file as a string"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param arr Array of respective values representing a Task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void addTask(String[] arr) throws Exception {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        List\u003cTask\u003e fileContents \u003d storage.getFileContents();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        // We append first since it helps us to parse into the correct format"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String dataToStore \u003d Task.stringFormat(arr);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        storage.appendToFile(dataToStore);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        // Check for duplicate and delete"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        int newFileSize \u003d getSize();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        Task addedTask \u003d getTask(newFileSize);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        for (int i \u003d 0; i \u003c fileContents.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            if ((fileContents.get(i)).equals(addedTask)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                // Delete newly added task if it\u0027s a duplicate"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                deleteTask(newFileSize);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Completes a Task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param i Line to update"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return Completed Task object"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Task completeTask(int i) throws Exception {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        List\u003cTask\u003e fileContents \u003d storage.getFileContents();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        checkIndex(i, fileContents);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        Task t \u003d fileContents.get(i - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        fileContents.get(i - 1).setStatus(\"1\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        storage.rewriteFileContents(fileContents);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Deletes a Task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param i Line to delete"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return Delete Task object"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Task deleteTask(int i) throws Exception {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        List\u003cTask\u003e fileContents \u003d storage.getFileContents();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        checkIndex(i, fileContents);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        Task t \u003d fileContents.get(i - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        fileContents.remove(i - 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        storage.rewriteFileContents(fileContents);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Find List of Tasks by filter"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param filter Text to filter Task Descriptions"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return List of filtered Tasks"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public List\u003cTask\u003e findTasks(String filter) throws Exception {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        List\u003cTask\u003e filteredContents \u003d storage.getFileContents()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            .stream()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            .filter(Task -\u003e Task.getDescription().contains(filter))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return filteredContents;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Gets total number of lines on txt"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return size size"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public int getSize() throws Exception {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        List\u003cTask\u003e fileContents \u003d storage.getFileContents();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return fileContents.size();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 161
    }
  },
  {
    "path": "src/main/java/Duke/Main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Ui."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Show loading error."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        System.out.println(\"☹ OOPS!!! An error occurred while loading from the .txt file\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Gets the provided List"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param lst List of Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String getList(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d lst.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            Task item \u003d lst.get(i - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            s +\u003d String.format(\"%d.%s\", i, item);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            s +\u003d (i \u003d\u003d lst.size()) ? \"\" : \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Parses String array into String"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param strArr array of String"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return parsed String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String textParser(String[] strArr) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String comText \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        for (int i \u003d 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            comText +\u003d strArr[i] + \" \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return comText.trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Takes the input from user, runs the relevant command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param sentence user input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param tasks tasks handler to interact with database"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return output to acknowledge user\u0027s command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String commandParser(String sentence, TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] arr \u003d sentence.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String command \u003d arr[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String comText \u003d textParser(arr);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String returnStr;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                returnStr \u003d Command.todoCommand(arr, comText, tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                returnStr \u003d Command.deadlineCommand(arr, comText, tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                returnStr \u003d Command.eventCommand(arr, comText, tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                returnStr \u003d Command.findCommand(comText, tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                returnStr \u003d Ui.getList(tasks.getList());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                returnStr \u003d Command.doneCommand(arr, comText, tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                returnStr \u003d Command.deleteCommand(arr, comText, tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                returnStr \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            returnStr \u003d  e.getMessage();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return returnStr;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 97
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.main.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * The By."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param done        the done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param by          the by"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Deadline(String description, String done, LocalDateTime by) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String[] getStringArr() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] stringArr \u003d this.by.toString().split(\"T\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] timeArr \u003d stringArr[1].split(\":\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String t \u003d String.format(\"%s %s%s\", stringArr[0], timeArr[0], timeArr[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] arr \u003d { \"D\", super.done, super.description, t };"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + Parser.parseDateTime(this.by) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 42
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.main.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * The At."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param done        the done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param at          the at"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Event(String description, String done, LocalDateTime at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String[] getStringArr() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] stringArr \u003d this.at.toString().split(\"T\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] timeArr \u003d stringArr[1].split(\":\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String t \u003d String.format(\"%s %s%s\", stringArr[0], timeArr[0], timeArr[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] arr \u003d { \"E\", super.done, super.description, t };"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + Parser.parseDateTime(this.at) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 42
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.errors.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * The Description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * The Done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    protected String done;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param done        the done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Task(String description, String done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Getter method to get Task Description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return Task Description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Takes in an array of Task values to form into a String to be stored on database"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param arr String Array of Task values"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return String to be saved to database"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @throws Exception the exception"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static String stringFormat(String[] arr) throws Exception {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        switch (arr[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            s \u003d String.format(\"%s,%s,%s\\n\", arr[0], arr[1], arr[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            s \u003d String.format(\"%s,%s,%s,%s\\n\", arr[0], arr[1], arr[2], arr[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            s \u003d String.format(\"%s,%s,%s,%s\\n\", arr[0], arr[1], arr[2], arr[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Sets Status of Task to be done or not."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param checked String \"0\" to represent false, and \"1\" for true"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void setStatus(String checked) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        this.done \u003d checked;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * abstract object for child classes to return Task as a String Array of values"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return String Array of values"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public abstract String[] getStringArr();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        if (!(o instanceof Task)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        Task c \u003d (Task) o;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        // Compare the data members and return accordingly"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return description.equals(c.description);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String icon \u003d this.done.equals(\"1\") ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return String.format(\"%s %s\", icon, this.description);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 100
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * The type Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Instantiates a new Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param done        the done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public Todo(String description, String done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String[] getStringArr() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] arr \u003d {\"T\", super.done, super.description};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 27
    }
  },
  {
    "path": "src/main/java/Duke/fxml/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.fxml;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private DialogBox(String text, Image img, boolean isUser) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author lye-jw"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        //Reused from https://github.com/lye-jw/duke with minor modifications"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        // Circle clipping starts from top left corner of image"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setClip(new Circle(50, 50, 50));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Color color \u003d isUser ? Color.LIGHTSKYBLUE : Color.KHAKI;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setBackground("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                new Background("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                        new BackgroundFill("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                                color,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                                new CornerRadii(10.0),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                                new Insets(5, 5, 5, 5)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                )"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Gets user dialog."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param text the text"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param img  the img"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the user dialog"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return new DialogBox(text, img, true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Gets duke dialog."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param text the text"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param img  the img"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @return the duke dialog"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        var db \u003d new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "KendrewChan": 79
    }
  },
  {
    "path": "src/main/java/Duke/fxml/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.fxml;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 32
    }
  },
  {
    "path": "src/main/java/Duke/fxml/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package duke.fxml;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.beans.binding.Bindings;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Initialize."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        sendButton.styleProperty().bind(Bindings.when(sendButton.hoverProperty())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                .then(\"-fx-background-color: #45ACFD; -fx-text-fill: #FFFFFF\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                .otherwise(\"-fx-background-color: #F6F6F6\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Sets duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * @param d the d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 68
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.fxml.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 19
    }
  },
  {
    "path": "src/test/java/Duke/Main/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "package Duke.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "import Duke.Tasks.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void StorageTest(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        Storage storage \u003d new Storage(\"notapath\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            List\u003cTask\u003e lst \u003d storage.getFileContents();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            // Error should be thrown here"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            fail(\"Storage class not supposed to accept random paths\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            String errMsg \u003d \"java.io.FileNotFoundException: notapath (No such file or directory)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            assertEquals(e.toString(), errMsg);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void ParserTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                Parser.parseDateTime(Parser.strToDate(\"2019-04-18 1800\")),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "                \"Apr 18 2019, 6.00PM\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    public void TaskLiskTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        Storage storage \u003d new Storage(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        TaskList tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] todo1 \u003d {\"T\", \"0\", \"write book\"};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] event2 \u003d {\"E\", \"0\", \"borrow book\", \"2019-04-18 1300\"};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        String[] deadline3 \u003d {\"D\", \"0\", \"return book\", \"2019-04-19 1800\"};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.addTask(todo1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.addTask(event2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.addTask(deadline3);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.completeTask(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.completeTask(2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.completeTask(3);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.deleteTask(tasks.getSize());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.deleteTask(tasks.getSize());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            tasks.deleteTask(tasks.getSize());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            assertTrue(true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "//            System.out.println(\"Working Directory \u003d \" + System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "            fail(\"One of the TaskList has failed\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 59
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "dab"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "todo yeet"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "deadline hehe"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "deadline haha /by dab"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "event hoho"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "event huhu /at yeet"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "done 01"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "KendrewChan": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "SET MY_PATH\u003d\"C:\\Users\\ambro\\Downloads\\nus\\~y2s1\\cs2103\\ip\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\duke.main.Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KendrewChan"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "KendrewChan": 5
    }
  }
]
