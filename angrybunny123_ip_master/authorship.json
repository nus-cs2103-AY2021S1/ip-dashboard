[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public Deadline (String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "angrybunny123": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public static void start() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "            Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "            while (userInput.hasNext()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                String input \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                String[] splitArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    System.out.println(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                        System.out.println((i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                } else if (splitArr.length \u003d\u003d 2 \u0026\u0026 splitArr[0].equals(\"done\") \u0026\u0026 Integer.parseInt(splitArr[1]) \u003e 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    int index \u003d Integer.parseInt(splitArr[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    if (index \u003e tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                        throw new DukeException(\"OOPS!!! That task number does not exist.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    tasks.get(index - 1).setDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    System.out.println(tasks.get(index - 1).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                } else if (splitArr.length \u003d\u003d 2 \u0026\u0026 splitArr[0].equals(\"delete\") \u0026\u0026 Integer.parseInt(splitArr[1]) \u003e 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    int index \u003d Integer.parseInt(splitArr[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    if (index \u003e tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                        throw new DukeException(\"OOPS!!! That task number does not exist.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    Task deletedTask \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    System.out.println(deletedTask.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    System.out.println(\"Now, you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    switch (splitArr[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            if (splitArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            Task newTask \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            tasks.add(newTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            System.out.println(newTask.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            if (splitArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                                throw new DukeException(\"Please include the date of the deadline!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            String desc \u003d input.substring(9, index - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            String date \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            Task newDeadline \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            tasks.add(newDeadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            System.out.println(newDeadline.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            if (splitArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            int ind \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            if (ind \u003d\u003d -1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                                throw new DukeException(\"Please include the date of the event!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            String des \u003d input.substring(6, ind - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            String dat \u003d input.substring(ind + 4);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            Task newEvent \u003d new Event(des, dat);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            tasks.add(newEvent);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            System.out.println(newEvent.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            System.out.println(\"dada\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                            throw new DukeException(\"OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                    System.out.println(\"Now, you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "angrybunny123": 91
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        return \"********ERROR********\\n\" + this.message + \"\\n********ERROR********\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "angrybunny123": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public String start;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public Event(String description, String start) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + start + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "angrybunny123": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "angrybunny123": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "            super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "            return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "angrybunny123": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "deadline cut my nails /by tomorrow"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "deadline shave my beard /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "event project meeting /at 2pm later"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "angrybunny123": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "angrybunny123": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "angrybunny123"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "angrybunny123": 1
    }
  }
]
