[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    mainClassName \u003d \"main.java.duke.Duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 8,
      "-": 45
    }
  },
  {
    "path": "data/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     1.[D][?] he (by: sunday)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     2.[D][?] to (by: sunday)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     3.[T][?] hey"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     4.[D][?] tod (by: 2020/12/21)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     5.[D][?] r (by: Dec. 20 2020 23:02)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     6.[T][?] heyyy"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 6
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates a type of task called deadline which has a deadline due on."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Deadline(String taskname, boolean isDone, String deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(taskname, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.dateTime \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Updates the deadline time with the user input is it fits the required"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * format of yyyy/MM/dd HHmm."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @throws DukeException If the format of the input is not yyyy/MM/dd HHmm."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void updateDateTime() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            if (this.deadline.length() \u003d\u003d 15) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                this.dateTime \u003d LocalDateTime.parse(this.deadline, formatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            throw new DukeException(\"The format for a deadline with specific date\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    \"and time should be yyyy/MM/dd HHmm.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Returns the string representation of a deadline"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @return The string representation."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        if (this.dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 51
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        l.setWrapText(true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        iv.setFitWidth(100.0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        iv.setFitHeight(100.0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.getChildren().addAll(l, iv);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 43
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates the Duke to run the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private final TaskList list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        storage \u003d new Storage(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Runs the Duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Instruction thisInstruction;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Deadline thisDeadline;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String thisTaskname;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String thisTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Task thisTask;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        int number;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            thisInstruction \u003d parser.load(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                if (thisInstruction \u003d\u003d Instruction.LIST) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    ui.printList(list.getList());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else if (thisInstruction \u003d\u003d Instruction.DONE) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    number \u003d Character.getNumericValue(input.charAt(input.length() - 1));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTask \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTask.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    list.set(number - 1, thisTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    ui.markAsDone(thisTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    storage.updateList(list.getList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else if (thisInstruction \u003d\u003d Instruction.DELETE) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    number \u003d Character.getNumericValue(input.charAt(input.length() - 1));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTask \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    list.remove(number - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    ui.deletedTask(thisTask, list.getList());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    storage.updateList(list.getList());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else if (thisInstruction \u003d\u003d Instruction.FIND) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    ui.printFoundTask(keyword, list.getList());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    if (thisInstruction \u003d\u003d Instruction.DEADLINE) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            throw new DukeException(\"     The taskname of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        ui.noProblem();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTaskname \u003d input.substring(9, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTime \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisDeadline \u003d new Deadline(thisTaskname, false, thisTime);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisDeadline.updateDateTime();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        list.add(thisDeadline);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    } else if (thisInstruction \u003d\u003d Instruction.EVENT) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            throw new DukeException(\"     The taskname of a event cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        ui.noProblem();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTaskname \u003d input.substring(6, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTime \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        list.add(new Event(thisTaskname, false, thisTime));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    } else if (thisInstruction \u003d\u003d Instruction.TODO) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            throw new DukeException(\"     The taskname of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        ui.noProblem();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTaskname \u003d input.substring(5);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        list.add(new Todo(thisTaskname, false));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        throw new DukeException(\"     I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    storage.updateList(list.getList());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    ui.updatedTask(list.getList());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                ui.printError(ex);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Starts the running of the Duke."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        new Duke(\"data/Duke.txt\").run();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        userInput.setOnAction((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return getOutput(input);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    private String getOutput(String input) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Instruction thisInstruction;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Deadline thisDeadline;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String thisTaskname;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String thisTime;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Task thisTask;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        int number;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        thisInstruction \u003d parser.load(input);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            if (thisInstruction \u003d\u003d Instruction.LIST) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                output \u003d ui.printListMessage(list.getList());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (thisInstruction \u003d\u003d Instruction.DONE) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                number \u003d Character.getNumericValue(input.charAt(input.length() - 1));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisTask \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisTask.markAsDone();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                list.set(number - 1, thisTask);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                output \u003d ui.markAsDoneMessage(thisTask);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                storage.updateList(list.getList());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (thisInstruction \u003d\u003d Instruction.DELETE) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                number \u003d Character.getNumericValue(input.charAt(input.length() - 1));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisTask \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                list.remove(number - 1);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                output \u003d ui.deletedTaskMessage(thisTask, list.getList());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                storage.updateList(list.getList());"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (thisInstruction \u003d\u003d Instruction.FIND) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                output \u003d ui.printFoundTaskMessage(keyword, list.getList());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (thisInstruction \u003d\u003d Instruction.BYE) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                output \u003d ui.byeMessage();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                if (thisInstruction \u003d\u003d Instruction.DEADLINE) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        throw new DukeException(\"     The taskname of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    output \u003d ui.noProblemMessage();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTaskname \u003d input.substring(9, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTime \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisDeadline \u003d new Deadline(thisTaskname, false, thisTime);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisDeadline.updateDateTime();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    list.add(thisDeadline);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else if (thisInstruction \u003d\u003d Instruction.EVENT) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        throw new DukeException(\"     The taskname of a event cannot be empty.\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    output \u003d ui.noProblemMessage();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTaskname \u003d input.substring(6, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTime \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    list.add(new Event(thisTaskname, false, thisTime));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else if (thisInstruction \u003d\u003d Instruction.TODO) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        throw new DukeException(\"     The taskname of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    output \u003d ui.noProblemMessage();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTaskname \u003d input.substring(5);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    list.add(new Todo(thisTaskname, false));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    throw new DukeException(\"     I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                storage.updateList(list.getList());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                output \u003d output + ui.updatedTaskMessage(list.getList());"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            output \u003d ui.printErrorMessage(ex);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } "
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 279,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates a customised exception with customised error message."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 10
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates a type of task called event which takes place at certain period of time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Event(String taskname, boolean isDone, String time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(taskname, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Returns the string representation of a event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @return The string representation."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 23
    }
  },
  {
    "path": "src/main/java/duke/Instruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Extracts a list of instructions for reference."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public enum Instruction {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    LIST, DONE, DELETE, FIND, DEADLINE, EVENT, TODO, OTHERS, BYE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 8
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 12
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates a parser which makes sense of the user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Returns a type of Instruction according to the user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @param input The input from the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @return The type of instruction."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Instruction load(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.LIST;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.DONE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.DELETE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.FIND;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.DEADLINE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.EVENT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.TODO;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.BYE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            return Instruction.OTHERS;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 34
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates a storage container that handles the storage of the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String filepath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Updates the list of tasks in the storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @param list The list of tasks to be updated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @throws DukeException If the file cannot be written."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void updateList(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            FileWriter fw1 \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            FileWriter fw2 \u003d new FileWriter(filepath, true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                Task thisTask \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    fw1.write(\"     \" + i + \".\" + thisTask.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    fw2.write(\"     \" + i + \".\" + thisTask.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            fw1.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            fw2.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Returns the list of tasks contained in the storage in the form of arraylist."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @return the arraylist of tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String thisLine;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        char identifier;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        boolean status;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            if (!(new File(filepath).exists())) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                throw new DukeException(\"There is not such file.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    while (s.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        identifier \u003d thisLine.charAt(8);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        status \u003d thisLine.charAt(11) \u003d\u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        if (identifier \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            Deadline thisDeadline \u003d new Deadline(thisLine.substring(14, thisLine.indexOf(\u0027(\u0027) - 2),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                                    status, thisLine.substring((thisLine.indexOf(\u0027:\u0027) + 2), thisLine.indexOf(\u0027)\u0027)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            thisDeadline.updateDateTime();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            list.add(thisDeadline);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        } else if (identifier \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            Event thisEvent \u003d new Event(thisLine.substring(14, thisLine.indexOf(\u0027(\u0027) - 2),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                                    status, thisLine.substring((thisLine.indexOf(\u0027:\u0027) + 2), thisLine.indexOf(\u0027)\u0027)));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            list.add(thisEvent);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            Todo thisTodo \u003d new Todo(thisLine.substring(14), status);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            list.add(thisTodo);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 89
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates a task which can be further classified into different categories."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String taskname;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Task(String taskname, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.taskname \u003d taskname;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Returns the status icon to indicate whether the task has been done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @return The status icon."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Marks a certain task as done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Returns the string representation of a task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @return The string representation."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.taskname;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 40
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates a task list which contains a arraylist and a list of operations can"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * be performed on it. The javadoc for methods in this class are omitted."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Task get(int number) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return this.list.get(number);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void set(int number, Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.list.set(number, task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void remove(int number) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.list.remove(number);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 34
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates a type of task called todo which doesn\u0027t have a specified time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Todo extends Task  {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Todo(String taskname, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(taskname, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Returns the string representation of a todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @return The string representation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 20
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Creates an ui interface for interactions with the product user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out greeting messages to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    Hey there! This is Duke here~\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    How may I help you today?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out \"no problem\" messages to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void noProblem() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"     No problem! I\u0027ve added this task to the list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String noProblemMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"     No problem! I\u0027ve added this task to the list:\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out \"mark as done\" messages to the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void markAsDone(Task thisTask) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"       \" + thisTask.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String markAsDoneMessage(Task thisTask) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                + \"       \" + thisTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out \"deleted task\" messages to the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void deletedTask(Task thisTask, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"     Sure! I\u0027ve removed this task for you:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"       \" + thisTask.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String deletedTaskMessage(Task thisTask, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"     Sure! I\u0027ve removed this task for you:\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                + \"       \" + thisTask.toString() + \"\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                + \"     Now you have \" + list.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out \"updated task\" messages to the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @param list The list of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void updatedTask(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"       \" + list.get(list.size() - 1));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String updatedTaskMessage(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"       \" + list.get(list.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                + \"     Now you have \" + list.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out a list of tasks to the user."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Task thisTask;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            thisTask \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            System.out.println(\"     \" + i + \".\" + thisTask.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String printListMessage(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Task thisTask;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String output \u003d \"     Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            thisTask \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            output \u003d output + \"     \" + i + \".\" + thisTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Search the tasks that contain the keyword in the list of tasks provided."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @param keyword The keyword for searching the tasks."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * @param list The list of tasks to be searched."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void printFoundTask(String keyword, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Task thisTask;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        for (int i \u003d 1, j \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            thisTask \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            if (thisTask.taskname.contains(keyword)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                System.out.println(\"     \" + j + \".\" + thisTask.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String printFoundTaskMessage(String keyword, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Task thisTask;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String output \u003d \"     Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        for (int i \u003d 1, j \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            thisTask \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            if (thisTask.taskname.contains(keyword)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                output \u003d output + \"     \" + j + \".\" + thisTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out the a line to the user."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out the error messages to the user."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void printError(DukeException ex) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String printErrorMessage(DukeException ex) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return ex.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     * Prints out bye bye messages to the user."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    Bye bye~ See ya!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String byeMessage() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"    Bye bye~ See ya!\\n\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 162
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Contains a task case to test the updateDateTime method in the Deadline class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String dateTime1 \u003d \"2020/08/27 2359\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String dateTime2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"CS2103\", false, dateTime1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            deadline.updateDateTime();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        dateTime2 \u003d deadline.deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        assertEquals(dateTime1, dateTime2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 23
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " * Contains a test case to test the load method in the Parser class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public void Test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String input \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Instruction instruction \u003d parser.load(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        assertEquals(instruction, Instruction.EVENT);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "todo heyyy"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 1,
      "-": 20
    }
  }
]
