[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                \"Send me a task in one of the following formats and I\u0027ll store it for you.\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                \"\\tTodo: \\\"todo \u003cdescription\u003e\\\"\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                \"\\tDeadline: \\\"deadline \u003cdescription\u003e /by \u003cdate\u003e\\\"\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                \"\\tEvent: \\\"event \u003cdescription\u003e /at \u003ctime interval\u003e\\\"\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                \"Send \\\"list\\\" to see all tasks.\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                \"Send \\\"done \u003citem number\u003e\\\" to mark an item as done\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                \"Send \\\"delete \u003citem number\u003e\\\" to delete anj item from the list\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                \"Send \\\"bye\\\" to end our conversation.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            String[] strings \u003d input.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                switch (convertToEnum(strings[0])) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"Theres currently nothing in your list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                                System.out.printf(\"%d. %s%n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            int itemNumber \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            tasks.get(itemNumber - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"Nice, I\u0027ve marked this item as done:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"\\t\" + tasks.get(itemNumber - 1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        } catch (NumberFormatException | IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            throw new DukeException(\"Please key in a valid number for \\\"done\\\"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            int itemNumber \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"\\t\" + tasks.get(itemNumber - 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            tasks.remove(itemNumber - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"You now have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        } catch (NumberFormatException | IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            throw new DukeException(\"Please key in a valid number for \\\"delete\\\"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        String task \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, strings.length));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        if (task.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        Task todoTask \u003d new Todo(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        tasks.add(todoTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + todoTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        System.out.println(\"You now have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            task \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, strings.length));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            String description \u003d task.split(\" /by \")[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            String by \u003d task.split(\" /by \")[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            Task deadlineTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + deadlineTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"You now have \" + tasks.size() + \" in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            throw new DukeException(\"Please key in a valid deadline command!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            task \u003d String.join(\" \", Arrays.copyOfRange(strings, 1, strings.length));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            String description \u003d task.split(\" /at \")[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            String at \u003d task.split(\" /at \")[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            Task eventTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            tasks.add(eventTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + eventTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            System.out.println(\"You now have \" + tasks.size() + \" in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                            throw new DukeException(\"Please key in a valid event command!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                        throw new DukeException(\"Please key in a correct command.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                System.err.println(ex.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        System.out.println(\"Bye, hope to chat again soon!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    private static Command convertToEnum(String string) throws DukeException{"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        switch (string) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                return Command.BYE;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                return Command.LIST;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                return Command.DONE;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                return Command.DELETE;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                return Command.TODO;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                return Command.DEADLINE;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                return Command.EVENT;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "                throw new DukeException(\"Please key in a correct command.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 114,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        super(\"☹ OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        this.at \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 18
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamjamestan"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "iamjamestan": 3,
      "-": 35
    }
  }
]
