[
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public ByeCommand() { }"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 7
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws IOException { }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    int code \u003d 1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.date \u003d LocalDate.parse(this.by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void invalidInput() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        invalidInput(\"OOPS!!! The format of the Deadline is wrong.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + this.dateFormatted() + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 25
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public DeadlineCommand(String deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //add event task to list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        tasks.deadline(this.deadline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //write to file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String s \u003d storage.genList(tasks.getTaskLs());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        storage.writeToFile(\"data/duke.rtf\", s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 19
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String delete;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public DeleteCommand(String delete) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.delete \u003d delete;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //add event task to list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        tasks.delete(this.delete);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //write to file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String s \u003d storage.genList(tasks.getTaskLs());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        storage.writeToFile(\"data/duke.rtf\", s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 19
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String done;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public DoneCommand(String done) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //remove event task from list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        tasks.done(this.done);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //write to file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String s \u003d storage.genList(tasks.getTaskLs());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        storage.writeToFile(\"data/duke.rtf\", s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import org.w3c.dom.ls.LSOutput;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.sql.Array;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.sql.SQLOutput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public Duke() throws FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            storage \u003d new Storage(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        UI.intro();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            String toPrint \u003d ui.nextInput();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            ui.dividerLine(); //show the divider line (\"_____\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            Command c \u003d parser.parse(toPrint);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            ui.dividerLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "//    public static boolean isValidDate(String dateStr) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "//            LocalDate.parse(dateStr);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "//        } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "//            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "//        return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "//    }"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 62,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    int code \u003d 2;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.date \u003d LocalDate.parse(this.at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void invalidInput() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        invalidInput(\"OOPS!!! The format of the Event is wrong.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.dateFormatted() + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 23
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public EventCommand(String event) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //add event task to list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        tasks.event(this.event);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //write to file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String s \u003d storage.genList(tasks.getTaskLs());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        storage.writeToFile(\"data/duke.rtf\", s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 19
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String list;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public ListCommand(String str) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.list \u003d str;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //gets the list of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        tasks.list(this.list);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static Command parse(String toPrint) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            if (toPrint.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                return new ListCommand(toPrint);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            else if (toPrint.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                return new DoneCommand(toPrint);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            else if (toPrint.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                return new DeleteCommand(toPrint);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            else if (toPrint.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                return new TodoCommand(toPrint);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            else if (toPrint.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                return new EventCommand(toPrint);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            else if (toPrint.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                return new DeadlineCommand(toPrint);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            else if (toPrint.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 33
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    static String rtfPath \u003d \"data/duke.rtf\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    static String newLine \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public Storage(TaskList tasksLs) throws FileNotFoundException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        readFromFile(rtfPath, tasksLs);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void readFromFile(String filePath, TaskList taskLs) throws FileNotFoundException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            String eachTask \u003d s.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            if (eachTask.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                String[] description \u003d eachTask.split(\"%\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                Todo todoTask \u003d new Todo(description[2]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                taskLs.add(todoTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            } else if (eachTask.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                String[] description \u003d eachTask.split(\"%\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                Deadline deadlineTask \u003d new Deadline(description[2], description[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                taskLs.add(deadlineTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            } else if (eachTask.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                String[] description \u003d eachTask.split(\"%\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                Event eventTask \u003d new Event(description[2], description[3]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                taskLs.add(eventTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            } else {}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static String genList(ArrayList\u003cTask\u003e itemsLs) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        for (Task n : itemsLs) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            if (n instanceof Todo) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                s \u003d s + \"[T]\" + \"%\" +  n.isDone + \"%\" + n.description + newLine;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            } else if (n instanceof Deadline) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                s \u003d s + \"[D]\" + \"%\" + n.isDone + \"%\" + n.description + \"%\" + ((Deadline) n).by + newLine;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            } else if (n instanceof  Event) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                s \u003d s + \"[E]\" + \"%\" + n.isDone + \"%\" + n.description + \"%\" + ((Event) n).at + newLine;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            } else {}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 62
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public String dateFormatted() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void invalidInput(String error) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String errorMsg \u003d \"Error: \" + error;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(errorMsg);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return \"[\" + this.isDone + \"]\" + this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 36
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskLs;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        taskLs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskLs() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return this.taskLs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.taskLs.add(toAdd);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void confused() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String str \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void delete(String toDelete) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String command \u003d toDelete.replaceAll(\"[^\\\\d.]\", \"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        int i \u003d Integer.parseInt(command.trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        Task deletedTask \u003d this.taskLs.get(i-1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.taskLs.remove(i-1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        int numTask \u003d this.taskLs.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(deletedTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"Now you have \" + numTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void list(String toPrint) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.taskLs.forEach(n -\u003e System.out.println(this.taskLs.indexOf(n) + 1 + \". \" + n));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void done(String toPrint) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String command \u003d toPrint.replaceAll(\"[^\\\\d.]\", \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        int indexCommand \u003d Integer.parseInt(command.trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        Task completedTask \u003d this.taskLs.get(indexCommand - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        completedTask.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"[\" + completedTask.getStatusIcon() + \"] \" + completedTask.description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void todo(String toPrint) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            toPrint \u003d toPrint.substring(4);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            if (toPrint.isEmpty()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "                throw new DukeException(\"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            Todo taskTodo \u003d new Todo(toPrint);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            this.taskLs.add(taskTodo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(taskTodo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(\"Now you have \" + this.taskLs.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            Todo.invalidInput();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void event(String toPrint) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            toPrint \u003d toPrint.substring(5);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            String[] arrtoPrint \u003d toPrint.split(\"/at \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            Event taskEvent \u003d new Event(arrtoPrint[0], arrtoPrint[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            this.taskLs.add(taskEvent);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(taskEvent);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(\"Now you have \" + this.taskLs.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            Event.invalidInput();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void deadline(String toPrint) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            toPrint \u003d toPrint.substring(8);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            String[] arrtoPrint \u003d toPrint.split(\"/by \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            Deadline taskDeadline \u003d new Deadline(arrtoPrint[0], arrtoPrint[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            this.taskLs.add(taskDeadline);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(taskDeadline);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            System.out.println(\"Now you have \" + this.taskLs.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "            Deadline.invalidInput();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 101
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    int code \u003d 0;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void invalidInput() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        invalidInput(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 16
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class TodoCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected String todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public TodoCommand(String todo) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.todo \u003d todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //add todo task to list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        tasks.todo(this.todo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //write task to file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        String s \u003d storage.genList(tasks.getTaskLs());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        storage.writeToFile(\"data/duke.rtf\", s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 19
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    protected Scanner myObj;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        this.myObj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public String nextInput() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        return this.myObj.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void dividerLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"______________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    public static void intro() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        //Intro"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 23
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Christopher-LM"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "Christopher-LM": 7
    }
  }
]
