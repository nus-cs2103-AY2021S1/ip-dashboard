[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 16,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Statistics stats;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Duke(String filePathTasks, String filePathStats) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            storage \u003d new Storage(filePathTasks, filePathStats);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            stats \u003d new Statistics(storage.loadStats());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            stats \u003d new Statistics();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static Duke createDuke() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return new Duke(\"data/tasks.txt\", \"data/stats.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String getWelcome() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Generates Duke\u0027s response to user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param input A string representing the user input from text box."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response to user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            // interpret user input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            assert tasks !\u003d null : \"task list should not be uninitialised\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            assert ui !\u003d null : \"ui should not be uninitialised\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            assert storage !\u003d null : \"storage should not be uninitialised\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return c.execute(tasks, storage, stats);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 58,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents a Duke specific error."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return \"☹ OOPSIE!! \" + super.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 15
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents an application launcher."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Duke duke \u003d Duke.createDuke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String welcomeMessage \u003d duke.getWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                DialogBox.getDukeDialog(welcomeMessage, dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (input.equals(\"exit\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 61
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.OwoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.StatsCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.command.UwuCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Returns the command to be executed corresponding to the first word in the string of user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param userInput A string of text user typed into command line."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return Command to be executed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If Duke does not understand user command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String[] splitCommand \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String commandWord \u003d splitCommand[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case OwoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new OwoCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case UwuCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new UwuCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case StatsCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new StatsCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case FindCommand.COMMAND_WORD_FIND:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return prepareFind(splitCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return prepareDelete(splitCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return prepareDone(splitCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case AddCommand.COMMAND_WORD_TODO:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case AddCommand.COMMAND_WORD_DEADLINE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        case AddCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return prepareAdd(splitCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"I don\u0027t understand what you\u0027re saying HMM...\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareFind(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (input.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new FindCommand(input[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Input is missing some arguments!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareDelete(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (input.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                int taskNum \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                return new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Input is missing some arguments!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareDone(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (input.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                int taskNum \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Input is missing some arguments!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareAdd(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (input.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            switch (input[0]) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                return new AddCommand(new Todo(input[1]));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                return prepareDeadline(input[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                return prepareEvent(input[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                throw new DukeException(\"Couldn\u0027t add item..\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Input is missing some arguments!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String[] deadline \u003d input.split(\" /by \", 2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (deadline.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new AddCommand(new Deadline(deadline[0], deadline[1].replace(\u0027/\u0027, \u0027-\u0027)));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Input is missing some arguments!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static Command prepareEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String[] event \u003d input.split(\" /at \", 2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (event.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return new AddCommand(new Event(event[0], event[1].replace(\u0027/\u0027, \u0027-\u0027)));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Input is missing some arguments!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 130
    }
  },
  {
    "path": "src/main/java/duke/Statistics.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents the statistics about the items managed by the App."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Statistics {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String NUM_TASKS_ADDED \u003d \"Number of things I\u0027ve eaten: \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String NUM_TASKS_DELETED \u003d \"Number of things I\u0027ve thrown up: \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String NUM_TASKS_DONE \u003d \"Number of things I\u0027ve digested: \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private int[] stats;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a Statistics instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Statistics() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.stats \u003d new int[]{0, 0, 0};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a Statistics instance."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param stats An array of statistics about the items managed by the App"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Statistics(int[] stats) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.stats \u003d stats;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Lists statistics about the items managed by the App."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representation of statistics about the items managed by the App"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String getStats() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%s%d\\n%s%d\\n%s%d\", NUM_TASKS_ADDED, stats[0], NUM_TASKS_DELETED, stats[1],"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                NUM_TASKS_DONE, stats[2]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Increase stats on number of tasks added in App by one."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void incrementAddedStats() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.stats[0]++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Increase stats on number of tasks deleted in App by one."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void incrementDeletedStats() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.stats[1]++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Increase stats on number of tasks done in App by one."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void incrementDoneStats() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        stats[2]++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 60
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private String filePathTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private String filePathStats;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private File fileTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private File fileStats;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a Storage instance."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param filePathTasks A string representing the file path tasks are saved to."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException  If unable to create a file in given path."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Storage(String filePathTasks, String filePathStats) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.filePathTasks \u003d filePathTasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.filePathStats \u003d filePathStats;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        fileTasks \u003d new File(this.filePathTasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        fileStats \u003d new File(this.filePathStats);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (!fileTasks.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fileTasks.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                fileTasks.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                throw new DukeException(\"Unable to create task list file...\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (!fileStats.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fileStats.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                fileStats.createNewFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                FileWriter fw \u003d new FileWriter(this.fileStats);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                fw.write( \"0\\n0\\n0\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    throw new DukeException(\"Unable to create statistics file...\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Returns an array list containing tasks from previous session by extracting details"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * of tasks from local file and creating corresponding task objects."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return An array list containing tasks from previous session."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException  If there is no file available to load."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Scanner scanner \u003d new Scanner(this.fileTasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                // extract task details eg. type of task, if it is done, task description and date"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                String[] currLine \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                String typeOfTask \u003d currLine[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                // adds task objects to current task list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                switch (typeOfTask) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    Task todo \u003d new Todo(currLine[2]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    if (Integer.parseInt(currLine[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                        todo.doTask();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    Task deadline \u003d new Deadline(currLine[2], currLine[3]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    if (Integer.parseInt(currLine[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                        deadline.doTask();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    Task event \u003d new Event(currLine[2], currLine[3]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    if (Integer.parseInt(currLine[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                        event.doTask();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    throw new DukeException(\"Trouble encountered when loading file :c\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Unable to load task list file.. :c\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Returns an array of stats from saved local file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return An array of stats."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException  If there is no file available to load or contents in local file is corrupted."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public int[] loadStats() throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        int[] stats \u003d new int[3];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Scanner scanner \u003d new Scanner(this.fileStats);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                stats[i] \u003d scanner.nextInt();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return stats;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Unable to load statistics file.. :c\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Statistics file is corrupted.. :c\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Saves the tasks in the hard disk when the task list changes."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param taskToAdd A string representing details of the task to be added to the file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException  If unable to edit file."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void saveTaskList(String taskToAdd) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            // appends task to local saved file"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.fileTasks, true);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fw.write(taskToAdd + \"\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Error editing file!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Edit the existing tasks in the hard disk when the task list changes."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param newTask A string representing new details of the task already present in the file."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param taskNum Position of task in file."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param delete If the action is to delete the task in file."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException  If unable to edit file."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void editTaskList(String newTask, int taskNum, boolean delete) throws DukeException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(this.filePathTasks)));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (delete) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                fileContent.remove(taskNum - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                fileContent.set(taskNum - 1, newTask);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Files.write(Paths.get(this.filePathTasks), fileContent);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Error editing file!\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Updates the statistics in the hard disk when task items in App changes."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException  If unable to edit file."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void updateStats(int lineNum) throws DukeException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(this.filePathStats)));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            int curr \u003d Integer.parseInt(fileContent.get(lineNum));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            curr++;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fileContent.set(lineNum, String.valueOf(curr));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Files.write(Paths.get(this.filePathStats), fileContent);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Error editing file!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 185
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents the current the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a TaskList instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param taskList An array list of previously saved tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a TaskList instance."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Lists all current tasks in list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representation of all the current tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String listAllTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            res +\u003d String.format(\"%d. %s\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                res +\u003d \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Adds new task to task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param newTask A new task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Marks a task in task list to be done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param taskNum The position of task in task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return The task that has been marked done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If taskNum less than 0 or exceeds total number of tasks in task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Task doneTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Task task \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            task.doTask();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"What are you done with? Gotta specify a valid task number!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Deletes task from task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param taskNum The position of task in task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return The task that has been deleted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If taskNum less than 0 or exceeds total number of tasks in task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Task removeTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Task task \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            taskList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"What are you deleting? Gotta specify a valid task number!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Lists all current tasks in list that matches keyword."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param keyword A string representing the keyword to be found in tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representation of all the current tasks that matches keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String findMatchingTasks(String keyword) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            if (task.getTask().contains(keyword)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                if (count !\u003d 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    res +\u003d \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                res +\u003d String.format(\"%d. %s\", count, task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Returns size of current task list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return Size of current task list"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 121
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Deals with interactions with the user by displaying messages to user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String NAME \u003d \"CHUBS\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String LOGO \u003d \"              ░                                             ░               \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"░░░  \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                                         ████            ░                          \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                                      █▓▒▒▒█                                      \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                             ███████▒█                                    \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                      ██░░░░░░░░██    ██                              \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                  █░░░░░░░░░░░░░█▓▓█                            \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                              █░░░░░░░░░░░░░░░ ██▒█                            \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                              █░░░░░░░░░░░░░░░░░░█                              \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                          █░░░░░░░░░░░░░░░░░░░ █   █                          \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                          █░░░░░░░░░░░░░░░░░░░░█▓█                        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                          █░░██░░░░░░░██░░░░░░░█▓█                        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                          █▒▒██░░░░░░░██▒▒▒░░░░██                          \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                          █▒▒▒░░█░█░█░░░▒▒▒░░░░█                            \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                          █░░░░░░█░█░░░░░░░░░░█▒█                          \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                          █░░░░░░░░░░░░░░░░░░░█▓█                          \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                             █░░░░░░░░░░░░░░░░░█▓▓█                          \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                 ░             ██░░░░░░░░░░░░██    ██                            \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                         ██████████                                      \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                         █░░░░░░░░██                                    \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                         █░░░░░░░░█░█                                  \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"      ░.                            █░█░░░░░░█░█░█                                \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                  █░░░█░░░░█░░░█░░█                              \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                  █░░▓█░░░ █▓░░░███                                \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                     ███   ███    ████                                      \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                                                                        \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                                                                        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"                                                                   ░                                  \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates an Ui instance."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Displays welcome messages to user when Duke starts up."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return \"Hello I am \" + NAME + \"\\n\" + LOGO + \"\\n\" + \"Feed me some stuff! :3\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Reads user command line input and returns that line as a string."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return String of user input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Displays error message to user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param message Error message to be displayed to user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Displays message to user."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param message Message to be displayed to user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        System.out.println(String.format(message));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 85
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents an add command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_ADD_ACKNOWLEDGEMENT \u003d \"*Gobble gobble* the following has been eated OwO:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_ADD_UPDATE \u003d \"Number of thing(s) in my belly has now become \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates an AddCommand instance"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Adds task to current task list, saves the task file in hard disk"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * and displays acknowledgement message that task has been added to user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If unable to either add task or save task file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.saveTaskList(task.saveToString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.updateStats(0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        stats.incrementAddedStats();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%s\\n%s\\n%s%d!\", MESSAGE_ADD_ACKNOWLEDGEMENT, task.toString(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                MESSAGE_ADD_UPDATE, tasks.getTaskCount());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 50
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents a command which is an abstract class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Carries out different actions corresponding to type of command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If unable to either carry out the specific actions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage, Statistics stats) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents a delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_DELETE_ACKNOWLEDGEMENT \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            \"Nooo you can\u0027t take away what you\u0027ve already given me...\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    + \"Okay fine. It\u0027s in my stomach tho... ASDFGUUVHHH!!\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    + \"The following has been removed: \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_DELETE_CONTINUED \u003d \"Now I\u0027m feeling sick :( there\u0027s \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_DELETE_END \u003d \" thing(s) in my belly now...HUNGRY!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a DeleteCommand instance"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param taskNum Position of task to be deleted."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Remove task from current task list, edits the task file in hard disk"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * and displays acknowledgement message that task has been removed to user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If unable to either remove task or edit task file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        Task task \u003d tasks.removeTask(taskNum);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.editTaskList(\"\", taskNum, true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.updateStats(1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        stats.incrementDeletedStats();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%s\\n%s\\n%s%d%s\", MESSAGE_DELETE_ACKNOWLEDGEMENT,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                task.toString(), MESSAGE_DELETE_CONTINUED, tasks.getTaskCount(), MESSAGE_DELETE_END);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 52
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_DONE_ACKNOWLEDGEMENT \u003d \"Nice I\u0027ve digested the following: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_DONE_END \u003d \"Now I\u0027m hungry again! FEED ME MORE :3\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a DoneCommand instance"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param taskNum Position of task to be marked as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Marks task in current task list done, edits the task file in hard disk"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * and displays acknowledgement message that task has been marked as done to user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If unable to edit task file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        Task task \u003d tasks.doneTask(taskNum);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.editTaskList(task.saveToString(), taskNum, false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        storage.updateStats(2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        stats.incrementDoneStats();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%s\\n%s\\n%s\", MESSAGE_DONE_ACKNOWLEDGEMENT,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                task.toString(), MESSAGE_DONE_END);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents an exit command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"exit\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"bb cya again!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Displays acknowledgement message that task has been exited."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return MESSAGE_EXIT_ACKNOWLEDGEMENT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents an find command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_ADD_ACKNOWLEDGEMENT \u003d \"HmmMm let me recall... I think I\u0027ve eaten the \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            + \"following that match your description: \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates an FindCommand instance"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param keyword A string representing the keyword to be found in tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Searches current task list for task containing keyword and displays the tasks to user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%s\\n%s\", MESSAGE_ADD_ACKNOWLEDGEMENT,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                tasks.findMatchingTasks(keyword));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents a list command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Displays all current tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return tasks.listAllTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 25
    }
  },
  {
    "path": "src/main/java/duke/command/OwoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents an owo command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class OwoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"owo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_OWO_ACKNOWLEDGEMENT \u003d \"uwu\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Displays acknowledgement message to owo command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return MESSAGE_OWO_ACKNOWLEDGEMENT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 26
    }
  },
  {
    "path": "src/main/java/duke/command/StatsCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents a stats command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class StatsCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"stats\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return stats.getStats();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 16
    }
  },
  {
    "path": "src/main/java/duke/command/UwuCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Statistics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents an uwu command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class UwuCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"uwu\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private static final String MESSAGE_UWU_ACKNOWLEDGEMENT \u003d \"owo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Displays acknowledgement message to uwu command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param tasks Task list representing current tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param storage Storage Storage in charge of saving file to hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @return A string representing Duke\u0027s response after executing command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String execute(TaskList tasks, Storage storage, Statistics stats) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return MESSAGE_UWU_ACKNOWLEDGEMENT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 26
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents tasks that need to be done before a specific date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private char type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private final String BY \u003d \"best consumed by: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a Deadline instance."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param task A string containing task details."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param date A string containing date of deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If invalid date format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Deadline(String task, String date) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Time format should be yyyy/mm/dd or yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"[%c]%s %s%s\", type, super.toString(), BY,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String saveToString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%c | %s | %s\", type, super.saveToString(), date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 43
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents tasks that start at a specific date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private char type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private final String AT \u003d \"bought at: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates an Event instance."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param task A string containing task details."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param date A string containing start date of event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @throws DukeException If invalid date format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Event(String task, String date) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            throw new DukeException(\"Time format should be yyyy/mm/dd or yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"[%c]%s %s%s\", type, super.toString(), AT,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String saveToString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%c | %s | %s\", type, super.saveToString(), date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 43
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a Task instance that has not been done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param task A string containing task details."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    Task(String task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String check \u003d isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"[%s] %s\", check, task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String saveToString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        int check \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%d | %s\", check, task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 42
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " * Represents tasks without any date/time attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    private char type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * Creates a Todo instance."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     * @param task A string containing task details."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"[%c]%s\", type, super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    public String saveToString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        return String.format(\"%c | %s\", type, super.saveToString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 27
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "         minHeight\u003d\"-Infinity\" prefWidth\u003d\"800.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "               text\u003d\"Label\" wrapText\u003d\"true\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "               style\u003d\"-fx-background-color: rgb(220,220,220); -fx-background-radius: 20; -fx-border-radius: 20;\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"420.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"420.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"80.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"488.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 24
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    void addThreeTasks() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.addTask(new Todo(\"taskOne\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.addTask(new Todo(\"taskTwo\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.addTask(new Todo(\"taskThree\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        assertEquals(3, taskList.getTaskCount());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    void removeTask_FromNonEmptyList() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.addTask(new Todo(\"taskOne\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.addTask(new Todo(\"taskTwo\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.addTask(new Todo(\"taskThree\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.removeTask(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        assertEquals(2, taskList.getTaskCount());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.removeTask(1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        assertEquals(1, taskList.getTaskCount());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    void removeOneTask_FromEmptyList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            taskList.removeTask(1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            assertEquals(\"☹ OOPSIE!! What are you deleting? Gotta specify a valid task number!\", e.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    void removeInvalidTask_FromList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        taskList.addTask(new Todo(\"taskOne\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            taskList.removeTask(2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "            assertEquals(\"☹ OOPSIE!! What are you deleting? Gotta specify a valid task number!\", e.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 55
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    void readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        String input \u003d \"return one\\nreturn two\\nreturn three\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        assertEquals(\"return one\", ui.readCommand());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        assertEquals(\"return two\", ui.readCommand());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        assertEquals(\"return three\", ui.readCommand());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gan-jw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    void printMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        ui.printMessage(\"test print\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "        assertEquals(\"test print\\n\", outContent.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "todo pork"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "todo beef"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "todo veggies"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "deadline milk /by yesterday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "event bread /at today"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gan-jw"
        },
        "content": "java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "gan-jw": 1,
      "-": 37
    }
  }
]
