[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    mainClassName \u003d \"duke.gui.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 17,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "T / L / 0 / buy bread"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Duke allows a user to manage tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "There are 3 types of tasks - **todo, event and deadline**."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Each task can be tagged with 3 types of priority - **low, medium and high**."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "1. add tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "   * add a todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "   * add an event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "   * add a deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "2. list all tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "3. delete a task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "4. mark a task as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "5. filter tasks based on their priority"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "6. get tasks based on their dates"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "7. find tasks based on a keyword"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "8. say bye to Duke"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `todo \u003cdescription\u003e /p \u003cpriority\u003e` - Add a todo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Adds a todo to Duke\u0027s list with a priority tag."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`todo borrow book /p low`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "[T][L][✘] borrow book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `event \u003cdescription\u003e /p \u003cpriority\u003e /at \u003cDD-MM-YYYY HHMM\u003e` - Add an event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Adds an event to Duke\u0027s list with a priority tag and a date and time tag."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "The time is in a 24-hour format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`event project meeting /p high /at 1-9-2020 0800`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "[E][H][✘] project meeting (at: 01 Sep 2020, 08:00 AM)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `deadline \u003cdescription\u003e /p \u003cpriority\u003e /by \u003cDD-MM-YYYY HHMM\u003e` - Add a deadline"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Adds a deadline to Duke\u0027s list with a priority tag and a date and time tag."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "The time is in a 24-hour format."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`deadline return book /by 01-09-2020 1800 /p medium`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "[D][M][✘] return book (by: 01 Sep 2020, 06:00 PM)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Lists all tasks in Duke\u0027s list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Here are the 3 tasks in your list:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "1. [T][L][✘] borrow book"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "2. [E][H][✘] project meeting (at: 01 Sep 2020, 08:00 AM)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "3. [D][M][✘] return book (by: 01 Sep 2020, 06:00 PM)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `delete \u003cindex\u003e` - Delete a task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Deletes a task from Duke\u0027s list based on the task\u0027s index."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`delete 2` (deletes the second task in Duke\u0027s list)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "[E][H][✘] project meeting (at: 01 Sep 2020, 08:00 AM)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `done \u003cindex\u003e` - Mark a task as done"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Marks a task from Duke\u0027s list as completed based on the task\u0027s index."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`done 1` (marks the first task in Duke\u0027s list as done)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Nice! I\u0027ve marked this as done:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "[T][L][✓] borrow book"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `filter \u003cpriority\u003e` - Filter tasks based on their priority"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Filters all tasks from Duke\u0027s list based on the specified priority."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`filter medium`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Here are the medium-priority task(s):"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "1. [D][M][✘] return book (by: 01 Sep 2020, 06:00 PM)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `get \u003cDD-MM-YYYY\u003e` - Get tasks based on their dates"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Gets all tasks from Duke\u0027s list based on the specified date."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`get 1-9-2020`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Here are the task(s) from 01 Sep 2020:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "1. [D][M][✘] return book (by: 01 Sep 2020, 06:00 PM)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `find \u003ckeyword\u003e` - Find tasks based on a keyword"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Finds all tasks from Duke\u0027s list based on the specified keyword."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Here are the matching task(s) in your list:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "1. [T][L][✓] borrow book"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "2. [D][M][✘] return book (by: 01 Sep 2020, 06:00 PM)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "### `bye` - Say bye to Duke"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Says bye to Duke."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Example of usage:* "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "*Expected outcome:*"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "```"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "---"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 191,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents all the possible commands that Duke understands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    BYE, LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    DELETE, DONE, FILTER, GET, FIND,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    TODO, EVENT, DEADLINE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a personal assistant chatbot to help a person keep track of various things."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** UI for Duke to display messages. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Parser for Duke to parse inputs. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates an instance of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param hasGui If there is a GUI or not."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Duke(boolean hasGui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d new Ui(hasGui);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            storage \u003d new Storage(currDir + \"/data\", currDir + \"/data/duke.txt\", this.ui, taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            storage \u003d new Storage(\"../data\", \"../data/duke.txt\", this.ui, taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        storage.checkSavedFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.parser \u003d new Parser(storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Main entry point for a CLI-based Duke."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Duke duke \u003d new Duke(false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        duke.runDukeForCli();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Retrieves a response for the GUI."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Result of feeding Parser the input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getResponseForGui(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.parser.processInput(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Runs Duke for the CLI."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void runDukeForCli() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui.displayIntroduction();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.readInputs();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Reads the inputs from the user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void readInputs() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String nextInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.parser.processInput(nextInput);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Exit the program if user says bye"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (nextInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 90,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the exception when a parser receives an invalid input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DukeInputException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates an exception for Duke-related errors."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Message from Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public DukeInputException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 16
    }
  },
  {
    "path": "src/main/java/duke/Priority.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    LOW, MEDIUM, HIGH"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 5
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Handles interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Checks if there is a GUI. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final boolean hasGui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a UI and checks the presence of GUI."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param hasGui If there is a GUI or not."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Ui(boolean hasGui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.hasGui \u003d hasGui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays Duke\u0027s introduction message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Introduction to be displayed if GUI is used."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayIntroduction() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String divider \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String welcome \u003d \"Hello! I\u0027m Duke.\\n\" + \"How can I help you?\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return welcome;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(divider + logo + welcome + divider);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays a message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Message to be displayed if GUI is used."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayMessage(String message) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays a warning message."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Warning message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Warning message to be displayed if GUI is used."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayWarning(String message) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String warningMessage \u003d \"WARNING: \" + message;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return warningMessage;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(warningMessage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays an error message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Error message to be displayed if GUI is used."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayError(String message) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String errorMessage \u003d \"ERROR: \" + message;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return errorMessage;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(errorMessage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays the entire list of tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Task list to be displayed if GUI is used."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int numOfTasks \u003d taskList.getNumOfTasks();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            messageBuilder.append(\"There are no tasks in your list.\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                messageBuilder.append(\"This is the only task in your list:\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                messageBuilder.append(\"Here are the \").append(numOfTasks).append(\" tasks in your list:\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            for (int i \u003d 0; i \u003c numOfTasks; i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                int number \u003d i + 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                messageBuilder.append(number).append(\". \").append(taskList.getTask(i).toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                messageBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String message \u003d messageBuilder.toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 123
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.Border;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.BorderStroke;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.BorderStrokeStyle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.BorderWidths;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * and a label containing text from the speaker."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a dialog box with a text and an image."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param text Text."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dialog.setText(text);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a user dialog box."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param text Text."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Dialog box with the user\u0027s image and text."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        BackgroundFill backgroundFill \u003d new BackgroundFill("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                Color.LIGHTGRAY,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                new CornerRadii(5),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                Insets.EMPTY);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        db.dialog.setBackground(new Background(backgroundFill));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a Duke dialog box."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param text Text."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Dialog box with Duke\u0027s image and text."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        boolean isError \u003d db.isErrorMessage(text);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (isError) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            db.dialog.setTextFill(Color.RED);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            BorderStroke borderStroke \u003d new BorderStroke("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    Color.RED,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    BorderStrokeStyle.SOLID,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    new CornerRadii(5),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    BorderWidths.DEFAULT);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            db.dialog.setBorder(new Border(borderStroke));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            BackgroundFill backgroundFill \u003d new BackgroundFill("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    Color.LIGHTGREEN,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    new CornerRadii(5),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    Insets.EMPTY);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            db.dialog.setBackground(new Background(backgroundFill));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Checks if the response is an error message."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param response String describing the response."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return If the response is an error message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private boolean isErrorMessage(String response) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String[] splitResponse \u003d response.split(\" \", 2);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String firstWord \u003d splitResponse[0];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return firstWord.contains(\"ERROR:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 125
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Main entry point for a GUI-based Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 18
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents the bridge between the logic in Duke and the GUI in MainWindow."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Title of the GUI. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String TITLE \u003d \"Duke\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Logic for Duke to run. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Duke duke \u003d new Duke(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/DukeLogo.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            stage.setTitle(Main.TITLE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDukeGui(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a response from the input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Input string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the response to the input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.duke.getResponseForGui(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 50
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Controller for MainWindow. Provides the layout for other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** GUI for Duke. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Main dukeGui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private boolean isFirstLaunch \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Initializes the main window."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays the introduction message if this is the first launch."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (isFirstLaunch) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            isFirstLaunch \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.dialogContainer"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    .getChildren()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    .add(DialogBox.getDukeDialog(new Ui(true).displayIntroduction(), this.dukeImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Sets GUI for Duke."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dukeGui GUI for Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void setDukeGui(Main dukeGui) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dukeGui \u003d dukeGui;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Appends them to the dialog container."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void updateDialogContainer() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Initialize labels"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String userText \u003d this.userInput.getText();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String dukeText \u003d this.dukeGui.getResponse(userText);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Add children to dialog container"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DialogBox.getUserDialog(userText, this.userImage),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, this.dukeImage)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Clear text field"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.userInput.clear();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 79
    }
  },
  {
    "path": "src/main/java/duke/logic/Executor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Priority;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the execution of user\u0027s command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Executor {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERROR_INDICATOR \u003d \"ERROR\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    // Error messages"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_INDEX_OUT_OF_BOUND \u003d \"The task\u0027s number is not within the range of the list.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_DELETE_MISSING_TASK_NUM \u003d \"Which task\u0027s number do you want to delete?\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_DONE_MISSING_TASK_NUM \u003d \"Which task\u0027s number do you want to mark as done?\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_TASK_MISSING_PRIORITY \u003d \"Indicate the priority of the task after \\\"/p\\\".\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_TASK_INVALID_PRIORITY \u003d \"The priority of a task can only be low, medium or high.\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_TODO_WRONG_FORMAT \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \"Use the format \\\"todo \u003cdescription\u003e /p \u003cpriority\u003e\\\".\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_EVENT_WRONG_FORMAT \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \"Use the format \\\"event \u003cdescription\u003e /p \u003cpriority\u003e /at \u003cDD-MM-YYYY HHMM\u003e\\\".\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_DEADLINE_WRONG_FORMAT \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \"Use the format \\\"deadline \u003cdescription\u003e /p \u003cpriority\u003e /by \u003cDD-MM-YYYY HHMM\u003e\\\".\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Storage for executor to write data to. */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** UI for executor to display messages. */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Task list for executor to add/edit/delete tasks. */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Checks if the task\u0027s index is outside the task list\u0027s size range. */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Function\u003cInteger, Boolean\u003e checkTaskIndex \u003d i -\u003e i \u003c 0 || i \u003e\u003d this.taskList.getNumOfTasks();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new executor from a storage."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param storage Storage of Duke\u0027s data."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Executor(Storage storage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d this.storage.getUi();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList \u003d this.storage.getTaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Executes a command based on the user action."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param command Command type."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param userAction String indicating the user action."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of the execution."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If user action is wrongly formatted."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String executeCommand(Command command, String userAction) throws DukeInputException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayTaskList(this.taskList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return deleteTask(userAction);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return markTaskAsDone(userAction);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case FILTER:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return filterPriority(userAction);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case GET:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return displayTasksFromDate(userAction);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return findTasks(userAction);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return createTodo(userAction);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return createEvent(userAction);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return createDeadline(userAction);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Returns a footer containing the number of tasks in the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Footer string containing the number of tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String getNumOfTasksFooter() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int numOfTasks \u003d this.taskList.getNumOfTasks();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"Now you have \" + numOfTasks + \" task in the list.\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"Now you have \" + numOfTasks + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Deletes a task specified by the user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param indexString String indicating which task\u0027s index to be deleted."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of deleting a task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If index is not a number String or exceeds the task list size."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String deleteTask(String indexString) throws DukeInputException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            int index \u003d Integer.parseInt(indexString) - 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (this.checkTaskIndex.apply(index)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                throw new DukeInputException(Executor.ERR_INDEX_OUT_OF_BOUND);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Task task \u003d this.taskList.getTask(index);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.taskList.deleteTask(index); // delete task from the list"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.storage.writeToSaveFile(); // edit the data in storage"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String confirmationMessage \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + task.toString()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + this.getNumOfTasksFooter();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(confirmationMessage); // print delete confirmation message"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Executor.ERR_DELETE_MISSING_TASK_NUM);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param indexString String indicating which task\u0027s index is done."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of marking a task as done."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If index is not a number String or exceeds the task list size."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String markTaskAsDone(String indexString) throws DukeInputException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            int index \u003d Integer.parseInt(indexString) - 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (this.checkTaskIndex.apply(index)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                throw new DukeInputException(Executor.ERR_INDEX_OUT_OF_BOUND);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Task task \u003d this.taskList.getTask(index);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.storage.writeToSaveFile(); // write task\u0027s data to storage"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String confirmationMessage \u003d \"Nice! I\u0027ve marked this as done:\\n\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + task.toString()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + \"\\n\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(confirmationMessage); // print mark task as done confirmation message"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Executor.ERR_DONE_MISSING_TASK_NUM);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Filters the list of tasks by the required priority."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priorityString String describing the priority of tasks to filter by."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing all the tasks with a given priority."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If priority String is invalid."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String filterPriority(String priorityString) throws DukeInputException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Priority priority;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (priorityString) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"low\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            priority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"medium\":"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"high\":"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            priority \u003d Priority.HIGH;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Executor.ERR_TASK_INVALID_PRIORITY);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder filteredTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Stream\u003cTask\u003e taskStream \u003d this.taskList.getTaskList().stream();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        taskStream"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                .filter(x -\u003e x.getPriority() \u003d\u003d priority)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                .forEach(x -\u003e filteredTasks"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(counter.incrementAndGet())"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(\". \")"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(x.toString())"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(\"\\n\"));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (filteredTasks.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(\"You have no \" + priorityString + \"-priority tasks.\\n\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String taskMessage \u003d \"Here are the \" + priorityString + \"-priority task(s):\\n\" + filteredTasks.toString();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.ui.displayMessage(taskMessage);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays the tasks with the date required by the user."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateString String describing the date of tasks required."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing all the tasks from a date."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If date String is wrongly formatted."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String displayTasksFromDate(String dateString) throws DukeInputException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String requiredDate \u003d DateTimeHandler.parseDate(dateString);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder requiredTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Stream\u003cTask\u003e taskStream \u003d this.taskList.getTaskList().stream();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        taskStream"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                .filter(x -\u003e x.toString().contains(requiredDate))"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                .forEach(x -\u003e requiredTasks"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(counter.incrementAndGet())"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(\". \")"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(x.toString())"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(\"\\n\"));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (requiredTasks.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(\"You have no tasks from \" + requiredDate + \".\\n\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String taskMessage \u003d \"Here are the task(s) from \" + requiredDate + \":\\n\" + requiredTasks.toString();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.ui.displayMessage(taskMessage);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Finds the tasks with the given keyword."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param keyword String describing the keyword to search for."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of searching a keyword."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String findTasks(String keyword) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder relevantTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Stream\u003cTask\u003e taskStream \u003d this.taskList.getTaskList().stream();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        taskStream"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                .filter(x -\u003e x.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                .forEach(x -\u003e relevantTasks"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(counter.incrementAndGet())"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(\". \")"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(x.toString())"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        .append(\"\\n\"));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (relevantTasks.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(\"You have no matching tasks for the keyword: \\\"\" + keyword + \"\\\".\\n\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String taskMessage \u003d \"Here are the matching task(s) in your list:\\n\" + relevantTasks.toString();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.ui.displayMessage(taskMessage);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Extracts the priority of a task from its description."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Priority of the task."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the priority is missing or invalid."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Priority extractPriority(String description) throws DukeInputException {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (!description.contains(\"/p\")) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Executor.ERR_TASK_MISSING_PRIORITY);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (description.contains(\"/p low\")) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Priority.LOW;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (description.contains(\"/p medium\")) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Priority.MEDIUM;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (description.contains(\"/p high\")) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Priority.HIGH;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Executor.ERR_TASK_INVALID_PRIORITY);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Removes the priority label from the description."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority Priority of the task."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Description of the task without the priority label."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String removePriorityLabel(Priority priority, String description) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String actualDescription;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (priority) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case LOW:"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            actualDescription \u003d description.replace(\" /p low\", \"\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case MEDIUM:"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            actualDescription \u003d description.replace(\" /p medium\", \"\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case HIGH:"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            actualDescription \u003d description.replace(\" /p high\", \"\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            actualDescription \u003d Executor.ERROR_INDICATOR;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (actualDescription.contains(\"/p\")) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            actualDescription \u003d Executor.ERROR_INDICATOR;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return actualDescription;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a todo which is added to the task list."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of creating a todo."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the priority is missing or invalid or the description is wrongly formatted."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String createTodo(String description) throws DukeInputException {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Priority priority \u003d this.extractPriority(description);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String actualDescription \u003d this.removePriorityLabel(priority, description);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (actualDescription.equals(Executor.ERROR_INDICATOR)) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Executor.ERR_TODO_WRONG_FORMAT);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Task task \u003d new Todo(priority, actualDescription);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.addTask(task);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates an event which is added to the task list."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of creating an event."
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the priority is missing or invalid or the description is wrongly formatted."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String createEvent(String description) throws DukeInputException {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Priority priority \u003d this.extractPriority(description);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String actualDescription \u003d this.removePriorityLabel(priority, description);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String[] arr \u003d actualDescription.split(\" /at \", 2);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (actualDescription.equals(Executor.ERROR_INDICATOR) || arr.length \u003c 2 || arr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Executor.ERR_EVENT_WRONG_FORMAT);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Task task \u003d new Event(priority, arr[0], arr[1]);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.addTask(task);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a deadline which is added to the task list."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of creating a deadline."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the priority is missing or invalid or the description is wrongly formatted."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String createDeadline(String description) throws DukeInputException {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Priority priority \u003d this.extractPriority(description);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String actualDescription \u003d this.removePriorityLabel(priority, description);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String[] arr \u003d actualDescription.split(\" /by \", 2);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (actualDescription.equals(Executor.ERROR_INDICATOR) || arr.length \u003c 2 || arr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Executor.ERR_DEADLINE_WRONG_FORMAT);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Task task \u003d new Deadline(priority, arr[0], arr[1]);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.addTask(task);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Either a todo, event or deadline task."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param task Task to be added to the task list."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of adding a task."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String addTask(Task task) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList.addTask(task);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage.writeToSaveFile(); // write task\u0027s data to storage"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String confirmationMessage \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + getNumOfTasksFooter();"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.ui.displayMessage(confirmationMessage); // print create task confirmation message"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 388
    }
  },
  {
    "path": "src/main/java/duke/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the parsing of user\u0027s input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    // Error messages"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_UNKNOWN_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_BYE_WITH_USER_ACTION \u003d \"Do you mean \\\"bye\\\"?\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_LIST_WITH_USER_ACTION \u003d \"Do you mean \\\"list\\\"?\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_DELETE_WITHOUT_USER_ACTION \u003d \"Which task do you want to delete?\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_DONE_WITHOUT_USER_ACTION \u003d \"Which task have you done?\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_FILTER_WITHOUT_USER_ACTION \u003d \"Which priority of tasks do you want to get?\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_GET_WITHOUT_USER_ACTION \u003d \"Which date you want to get tasks from?\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_FIND_WITHOUT_USER_ACTION \u003d \"Include a search term.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_TODO_WITHOUT_USER_ACTION \u003d \"The description of a todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_EVENT_WITHOUT_USER_ACTION \u003d \"The description of an event cannot be empty.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String ERR_DEADLINE_WITHOUT_USER_ACTION \u003d \"The description of a deadline cannot be empty.\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a parser with a storage for reading and writing data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param storage Storage for reading and writing data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Parser(Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Processes the user input fed to Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * A user input consists of a user command and a user action."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * User command is always the first word of the user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * For example, when a user inputs \"todo buy apple\", the user command is \u0027todo\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * and the user action is \u0027buy apple\u0027."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param userInput User input string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of the processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If user command is invalid or user action is missing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String processInput(String userInput) throws DukeInputException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Split the user input into user command and user action"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String[] splitInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Extract command type"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        assert(splitInput[0] !\u003d null);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String userCommand \u003d splitInput[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Command command \u003d this.extractCommandType(userCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String userAction \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Extract user action if command is not BYE or LIST"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // BYE and LIST commands have no user action"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (!userInput.equals(\"bye\") \u0026\u0026 !userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                assert(splitInput[1] !\u003d null);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                userAction \u003d splitInput[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                // Check if user action is present for BYE and LIST commands"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (command \u003d\u003d Command.BYE) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    throw new DukeInputException(Parser.ERR_BYE_WITH_USER_ACTION);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (command \u003d\u003d Command.LIST) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    throw new DukeInputException(Parser.ERR_LIST_WITH_USER_ACTION);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Execute the command type with user action"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Executor executor \u003d new Executor(this.storage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return executor.executeCommand(command, userAction);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            handleMissingUserAction(command);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Extracts the command type from a string."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param userCommand String indicating the user command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Command type."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If user command is invalid."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Command extractCommandType(String userCommand) throws DukeInputException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (userCommand) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.BYE;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"filter\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.FILTER;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"get\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.GET;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default: // Unknown command"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Handles missing user action."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param command Command type."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If user action is missing."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void handleMissingUserAction(Command command) throws DukeInputException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_DELETE_WITHOUT_USER_ACTION);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_DONE_WITHOUT_USER_ACTION);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case FILTER:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_FILTER_WITHOUT_USER_ACTION);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case GET:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_GET_WITHOUT_USER_ACTION);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_FIND_WITHOUT_USER_ACTION);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_TODO_WITHOUT_USER_ACTION);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_EVENT_WITHOUT_USER_ACTION);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(Parser.ERR_DEADLINE_WITHOUT_USER_ACTION);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 145
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Priority;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a deadline as a task with a date and time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Date and time of the deadline. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new deadline from a description and a date and time String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority Priority of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Due date and time of the deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the date and time input is invalid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Deadline(Priority priority, String description, String dateTime) throws DukeInputException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(priority, description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d DateTimeHandler.parseDateTime(dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new deadline from a description, completion status and a date and time String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority Priority of the deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param isDone Completion status of the deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Due date and time of the deadline properly formatted."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Deadline(Priority priority, String description, boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(priority, description, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the date and time of the deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date and time of the deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"D / \" + super.getData() + \" / \" + this.getDateTime();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getDateTime() + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Priority;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents an event as a task with a date and time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Date and time of the event. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new event from a description and a date and time String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority Priority of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Date and time of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the date and time input is invalid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Event(Priority priority, String description, String dateTime) throws DukeInputException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(priority, description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d DateTimeHandler.parseDateTime(dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new event from a description, completion status and a date and time String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority Priority of the event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param isDone Completion status of the event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Date and time of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Event(Priority priority, String description, boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(priority, description, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the date and time of the event."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date and time of the event."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"E / \" + super.getData() + \" / \" + this.getDateTime();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getDateTime() + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Priority;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates a task with a description and a completion status."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**  Priority of the task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Priority priority;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Completion status of the task. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new task from a description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority  Priority of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task(Priority priority, String description) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new task from a description and completion status."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority Priority of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param isDone Completion status of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task(Priority priority, String description, boolean isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the priority of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Priority of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.priority;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the priority label of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the priority of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String getPriorityLabel() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (this.priority) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case LOW:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"L\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case MEDIUM:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"M\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case HIGH:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"H\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Description of the task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Returns the status of the task using UTF-8 encoding."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Either a tick or a cross symbol."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets data from the task to be saved in storage."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String representing the data of the task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int statusNumber \u003d this.getStatusIcon().equals(\"\\u2713\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                ? 1"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                : 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.getPriorityLabel() + \" / \" + statusNumber + \" / \" + this.getDescription();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[\" + this.getPriorityLabel() + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 113
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Priority;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a todo as a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a todo from a description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority Priority of the todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Todo(Priority priority, String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(priority, description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a todo from a description and completion status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param priority Priority of the todo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param isDone Completion status of the todo."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Todo(Priority priority, String description, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(priority, description, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"T / \" + super.getData();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 40
    }
  },
  {
    "path": "src/main/java/duke/util/DateTimeHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the handling of dates and times."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DateTimeHandler {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Parses and formats the date string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param date Unformatted date string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date string in the format of \"dd MMM YYYY\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If date input is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static String parseDate(String date) throws DukeInputException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Parse input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            LocalDate inputDate \u003d LocalDate.parse(date, inputFormatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Produce formatted output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return inputDate.format(outputFormatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Enter the date as \\\"dd-MM-yyyy\\\".\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Parses and formats the date and time string."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Unformatted date and time string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date and time string in the format of \"dd MMM YYYY, hh:ss\"."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If date and time input is invalid."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static String parseDateTime(String dateTime) throws DukeInputException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Parse input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            LocalDateTime inputDateTime \u003d LocalDateTime.parse(dateTime, inputFormatter);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Produce formatted output"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:ss a\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return inputDateTime.format(outputFormatter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Enter the date and time as \\\"dd-MM-yyyy HHmm\\\".\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 56
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Priority;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the loading of tasks from a text file and storing of tasks in that text file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * The text file is located in the data directory of the root folder."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    // Messages"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String MSG_DIRECTORY_CREATED \u003d \"A data directory has been created in the root folder.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String MSG_TEXT_FILE_CREATED \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \"duke.txt has been created in the data directory of the root folder.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String WARN_DIRECTORY_NOT_CREATED \u003d \"Failed to create a data directory.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String WARN_TEXT_FILE_NOT_CREATED \u003d \"Failed to create duke.txt.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String WARN_TEXT_FILE_NOT_READ \u003d \"Failed to read duke.txt.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private static final String WARN_TEXT_FILE_NOT_WRITTEN \u003d \"Failed to write data to duke.txt.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Directory file. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final File directory;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Text file. */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final File textFile;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** UI for storage to display messages. */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Task list for storage to access. */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a storage for Duke\u0027s tasks data."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param directoryPath Path of the directory."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param textFilePath Path of the text file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Storage(String directoryPath, String textFilePath, Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.textFile \u003d new File(textFilePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the UI."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return UI."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Checks if duke.txt file exists in the data directory of the root folder."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * If it exists, load the data into Duke."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * If it does not exist, create one."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void checkSavedFile() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (directory.exists()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (textFile.exists()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                readTextFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                createTextFile();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            createDataDirectory();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            createTextFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a data directory in the root folder."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void createDataDirectory() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        boolean hasCreatedDir \u003d directory.mkdir();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasCreatedDir) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayMessage(Storage.MSG_DIRECTORY_CREATED);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayWarning(Storage.WARN_DIRECTORY_NOT_CREATED);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates duke.txt in the data directory of the root folder."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void createTextFile() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            boolean hasCreatedFile \u003d textFile.createNewFile();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (hasCreatedFile) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.displayMessage(Storage.MSG_TEXT_FILE_CREATED);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.displayWarning(Storage.WARN_TEXT_FILE_NOT_CREATED);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayWarning(Storage.WARN_TEXT_FILE_NOT_CREATED);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Parses a line read from duke.txt and adds tasks into the task list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param line Line from duke.txt."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void parseLine(String line) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String[] arr \u003d line.split(\" / \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Priority priority;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String priorityLabel \u003d arr[1];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (priorityLabel.equals(\"L\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            priority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (priorityLabel.equals(\"M\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            priority \u003d Priority.HIGH;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        boolean isDone \u003d Integer.parseInt(arr[2]) !\u003d 0;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (arr[0].equals(\"T\")) { // Todo"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            task \u003d new Todo(priority, arr[3], isDone);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (arr[0].equals(\"E\")) { // Event"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            task \u003d new Event(priority, arr[3], isDone, arr[4]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else { // Deadline"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            task \u003d new Deadline(priority, arr[3], isDone, arr[4]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList.addTask(task);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Reads duke.txt."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void readTextFile() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(textFile));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.parseLine(line);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayWarning(Storage.WARN_TEXT_FILE_NOT_READ);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Writes tasks\u0027 data to duke.txt."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void writeToSaveFile() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        for (Task task : this.taskList.getTaskList()) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            data.append(task.getData()).append(\"\\n\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(textFile));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            writer.write(data.toString());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayWarning(Storage.WARN_TEXT_FILE_NOT_WRITTEN);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 189
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Array list of tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new and empty task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the number of tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a task from the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param index Index of task stored in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Task from index i of the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param task Task to add to the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param index Index of task stored in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 67
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                \u003cInsets bottom\u003d\"4.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"4.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"WHITE\" radius\u003d\"45.0\" stroke\u003d\"WHITE\" strokeLineCap\u003d\"ROUND\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#updateDialogContainer\" prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                onAction\u003d\"#updateDialogContainer\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 24
    }
  },
  {
    "path": "src/test/java/duke/logic/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void beforeEachTestMethod() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Storage storage \u003d new Storage(\"../data\", \"../data/duke.txt\", new Ui(false), new TaskList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.parser \u003d new Parser(storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testByeCommand_extraUserInput_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"bye bye\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testListCommand_extraUserInput_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"list 1\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testDeleteCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"delete\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"delete a\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testDoneCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"done\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"done a\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testGetCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"get\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"get a\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"get 01/09/2020\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testTodoCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"todo\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testEventCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting /at\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting /at 01/09/2020\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting /by 01/09/2020 0800\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testDeadlineCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book /by\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book /by 01/09/2020\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book /at 01/09/2020 1800\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 82
    }
  },
  {
    "path": "src/test/java/duke/util/DateTimeHandlerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DateTimeHandlerTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateFormat_validInput_correctDateFormat() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020\", DateTimeHandler.parseDate(\"1-9-2020\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020\", DateTimeHandler.parseDate(\"01-09-2020\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateFormat_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e DateTimeHandler.parseDate(\"1/9/2020\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e DateTimeHandler.parseDate(\"01/09/2020\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateTimeFormat_validInput_correctDateTimeFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020, 08:00 AM\", DateTimeHandler.parseDateTime(\"1-9-2020 0800\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020, 06:00 PM\", DateTimeHandler.parseDateTime(\"01-09-2020 1800\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateTimeFormat_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e DateTimeHandler.parseDateTime(\"1/9/2020 1800\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e DateTimeHandler.parseDateTime(\"01-09-2020 6pm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo borrow book /p l"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo borrow book /p low"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /p medium"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by /p medium"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by Sunday /p medium"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01/09/2020 6pm /p medium"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01/09/2020 1800 /p medium"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01-09-2020 1800 /p medium"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /p high /by"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /p high /by 1-9-2020 0800"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /p high /at 1-9-2020 0800"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "filter"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "filter l"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "filter low"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1/9/2020"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1-9-2020"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 2-9-2020"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo join sports club /p low"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "find"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "find z"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "find book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "filter medium"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "filter high"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1-9-2020"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "blah"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "bye a"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "bye"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "blah"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 46
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\logic\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\util\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 4,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/logic/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/util/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 4,
      "-": 36
    }
  }
]
