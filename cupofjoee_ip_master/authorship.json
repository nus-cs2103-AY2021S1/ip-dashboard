[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Deadline(String title, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        Task newTask \u003d new Deadline(title, by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        newTask.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String status \u003d isDone ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return String.format(\"%s[D] %s (by: %s)\", status, title, by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void activate() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        System.out.print(greeting);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        while (!input.equals(\"bye\") \u0026\u0026 sc.hasNextLine()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            reply(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void reply(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String[] splitted \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String command \u003d splitted[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            help();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            quit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            showTasks();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        } else if (command.equals(\"done\")){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            markAsDone(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            delete(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            add(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void help() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String msg \u003d String.join(\"\\n\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                \"Adding task:\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                         \"todo \u003cdesc\u003e\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                         \"deadline \u003cdesc\u003e /by \u003cdesc\u003e\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                         \"event \u003cdesc\u003e /at \u003cdesc\u003e\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                         \"\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                         \"list - show all added tasks\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                         \"done \u003ctaskId\u003e - mark the task as done\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                         \"delete \u003ctaskId\u003e - delete the task\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                                         \"bye - close Duke\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        System.out.println(msg + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void quit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        System.out.println(\"Adios!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void showTasks() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            String task \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            String message \u003d String.valueOf(i + 1) + \". \" + task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void markAsDone(String input) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String rawNum \u003d input.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        int taskId \u003d Integer.parseInt(rawNum) - 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            if (taskId \u003c 0 || taskId \u003e\u003d tasks.size())"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                throw new InvalidTaskIdException(rawNum);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            Task task \u003d tasks.get(taskId).markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            tasks.set(taskId, task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            message \u003d \"Nice! I\u0027ve marked it done - \" + task.toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.println(e + \"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void delete(String input) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String rawNum \u003d input.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        int taskId \u003d Integer.parseInt(rawNum) - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            if (taskId \u003c 0 || taskId \u003e\u003d tasks.size())"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                throw new InvalidTaskIdException(rawNum);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            Task task \u003d tasks.get(taskId);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            tasks.remove(taskId);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            message \u003d \"Noted! I\u0027ve removed this task - \" + task.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            summary();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.println(e + \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void add(String input) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String[] splitted \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String command \u003d splitted[0];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                task \u003d createTodo(splitted);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                task \u003d createDeadline(splitted);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                task \u003d createEvent(splitted);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.println(\"Added \u0027\" + task.toString() + \"\u0027 to list of tasks\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            summary();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            System.out.println(e + \"\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private Task createTodo(String[] input) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String[] title \u003d Arrays.copyOfRange(input, 1, input.length);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (title.length \u003d\u003d 0) throw new EmptyDescriptionException(\"ToDo\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return new Todo(String.join(\" \", title));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private Task createDeadline(String[] input) throws EmptyDescriptionException, InvalidFormatException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (input.length \u003d\u003d 1) throw new EmptyDescriptionException(\"Deadline\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        int separator \u003d getIndex(input, \"/by\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (separator \u003d\u003d -1) throw new InvalidFormatException(\"/by parameter\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String[] titles \u003d Arrays.copyOfRange(input, 1, separator);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String[] deadlines \u003d Arrays.copyOfRange(input, separator + 1, input.length);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (deadlines.length \u003d\u003d 0) throw new EmptyDescriptionException(\"/by parameter\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String title \u003d String.join(\" \", titles);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String deadline \u003d String.join(\" \", deadlines);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return new Deadline(title, deadline);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private int getIndex(String[] words, String target) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        for (int i \u003d 0; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "            if (words[i].equals(target)) return i;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private Task createEvent(String[] input) throws EmptyDescriptionException, InvalidFormatException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (input.length \u003d\u003d 1) throw new EmptyDescriptionException(\"Event\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        int separator \u003d getIndex(input, \"/at\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (separator \u003d\u003d -1) throw new InvalidFormatException(\"/at parameter\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String[] titles \u003d Arrays.copyOfRange(input, 1, separator);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String[] times \u003d Arrays.copyOfRange(input, separator + 1, input.length);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        if (times.length \u003d\u003d 0) throw new EmptyDescriptionException(\"/at parameter\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String title \u003d String.join(\" \", titles);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String time \u003d String.join(\" \", times);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return new Event(title, time);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    private void summary() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        duke.activate();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 188,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 10
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public EmptyDescriptionException(String target) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        super(String.format(\"The %s should not be empty\", target));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Event(String title, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        Task newTask \u003d new Event(title, at);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        newTask.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String status \u003d isDone ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return String.format(\"%s[E] %s (at: %s)\", status, title, at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 19
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        super(\"Hey buddy, that\u0027s an invalid command.\\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "                \"Type help to see the available commands\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 11
    }
  },
  {
    "path": "src/main/java/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class InvalidFormatException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public InvalidFormatException(String missing) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        super(missing + \" is missing\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 9
    }
  },
  {
    "path": "src/main/java/InvalidTaskIdException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class InvalidTaskIdException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public InvalidTaskIdException(String id) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        super(\"404 task with id \" + id + \" not found. Please enter a correct task id\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 10
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Task(String title) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        Task newTask \u003d new Task(title);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        newTask.isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String status \u003d isDone ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return status + \" \" + title;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Todo(String title) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        Task newTask \u003d new Todo(title);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        newTask.isDone \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        String status \u003d isDone ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "        return status + \"[T] \" + title;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "todo deep work"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "deadline get a girlfriend"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "deadline get a girlfriend /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "deadline get a girlfriend /by 2022"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "event survive lesson"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "event survive lesson /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "event survive lesson /at friday morning"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cupofjoee"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "cupofjoee": 4,
      "-": 36
    }
  }
]
