[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "cwenling": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 2,
      "-": 44
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents the Duke chat-bot, called Nite."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Nite is an interactive app which helps to keep track of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * @author Chia Wen Ling"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * @version v0.1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Duke Chat-bot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param filePath Directory where Duke text file is saved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param folderPath Path name of Duke text file to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Duke(String filePath, String folderPath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage \u003d new Storage(filePath, folderPath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Runs the chat-bot upon starting the program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Main method for starting the chat-bot."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param args Command line arguments, not used."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        new Duke(\"/data/duke.txt\", \"/data\").run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 59,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents an AddCommand where user wants to add a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an AddCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param task Task which is to be added to the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to add a task to list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks.addTasks(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String echoizer \u003d \"\\t Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t %s\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t Now you have %d tasks in the list.\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showAction(String.format(echoizer, task, tasks.numTasks()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 40
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents an abstract Command from which other *Commands inherit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Default constructor for Command class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws DukeException If command is invalid."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns whether a Command is an ExitCommand."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return False by default as most Commands are not ExitCommands."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a DeleteCommand where user wants to delete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private int i;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a DeleteCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param i Index of task to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to delete a task from list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws DukeException If command is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            Task t \u003d tasks.deleteTask(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            ui.showAction(String.format(\"\\t Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    + \"\\t   %s\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    + \"\\t Now you have %d tasks in the list.\\n\", t, tasks.numTasks()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Can\u0027t delete a task that does not exist.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a DoneCommand where user wants to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private int i;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a DoneCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param i Index of task to be marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to mark a task as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws DukeException If command is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            Task t \u003d tasks.markTask(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            ui.showAction(String.format(\"\\t Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    + \"\\t   %s\\n\", t));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Can\u0027t complete a task that does not exist.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a ExitCommand where user wants to exit from Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an ExitCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to exit from Duke program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns whether a Command is an ExitCommand."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return True as this is an ExitCommand."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 41
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a FindCommand where user wants to find tasks matching a keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a FindCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param keyword Input keyword to be found in tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to find and display matching tasks in tasklist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasksString \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showAction(String.format(\"\\t Here are the tasks that match %s:\\n\" + tasksString, keyword));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 35
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a HelpCommand where user wants a list of possible commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a HelpCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to list the possible Duke commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String commandsList \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                \"\\t These are the common Nite commands used in various situations:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t add a task\\n\\t\\t todo \u003cdescription\u003e\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t\\t deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD HH:mm\u003e\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t\\t event \u003cdescription\u003e /at \u003cYYYY-MM-DD HH:mm\u003e to \u003cYYYY-MM-DD HH:mm\u003e\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t delete a task\\n\\t\\t delete \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t mark task as done\\n\\t\\t done \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t list all tasks\\n\\t\\t list\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t find a task\\n\\t\\t find \u003ckeyword\u003e\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t exit Nite\\n\\t\\t bye\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showAction(commandsList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a ListCommand where user wants to list all the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a ListCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to list and display tasks in tasklist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasksString \u003d tasks.listTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui.showAction(\"\\t Here are the tasks in your list:\\n\" + tasksString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 30
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents an UnknownCommand where user input is unclear."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private String gibberish;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an UnknownCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param gibberish Full input by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public UnknownCommand(String gibberish) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.gibberish \u003d gibberish;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to inform user of unclear input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws DukeException Always throws exception as input is invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        throw new DukeException(String.format("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                \"I\u0027m sorry, but I don\u0027t know what \\\"%s\\\" means :-(\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"\\t type \\\"help\\\" for a list of commands!\", gibberish));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 38
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents DukeExceptions used in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a DukeException with a specified message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param errorMessage Error message to be shown."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 17
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents the Parser used to make sense of user commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Parses user input into executable Commands."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param fullCommand Entire user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Duke Command corresponding to input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws DukeException If task is not successfully parsed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.equals(\"help\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new HelpCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new DoneCommand(Integer.parseInt(fullCommand.split(\" \")[1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new DeleteCommand(Integer.parseInt(fullCommand.split(\" \")[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"todo\", fullCommand));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"deadline\", fullCommand));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"event\", fullCommand));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new FindCommand(fullCommand.split(\" \")[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new UnknownCommand(fullCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Parses a task input into Task objects."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param type Type of task (todo, deadline, or event)."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param task The full input of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Task obtained from the input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws DukeException If task is not successfully parsed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static Task parseTask(String type, String task) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            if (task.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            t \u003d new ToDo(task.substring(5));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            if (task.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            String[] taskArr \u003d task.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                t \u003d new Deadline(taskArr[0], taskArr[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new DukeException(\"Invalid description of a deadline.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            if (task.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            String[] taskArr2 \u003d task.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                t \u003d new Event(taskArr2[0], taskArr2[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new DukeException(\"Invalid description of an event.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Unexpected value: \" + type);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 100
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents the Storage manager used to save and load tasks from hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private File folder;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Storage manager."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param filePath Directory where text file is saved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param folderPath Path name of text file to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Storage(String filePath, String folderPath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.file \u003d new File(System.getProperty(\"user.dir\") + filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.folder \u003d new File(System.getProperty(\"user.dir\") + folderPath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Loads task data from the text file if it exists."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return List of lines in the text files."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws DukeException If file is not found or unable to write to file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new DukeException(\"IOException from creating data file\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Data folder does not exist\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                taskList.add(line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"FileNotFoundException\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new DukeException(\"Unable to read from file\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Writes task data to text file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskList Tasklist containing the tasks to be saved."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        FileWriter fileWriter;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            ArrayList\u003cString\u003e taskStrings \u003d taskList.tasksToText();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            for (String string : taskStrings) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                fileWriter.write(string);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 90
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a Task which is a Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Deadline Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param description Description of Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param by The date and time which Deadline is due."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeBy;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeBy \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DateTimeParseException ignored) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.time \u003d timeBy;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the String representation of a Deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of a Deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String by \u003d time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the text representation of a Deadline to be saved in a text file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Text representation of Deadline."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String by \u003d time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"D\" + separator + isDone + separator + super.description + separator + by + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a Task which is an Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected LocalDateTime timeStart;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected LocalDateTime timeEnd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an Event Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param description Description of Event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param at The date and time during which the Event occurs."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String[] startEnd \u003d at.split(\" to \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeStart;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeEnd;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeStart \u003d LocalDateTime.parse(startEnd[0],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeEnd \u003d LocalDateTime.parse(startEnd[1],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DateTimeParseException ignored) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the String representation of an Event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of an Event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String at \u003d timeStart.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \" to \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + timeEnd.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the text representation of an Event to be saved in a text file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Text representation of Event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String at \u003d timeStart.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \" to \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + timeEnd.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"E\" + separator + isDone + separator + super.description + separator + at + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a Task created by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Default constructor for a Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the symbolic representation of the completion status of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Tick if task is completed, cross if task is not completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the String representation of a Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of a Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the text representation of a Task to be saved in a text file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Default Method to be overridden by classes which inherit Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Text representation of Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return description.contains(keyword) ? true : false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 59
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an empty TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a TaskList already containing Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * This is used if Storage is able to load data from the text file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskStrings List of lines in the text file, representing Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e taskStrings) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        for (String taskString : taskStrings) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            this.tasks.add(lineToTask(taskString));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Converts a line of text into a Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskString Line of text from text file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Task which is specified by the line of text"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task lineToTask(String taskString) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String[] taskLine \u003d taskString.split(\"~\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        switch (taskLine[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d new ToDo(taskLine[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d new Deadline(taskLine[2], taskLine[3]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d new Event(taskLine[2], taskLine[3]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (taskLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            assert task !\u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns a String listing out all the tasks in the tasklist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of list of tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            t \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks +\u003d String.format(\"\\t %d.%s%n\", i + 1, t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void addTasks(Task task) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the size of the TaskList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Number of items in TaskList."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public int numTasks() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Converts the TaskList into lines of text."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return List containing lines of text."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ArrayList\u003cString\u003e tasksToText() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ArrayList\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            strings.add(task.toData());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns a String listing out all the tasks that match the keyword."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of list of tasks."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String findTasks(String keyword) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        int numMatch \u003d 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            t \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            if (t.hasKeyword(keyword)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                numMatch++;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                tasks +\u003d String.format(\"\\t %d.%s%n\", numMatch, t);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Deletes and returns the task at a position in the list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param idx Position of the Task in the list of tasks."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Task which was deleted."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task deleteTask(int idx) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t \u003d tasks.get(idx - 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks.remove(idx - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Marks a tast in the list as done."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param idx Position of Task in the list of tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Task which was marked as done."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task markTask(int idx) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t \u003d tasks.get(idx - 1);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 149
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a Task which is a Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Todo Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param description Description of Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the String representation of a Todo."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of a Todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the text representation of a Todo to be saved in a text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Text representation of Todo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"T\" + separator + isDone + separator + super.description + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 37
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents the Ui dealing with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String DIVIDER \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \" _____     __   __   ________   _________\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|     \\\\   |  | |  | |__    __| |   ______|\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|  |\\\\  \\\\  |  | |  |    |  |    |  |______\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|  | \\\\  \\\\ |  | |  |    |  |    |   ______|\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|  |  \\\\  \\\\|  | |  |    |  |    |  |______\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|__|   \\\\_____| |__|    |__|    |_________|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String GREETING \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"\\t Hello! I\u0027m Nite, the Dark Knight,\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"\\t Here to help you track your tasks and achieve a great night.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"\\t What can I do for you?\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String GOODBYE \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"\\t Good nite! Hope you have a good night\u0027s sleep. See you soon!\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Ui for interacting with the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays the welcome message when user starts up Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(DIVIDER + GREETING + DIVIDER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays the farewell message when user exits Duke."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.print(DIVIDER + GOODBYE + DIVIDER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays a formatted error message if a DukeException occurs."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param errorMessage Error message of the DukeException."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String enhancedMessage \u003d \"\\t :-( OOPS!!! \" + errorMessage + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(DIVIDER + enhancedMessage + DIVIDER);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays a formatted message showing execution of a command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param actionMessage Message to be shown to user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showAction(String actionMessage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(DIVIDER + actionMessage + DIVIDER);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays a loading error if unable to load tasks from text file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        System.out.println(\"Unable to load Tasklist\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Scans for user input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String of text that user has input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return scanner.hasNextLine() ? scanner.nextLine() : \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 83
    }
  },
  {
    "path": "src/test/java/duke/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert(new ExitCommand().isExit());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 10
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void testToData() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assertEquals(\"D~0~tP AB3 familiarization~2020-08-26 2359\\n\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                new Deadline(\"tP AB3 familiarization\", \"2020-08-26 2359\").toData());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 14
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task test \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        test.markAsDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assertEquals(\"\\u2713\", test.getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "deadline tP AB3 familiarization /by 2020-08-26 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "help"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "find tP"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cwenling": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "cwenling": 3,
      "-": 20
    }
  }
]
