[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 43,
      "tanzhuoyao-nus": 20
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Deadline class represents a task with a specified deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Constructor for Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param isComplete Boolean to indicate if deadline is complete"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param index Index position of Task in TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param instructions Task description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param date Deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Deadline(boolean isComplete, int index, String instructions, String date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.date \u003d parseTime(date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Constructor for Deadline object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param isComplete Boolean to indicate if deadline is complete"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param index Index position of Task in TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param instructions Task description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param date Deadline in LocalDate form"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Deadline(boolean isComplete, int index, String instructions, LocalDate date) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Converts time in String format to LocalDate format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param time A String represented as \"yyyy-MM-d\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return A LocalDate object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public LocalDate parseTime(String time) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[D][✓] \" + this.instructions + \" (by: \" + outputFormatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[D][✗] \" + this.instructions + \" (by: \" + outputFormatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 59
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Main class to run Ui object and listen for user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Constructor to initialise Duke object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param filePath Location of Duke.ser"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    String getResponse(String input) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return this.ui.initialise(tasks, storage, input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Main method"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param args Parameters"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @throws Exception File not found exception"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        // remember to change filepath to \"../../../data/duke.txt\" during jar build"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        // Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        // duke.run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 40,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Event class represents a task with a specific time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Constructor for Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param isComplete Boolean to indicate if event is complete"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param index Index position of Task in TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param instructions Event description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param time Time of event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Event(boolean isComplete, int index, String instructions, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.time \u003d parseTime(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Constructor for Event object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param isComplete Boolean to indicate if event is complete"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param index Index position of Task in TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param instructions Event description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param time Time of event in LocalDate format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Event(boolean isComplete, int index, String instructions, LocalDate time) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Returns time of Event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return Time as LocalDate object"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Converts time in String format to LocalDate format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param time A String represented as \"yyyy-MM-d\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return A LocalDate object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public LocalDate parseTime(String time) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[E][✓] \" + this.instructions + \" (at: \" + outputFormatter.format(this.time) + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[E][✗] \" + this.instructions + \" (at: \" + outputFormatter.format(this.time) + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 63
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Shows the welcome statement."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String greeting \u003d Ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                DialogBox.getDukeDialog(greeting, dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private void handleUserInput() throws Exception {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 65
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Parser class handles any incoming user input and generates the appropriate command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input as String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list Current list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Access to duke.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return The appropriate Command object to execute"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public static Command parse(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Command parsedCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            parsedCommand \u003d new ByeCommand(command, list, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            parsedCommand \u003d new ListCommand(command, list, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new InvalidCommand(command, list, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new DeleteCommand(command, list, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new InvalidCommand(command, list, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new DoneCommand(command, list, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new InvalidCommand(command, list, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new TodoCommand(command, list, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new InvalidCommand(command, list, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new DeadlineCommand(command, list, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new InvalidCommand(command, list, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new EventCommand(command, list, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new InvalidCommand(command, list, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                parsedCommand \u003d new FindCommand(command, list, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            parsedCommand \u003d new InvalidCommand(command, list, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return parsedCommand;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 71
    }
  },
  {
    "path": "src/main/java/duke/ResponseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * ResponseException handles errors when the response is not understood by Parser."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class ResponseException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public ResponseException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 10
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Storage class has access to duke.ser file for reading and writing of data."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Accesses duke.txt file in order to read and load in data as a List of Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return List of stored Tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @throws Exception FIle not found"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public List\u003cTask\u003e loadData() throws Exception {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            FileInputStream readData \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            ObjectInputStream readStream \u003d new ObjectInputStream(readData);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            ArrayList\u003cTask\u003e loadedList \u003d (ArrayList\u003cTask\u003e) readStream.readObject();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            readStream.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            list \u003d loadedList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            throw new FileNotFoundException(\"☹ OOPS!!! I can\u0027t find your file leh!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            throw new Exception(\"☹ OOPS!!! I can\u0027t load your file leh...\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Stores modified List of tasks and writes onto duke.txt for future access."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list List of stored Tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void writeData(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            FileOutputStream writeData \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            writeStream.writeObject(list);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            writeStream.flush();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            writeStream.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 59
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Task class is a parent."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected boolean isComplete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected String instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Constructor for Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param isComplete Boolean to indicate if task is complete"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param index Index position of Task in TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param instructions Task description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Task(boolean isComplete, int index, String instructions) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * To change the status of a Task to done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return A completed Task object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    // mark a task as complete"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Task markDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this instanceof Todo) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return new Todo(true, this.index, this.instructions);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return new Deadline(true, this.index, this.instructions, ((Deadline) this).getDate());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (this instanceof Event) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return new Event(true, this.index, this.instructions, ((Event) this).getTime());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return new Task(true, this.index, this.instructions);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[✓] \" + this.instructions;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[✗] \" + this.instructions;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 50
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * TaskList object stores the List of Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Iterates through the list of Tasks stored."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return A String of List of Tasks stored"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String iterateAndPrintToDo() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            output.append(counter).append(\". \").append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Removes a specified Task from the list of Tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param number Position of Task to delete"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void deleteTask(int number) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list.remove(number - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Adds a specified Task to the list of Tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param counter Position to add Task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param task Specified Task to be added"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void addTask(int counter, Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list.add(counter, task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Filters through list of Tasks for appropriate keyword within instructions."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param keyword Word to filter by"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return A String of filtered Lists of Tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String filter(String keyword) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        List\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String loweredCaseKeyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (task.instructions.toLowerCase().contains(loweredCaseKeyword)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                filteredList.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return iterateFilteredList(filteredList);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Helper function to iterate through filtered list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list A list of filtered Tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @return A String format of list of filtered Tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String iterateFilteredList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            output.append(counter).append(\". \").append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 88
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Todo class represents a Todo Task that stores instructions from user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Todo(boolean isComplete, int index, String instructions) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[T][✓] \" + this.instructions;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[T][✗] \" + this.instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 20
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Ui class is an Event Handler that reads user input and dictates the outcome."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Shows initial start up ASCII art of Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String logo \u003d \" _ .-\u0027) _               .-. .-\u0027)     (\u0027-.  \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \"( (  OO) )              \\\\  ( OO )  _(  OO)  \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" \\\\     .\u0027_  ,--. ,--.   ,--. ,--. (,------. \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" ,`\u0027--..._) |  | |  |   |  .\u0027   /  |  .---\u0027 \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" |  |  \\\\  \u0027 |  | | .-\u0027) |      /,  |  |     \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" |  |   \u0027 | |  |_|( OO )|     \u0027 _)(|  \u0027--.  \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" |  |   / : |  | | `-\u0027 /|  .   \\\\   |  .--\u0027  \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" |  \u0027--\u0027  /(\u0027  \u0027-\u0027(_.-\u0027 |  |\\\\   \\\\  |  `---. \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" `-------\u0027   `-----\u0027    `--\u0027 \u0027--\u0027  `------\u0027 \\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return \"Hello from\\n\" + logo + horizontalLine"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \"Hello! I\u0027m Duke la\\n\" + \"What can I do for you ah?\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Shows when there is an error accessing and loading duke.txt."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        System.out.println(\"☹ AIYO!!! I cannot load the file sia...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Runs and starts the Duke bot."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list Loaded list of Tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that has access to duke.txt"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @throws Exception File not found"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String initialise(TaskList list, Storage storage, String input) throws Exception {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        // parses into a command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Command c \u003d Parser.parse(input, list, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return c.execute(input, list, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 46
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * ByeCommand class handles instructions when user wants to exit the script."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public ByeCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Runs the \"bye\" command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String byeMessage \u003d \"Bye bye. See you soon bro!\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return horizontalLine + byeMessage + horizontalLine;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 32
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * Parent Command class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected TaskList list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Command object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command Input received"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list List of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object to access duke.ser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Command(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Null Command object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.command \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.storage \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * To be overridden by subclasses."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 49
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * DeadlineCommand class handles instructions when user wants to create Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public DeadlineCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Adds a Deadline object to TaskList object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String instructions \u003d command.substring(9);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String[] arr \u003d instructions.split(\"/by\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        instructions \u003d arr[0].substring(0, arr[0].length() - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String date \u003d arr[1].substring(1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        int counter \u003d list.getList().size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.addTask(counter, new Deadline(false, counter + 1, instructions, date));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        storage.writeData(list.getList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String taskMessage \u003d list.getList().get(counter).toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return horizontalLine + \"Okok. I help you add this task: \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + taskMessage + \"\\n\" + \"You got \" + (counter + 1) + \" tasks in the list.\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 36
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * DeleteCommand class handles instructions when user wants to delete task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public DeleteCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Deletes specified task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String index \u003d command.substring(7);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            int number \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (number \u003c\u003d 0 || number \u003e list.getList().size()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                return \"Sorry hor, the number you keyed in is out of range...\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                String taskMessage \u003d list.getList().get(number - 1).toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                list.deleteTask(number);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                storage.writeData(list.getList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                return horizontalLine + \"Task deleted liao: \\n\" + taskMessage + \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        + \"You got \" + list.getList().size() + \" tasks left. \\n\" + horizontalLine;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"Sorry hor, the number you keyed in is invalid...\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * DoneCommand class handles instructions when user wants to mark task as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public DoneCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String index \u003d command.substring(5);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            int number \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (number \u003c\u003d 0 || number \u003e list.getList().size()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                return \"Sorry hor, the number you keyed in is out of range...\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                list.getList().set(number - 1, list.getList().get(number - 1).markDone());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                String taskMessage \u003d list.getList().get(number - 1).toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                storage.writeData(list.getList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                return horizontalLine + \"Swee! Now I will mark this as done: \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        + taskMessage + \"\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"Sorry hor, the number you keyed in is invalid...\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 39
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * EventCommand class handles instructions when user wants to create Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public EventCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Adds an Event object to TaskList object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String instructions \u003d command.substring(6);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String[] arr \u003d instructions.split(\"/at\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        instructions \u003d arr[0].substring(0, arr[0].length() - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String date \u003d arr[1].substring(1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        int counter \u003d list.getList().size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Event event \u003d new Event(false, counter + 1, instructions, date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.addTask(counter, event);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String taskMessage \u003d list.getList().get(counter).toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        storage.writeData(list.getList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return horizontalLine + \"Okok. I help you add this task: \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + taskMessage + \"\\n\" + \"You got \" + (counter + 1) + \" tasks in the list.\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 36
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * FindCommand executes a filter on TaskList based on what user is finding."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public FindCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String keyword \u003d command.substring(5);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return horizontalLine + \"Here are the things you want lor: \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            + list.filter(keyword) + horizontalLine;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 21
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * InvalidCommand class handles user inputs something invalid"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public InvalidCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Informs user that his command was invalid"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return horizontalLine + \"AIYO!!! I don\u0027t understand what you want leh! Can try again?\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * ListCommand shows user the tasks contained in TaskList object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public ListCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Accesses TaskList object to iterate through the Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return horizontalLine + \"Here are the things you need to do lor: \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            + list.iterateAndPrintToDo() + horizontalLine;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 26
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " * TodoCommand class handles instructions when user wants to create Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public TodoCommand(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(command, list, storage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * Adds a Todo object to TaskList object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param command User input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param list TaskList object containing all tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     * @param storage Storage object that reads and writes to duke.ser"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String execute(String command, TaskList list, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String horizontalLine \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String instructions \u003d command.substring(5);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        int counter \u003d list.getList().size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.addTask(counter, new Todo(false, counter + 1, instructions));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String taskMessage \u003d list.getList().get(counter).toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        storage.writeData(list.getList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return horizontalLine + \"Okok. I add for you: \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + taskMessage + \"\\n\" + \"You got \" + (counter + 1) + \" tasks in the list.\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 32
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 19
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testEmptyTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"\", new TaskList().iterateToDo());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testFilledTaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.add(new Todo(false, 1, \"Wash clothes\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"1. [T][✗] Wash clothes\\n\", new TaskList(list).iterateToDo());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.add(new Todo(false, 1, \"Wash clothes\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.add(new Deadline(false, 2, \"Do testing\", \"2020-10-10\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        TaskList test \u003d new TaskList(list);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        test.deleteTask(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"1. [D][✗] Do testing (by: 10 Oct 2020)\\n\", test.iterateToDo());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 35
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testTodo() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Task test \u003d new Todo(false, 1, \"Wash Clothes\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"[T][✗] Wash Clothes\", test.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Task test \u003d new Deadline(false, 1, \"Wash Clothes\", \"2020-10-23\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"[D][✗] Wash Clothes (by: 23 Oct 2020)\", test.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testMarkDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Task test \u003d new Event(false, 1, \"Wash Car\", \"2020-11-19\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        test \u003d test.markDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"[E][✓] Wash Car (at: 19 Nov 2020)\", test.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "todo wash car"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "deadline project /by tonight 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "event party /at Orchard 10pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "tanzhuoyao-nus": 2
    }
  }
]
