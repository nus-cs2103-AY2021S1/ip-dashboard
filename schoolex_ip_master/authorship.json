[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public static String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public static String[] inputs,tokens;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public static void main(String[] args) throws DukeException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"______________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        inputs \u003d sc.nextLine().split(\" \",2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        command \u003d inputs[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        while(!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            switch(command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    System.out.println(\"Task list\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    int i \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    for (Task task : tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        System.out.println(i++ + \". \" + task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        handleDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    tokens \u003d inputs[1].split(\" /by \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    tasks.add(new Deadline(tokens[0],tokens[1]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    tokens \u003d inputs[1].split(\" /at \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    tasks.add(new Event(tokens[0],tokens[1]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        handleToDo();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        handleDelete();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "schoolex"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            inputs \u003d sc.nextLine().split(\" \",2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            command \u003d inputs[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"--------------------------------\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    private static void handleToDo() throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        if (inputs.length \u003c 2) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        tasks.add(new ToDo(inputs[1]));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    private static void handleDone() throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            throw new DukeException(\"This task does not exist\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        tasks.get(index).markDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    private static void handleDelete() throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "schoolex"
        },
        "content": "            throw new DukeException(\"This task does not exist\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "schoolex": 103
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 25
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "schoolex"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "schoolex"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "schoolex": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "schoolex"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "schoolex"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "schoolex"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "schoolex"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "schoolex"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "schoolex"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "schoolex"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "schoolex"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "schoolex": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "schoolex"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "schoolex"
        },
        "content": "FC ACTUAL.TXT EXPECTED-UNIX.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "schoolex": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "schoolex"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "schoolex"
        },
        "content": "fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "schoolex"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "schoolex": 3
    }
  }
]
