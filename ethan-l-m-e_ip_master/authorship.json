[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Duke is a text-based bot that tracks different types of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Supports the creation of Todo, Deadline \u0026 Event Tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * as well as other commands such as search, marking as done etc."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructs a Duke object and initialises Ui, Storage \u0026 TaskList classes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param filePath Path of local save file for Duke\u0027s task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            ui.greetingMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Starts running process of Duke."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * While running, reads user input through Ui,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Parser determines the associated Command given,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * The Command is executed and TaskList is saved to drive."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * This method also encapsulates each reply from Duke with a"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * line separator above and below."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        boolean running \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                storage.store(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if(c.isExit()) { running \u003d false; }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Main function of Duke"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Checks if the save folder for Duke exists before creating a new Duke Object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String filePathString \u003d \".\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            File taskData \u003d new File(filePathString);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (taskData.exists()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                //nothing."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                File dir \u003d new File(\".\\\\data\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                System.out.println(dir.mkdir());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                boolean created \u003d taskData.createNewFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                assert created;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 83,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * A Command represents an instruction to be executed by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Identifies of the Command results in the termination of Duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Contains the execution instructions specific to each Command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param tasks TaskList kept by Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param ui Ui object initialized by Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param storage Storage object initialized by Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Represents a call to create a new Deadline Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructor for DeadlineCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param description Description of Deadline Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param deadline Date for which Deadline is due."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public DeadlineCommand(String description, String deadline) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        Task t \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.addTaskMessage(t, tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Represents a call to delete a Task from TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param taskNumber Task number of Task in TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Task t \u003d tasks.retrieve(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            ui.deleteTaskMessage(t, tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Task does not exist/invalid task number.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Represents a call to mark a Task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param taskNumber Task number of Task in the TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Task t \u003d tasks.retrieve(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (t.isDone()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"Task is already marked as done.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            ui.doneTaskMessage(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Task does not exist/invalid task number.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 43
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Represents a call to create a new Event Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String eventDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructor for EventCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param description Description of the Event Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param eventDate Time at which Event occurs in String form."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public EventCommand(String description, String eventDate) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        Task t \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.addTaskMessage(t, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Represents a call to close Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.exitMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 23
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Represents a call to find Tasks that contain the keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String keyWords;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructor for FindCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param keyWords String input of key words to compare with Tasks\u0027 description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public FindCommand(String keyWords) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.keyWords \u003d keyWords;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.findTasksMessage(tasks, keyWords);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Represents a call to list all Tasks in TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.listTasksMessage(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 22
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Represents a call to create a new Todo Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Creates a new TodoCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param description String of user input to be entered as the description of a new Todo Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        Task t \u003d new Todo(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.addTaskMessage(t, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 36
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Exception class for handling errors related to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.e \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Creates a new DukeException with the given message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param e Error message to be shown."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public DukeException(String e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.e \u003d \"☹ OOPS!!! \" + e;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 28
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Parser takes in and makes sense of the user input read by Ui."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns the relevant Command if user input is valid,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * otherwise throws a DukeException."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param fullCommand String of a line of user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String prefix \u003d arr[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String suffix;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            suffix \u003d arr[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            suffix \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        switch (prefix) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareTodo(suffix);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareDeadline(suffix);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareEvent(suffix);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareDone(suffix);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareDelete(suffix);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareList(suffix);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareFind(suffix);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns a TodoCommand if user input is valid."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param suffix String that follows after \"todo\" command ."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareTodo(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (suffix.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new TodoCommand(suffix);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns a DeadlineCommand if user input is valid."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param suffix String that follows after \"deadline\" command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareDeadline(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String[] suffixArray \u003d suffix.split(\"/by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new DeadlineCommand(suffixArray[0].strip(), suffixArray[1].strip());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Ensure that deadlines have correct description.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns a EventCommand if user input is valid."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param suffix String that follows after \"event\" command."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareEvent(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String[] suffixArray \u003d suffix.split(\"/at \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new EventCommand(suffixArray[0].strip(), suffixArray[1].strip());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Ensure that events have correct description.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns a DoneCommand if user input is valid."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param suffix String that follows after \"done\" command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareDone(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (!suffix.matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"done should be followed by a single task number.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new DoneCommand(Integer.parseInt(suffix));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns a DeleteCommand if user input is valid."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param suffix String that follows after \"delete\" command."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareDelete(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (!suffix.matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"delete should be followed by a single task number.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(suffix));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns a ListCommand if user input is valid."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param suffix String that follows after \"list\" command."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareList(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (suffix.length() !\u003d 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareFind(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (suffix.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"You cannot search for nothing.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new FindCommand(suffix);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 129
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * The Storage class handles the reading and writing of data from the hard disk."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Data is stored at the provided file path."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructs a new Storage object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param filePath Path of local save file for Duke\u0027s task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Saves Duke\u0027s TaskList in its current state to a file on the hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param tasks TaskList kept by this instance of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void store(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\".\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            StringBuilder textToWrite \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Task t \u003d tasks.retrieve(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                // Insert / separators."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String nextEntry \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        t.getStringType() + \" / \" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        t.isDoneToString() + \" / \" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        t.getDescription() + t.getDate().map(result -\u003e \" / \" + result).orElse(\"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                textToWrite.append(nextEntry).append(\"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            writer.write(String.valueOf(textToWrite));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Reads stored information from file and returns a List of tasks to be fed to Duke\u0027s TaskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                // Get next line."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String nextEntryLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                // Remove dividers and place into array."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String[] nextEntryArray \u003d nextEntryLine.split(\" / \", 4);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                // Get type of Task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String nextEntryTaskType \u003d nextEntryArray[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                // Get description of Task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String nextEntryDescription \u003d nextEntryArray[2];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                // Get length of the stored entry."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                int nextEntryLength \u003d nextEntryArray.length;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                // Check if Task has been marked as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                boolean isDone \u003d nextEntryArray[1].equals(\"1\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                // Create Task to add to TaskList."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if (nextEntryTaskType.equals(\"T\") \u0026\u0026 nextEntryLength \u003d\u003d 3) { // Todo Task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    t \u003d new Todo(nextEntryDescription);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    if (isDone) { t.markAsDone(); }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                } else if (nextEntryTaskType.equals(\"D\") \u0026\u0026 nextEntryLength \u003d\u003d 4) { // Deadline Task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    String by \u003d nextEntryArray[3];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    t \u003d new Deadline(nextEntryDescription, by);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                } else if (nextEntryTaskType.equals(\"E\") \u0026\u0026 nextEntryLength \u003d\u003d 4) { // Event Task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    String at \u003d nextEntryArray[3];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    t \u003d new Event(nextEntryDescription, at);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    // Unknown Task type."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    throw new DukeException(\"Check duke.txt storage file integrity:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            // Return updated List of Tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 109
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * This is a Deadline Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Keeps a description as well as a date for which the Deadline is due."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Also stores a LocalDate object of the date, and outputs in the format MMM dd yyyy."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private LocalDate byLocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructs a new Deadline Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param description Description of Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param by Date due for the Deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            this.byLocalDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Date is not in YYYY-MM-DD format\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getStringType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Optional\u003cString\u003e getDate() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return Optional.of(this.by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                byLocalDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * This is an Event Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Keeps a description as well as a time at which the event occurs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructs a new Event Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param description Description of Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param at Time at which the Event occurs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getStringType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Optional\u003cString\u003e getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return Optional.of(this.at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * This class is a representation of a Task object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructs a Task object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param description Description of the given Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Retrieves the status of a Task: done or not done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns a symbol: a tick for a completed Task, cross for an incomplete Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Changes the status of a Task from !isDone to isDone."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns the description of the Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Checks if the Task isDone."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isDone() { return isDone; }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns 1 if Task isDone, 0 otherwise."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String isDoneToString() { return isDone ? \"1\" : \"0\"; }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Method for returning the letter representation of a Task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * \u0027E\u0027 for Event, \u0027D\u0027 for Deadline etc."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public abstract String getStringType();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns a stored date/time in the form of an Optional."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Todo does not have any date associated, so this returns an empty Optional."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Deadline and Event tasks will have an associated date/time."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public abstract Optional\u003cString\u003e getDate();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean contains(String keyWords) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return description.contains(keyWords);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 74
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * The TaskList object keeps a List of Tasks for Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * Supports functions to retrieve, add, remove, and query Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * TaskList constructor called when first running Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "         tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * TaskList constructor called when reading data from Storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param tasks A List of tasks retrieved from the hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns the current number of Tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Returns the Task associated with a task number."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param i Task number provided."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Task retrieve(int i) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return tasks.get(i - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Adds a given Task to the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param t Given Task to be added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Removes the Task associated with a task number from the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param i Task number provided."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void remove(int i) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        tasks.remove(i - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 58
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * This is a Todo Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * It keeps a description of a Task to be done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Constructs a new Todo Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getStringType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Optional\u003cString\u003e getDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 33
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * The Ui class handles interaction with the user, and is responsible for"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " * creating display messages."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "      this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Reads the next line of user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Generates a line of # to separate text."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"#############################################################\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Displays the error message of a DukeException to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param e DukeException provided."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void showError(DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(e.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Shows error message if problem exists at creation of a new Duke object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"███████╗██████╗░██████╗░░█████╗░██████╗░  ░█████╗░████████╗  ██╗░░░░░░█████╗░░█████╗░██████╗░\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔══██╗  ██╔══██╗╚══██╔══╝  ██║░░░░░██╔══██╗██╔══██╗██╔══██╗\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"█████╗░░██████╔╝██████╔╝██║░░██║██████╔╝  ███████║░░░██║░░░  ██║░░░░░██║░░██║███████║██║░░██║\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"██╔══╝░░██╔══██╗██╔══██╗██║░░██║██╔══██╗  ██╔══██║░░░██║░░░  ██║░░░░░██║░░██║██╔══██║██║░░██║\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"███████╗██║░░██║██║░░██║╚█████╔╝██║░░██║  ██║░░██║░░░██║░░░  ███████╗╚█████╔╝██║░░██║██████╔╝\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝  ╚═╝░░╚═╝░░░╚═╝░░░  ╚══════╝░╚════╝░╚═╝░░╚═╝╚═════╝░\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Greeting message that shows when Duke successfully starts up."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void greetingMessage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \" What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Display message for when a new Todo, Deadline or Event is added."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param t Given Task that is added."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param tasks TaskList kept by Duke."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void addTaskMessage(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String message \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"  \" + t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"Now you have \" + tasks.getNumOfTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Display message when a Task is marked as done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param t Given Task that is completed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void doneTaskMessage(Task t) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String message \u003d"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \"  \" + t.toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Display message when a Task is deleted from the TaskList."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param t Given Task that has been removed."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param tasks TaskList kept by Duke."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void deleteTaskMessage(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String message \u003d"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        \"  \" + t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        \"Now you have \" + tasks.getNumOfTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Prints out a list of all tasks in the TaskList."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param tasks TaskList kept by Duke."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void listTasksMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Task t \u003d tasks.retrieve(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            System.out.format(\"%d.%s\\n\", i, t.toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Prints out a list of all tasks that whose descriptions contain the given keyWords."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param tasks TaskList kept by Duke."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * @param keyWords Key words entered by user."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void findTasksMessage(TaskList tasks, String keyWords) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Task t \u003d tasks.retrieve(i);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (t.contains(keyWords)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                System.out.format(\"%d.%s\\n\", i, t.toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     * Display message when Duke is told to close."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void exitMessage() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 140
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void invalidTaskIndex_exceptionThrown() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            tasks.add(new Todo(\"have fun\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            int taskNumber \u003d 7;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Command newDeleteCommand \u003d new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            newDeleteCommand.execute(tasks, new Ui(), new Storage(\"./data/duke.txt\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Task does not exist/invalid task number.\", e.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 26
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void testTodoCommand_exceptionInvalidThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String input \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Command newCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a todo cannot be empty.\", e.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void testDeadlineCommand_exceptionInvalidThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String input \u003d \"deadline 12345 6\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Command newCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Ensure that deadlines have correct description.\", e.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void testEventCommand_exceptionInvalidThrown() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String input \u003d \"event /at 0\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Command newCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Ensure that events have correct description.\", e.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void testDeleteCommand_exceptionInvalidThrown() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String input \u003d \"delete a\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Command newCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            assertEquals(\"☹ OOPS!!! delete should be followed by a single task number.\", e.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void testDoneCommand_exceptionInvalidThrown() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String input \u003d \"done\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Command newCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            assertEquals(\"☹ OOPS!!! done should be followed by a single task number.\", e.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 59
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 5000"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event 123456 1234 1123"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "del data"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "ethan-l-m-e": 3
    }
  }
]
