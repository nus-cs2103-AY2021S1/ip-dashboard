[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[D][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.sql.SQLOutput;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Scanner scan1 \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        while (scan1.hasNext()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                String command \u003d scan1.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (storage.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    for (Task item : storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        int position \u003d storage.indexOf(item) + 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(position + \".\" + item);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        int number \u003d scan1.nextInt();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        Task current \u003d storage.get(number - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        current.setDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(current.getStatusIcon() + \" \" + current.getDescription());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(\"delete2\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String desc \u003d scan1.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    Todo todo \u003d new Todo(desc);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    storage.add(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int size \u003d storage.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"  \" + todo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String desc \u003d scan1.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String[] string \u003d desc.split(\"/by\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (string.length \u003c 2) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    Deadline deadline \u003d new Deadline(string[0], string[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    storage.add(deadline);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int size \u003d storage.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"  \" + deadline);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String desc \u003d scan1.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String[] string \u003d desc.split(\"/at\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (string.length \u003c 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    Events event \u003d new Events(string[0], string[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    storage.add(event);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int size \u003d storage.size();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"  \" + event);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String bye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(bye);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    scan1.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        int number \u003d scan1.nextInt();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        Task task \u003d storage.get(number - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        storage.remove(number - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        int size \u003d storage.size();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(\"delete2\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 109,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    String s;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.s \u003d s;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        if (this.s.equals(\"\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter your command.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description of your todo with the command.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description and timing of the deadline with the command.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"event\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description and timing of the event with the command.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"The list is currently empty, add items with the todo, deadline or event command.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"delete\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the number position of the item that you wish to delete.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"delete2\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"That item has already been deleted or it does not exist.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the number position of the item that you wish to mark done.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Sorry I do not understand that command.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 31
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Events(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[E][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (at:\" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "deadline homework"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "deadline homework /by today"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    pause"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "yan-soon": 6
    }
  }
]
