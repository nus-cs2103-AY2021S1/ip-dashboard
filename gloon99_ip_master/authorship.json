[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 17,
      "-": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "D | 0 | return book | Monday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "E | 0 | tutorial | 2020-09-04"
      }
    ],
    "authorContributionMap": {
      "gloon99": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * duke is a chat bot cum task manager"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 36,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Duke duke \u003d new Duke(Duke.FILE_PATH);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 32
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * deals with making sense of the user command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String firstWord \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new ToDoCommand(fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new DeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new EventCommand(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"clear\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new ClearCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new HelpCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new ExitCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                return new InvalidCommand(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 38
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        createFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return decodeTxtFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                String encodedTask \u003d task.encode();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                fw.write(encodedTask + System.lineSeparator());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        File duke \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (!duke.exists()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                duke.createNewFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ArrayList\u003cTask\u003e decodeTxtFile() throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ArrayList\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            String string;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                string \u003d s.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                switch (string.charAt(0)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    case \u0027D\u0027:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                        task \u003d Deadline.decode(string);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    case \u0027E\u0027:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                        task \u003d Event.decode(string);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    case \u0027T\u0027:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                        task \u003d ToDo.decode(string);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                decodedTasks.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return decodedTasks;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 94
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * contains the task list and has operations to alter the task list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String numberOfTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"you have [\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.tasks.size()).append(\"] task(s) in your list\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Task done(int taskNumber) throws InvalidIndexException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Task task \u003d getTaskNumber(taskNumber - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Task delete(int taskNumber) throws InvalidIndexException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Task task \u003d getTaskNumber(taskNumber - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ArrayList\u003cTask\u003e getMatchingTasks(String item) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            if (task.toString().contains(item)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void deleteAll() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Task getTaskNumber(int taskNumber) throws InvalidIndexException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            return this.tasks.get(taskNumber);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"sorry! the task number: \")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    .append(taskNumber + 1)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                    .append(\" does not exist in your list\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new InvalidIndexException(sb.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 78
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * deals with interactions with the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"hello! i\u0027m shiro :-)\\n\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"what can i do for you today?\\n\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"\\n\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"more: type \u0027help\u0027 for more information\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        System.out.println(\"There was an error loading the file\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return \"byebye! hope to see you again soon :-)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ClearCommand(String fullCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        tasks.deleteAll();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return getClearMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getClearMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return \"all the tasks in your list have been cleared\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 23
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    String fullCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    Command(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DeadlineCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public DeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Deadline deadline \u003d new Deadline(fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return addedTaskMessage(deadline, tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(fullCommand.substring(7));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Task task \u003d tasks.delete(taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return deletedTaskMessage(task, tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String deletedTaskMessage(Task deletedTask, TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"sure thing. i have removed this task: \\n    \")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(deletedTask).append(\"\\n\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(tasks.numberOfTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(fullCommand.substring(5));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Task task \u003d tasks.done(taskNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return doneTaskMessage(task, tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String doneTaskMessage(Task deletedTask, TaskList tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"yay! i have marked this task as done: \\n    \")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(deletedTask).append(\"\\n\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(tasks.numberOfTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 31
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class EventCommand extends TaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public EventCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Event event \u003d new Event(fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return addedTaskMessage(event, tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ExitCommand(String fullCommand) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return ui.exit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 17
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public FindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (fullCommand.length() \u003c 6) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of \u0027find\u0027 cannot be empty\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.getMatchingTasks(fullCommand.substring(5));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return matchingTasksMessage(matchingTasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String matchingTasksMessage(ArrayList\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"there are no tasks matching the given search\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(i+1).append(\". \").append(matchingTasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString().trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 40
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public HelpCommand(String fullCommand) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return getHelpMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getHelpMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"to add tasks to your list: \\n    \")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"ToDo - type \u0027todo \u003cdescription of your todo\u003e\u0027\\n    \")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"Deadline - type \u0027deadline \u003cdescription of your deadline\u003e /by \u003cdue date\u003e\u0027\\n    \")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"Event - type \u0027event \u003cdescription of your event\u003e /at \u003cdue date\u003e\\n\").append(\"\\n\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"for other functions: \\n    \")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"type \u0027done \u003ctask number\u003e\u0027 to mark that task as done\\n    \")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"type \u0027delete \u003ctask number\u003e\u0027 to remove that task from your list\\n    \")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"type \u0027list\u0027 to see your list of tasks\\n    \")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"type \u0027find \u003ckeyword\u003e\u0027 to search for tasks containing that keyword\\n    \")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"type \u0027bye\u0027 to exit\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 33
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public InvalidCommand(String fullCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return \"oops! im sorry, but i do not know what that means :-(\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ListCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return getTaskListMessage(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getTaskListMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"there are no tasks in your list\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            sb.append(\"here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                sb.append(i+1).append(\". \").append(tasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString().trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 36
    }
  },
  {
    "path": "src/main/java/duke/command/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public abstract class TaskCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    TaskCommand(String fullCommand) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String addedTaskMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"got it! i have added the following task to your list:\\n    \")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(task)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"\\n\" + tasks.numberOfTasks());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ToDoCommand extends TaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ToDoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ToDo todo \u003d new ToDo(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return addedTaskMessage(todo, tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public DukeException() { }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class EmptyDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public EmptyDateException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * represents a deadline task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Deadline(String taskDescription) throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (taskDescription.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else if (!taskDescription.contains(\"/\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDateException(\"oops! the date for the deadline was not specified\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int space \u003d taskDescription.indexOf(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int slash \u003d taskDescription.indexOf(\"/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.task \u003d taskDescription.substring(space + 1, slash);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.deadline \u003d taskDescription.substring(slash + 4);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.done \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String deadline;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(this.deadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            deadline \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            deadline \u003d this.deadline;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[D]\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(super.toString())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"(by: \").append(deadline).append(\")\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder encodedTask \u003d new StringBuilder();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        encodedTask.append(\"D | \")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.isDoneInt() + \" | \")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.task + \"| \")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return encodedTask.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static Deadline decode(String string) throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String[] split \u003d string.split(\" \\\\| \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String taskDescription \u003d \"deadline \" + split[2] + \" /by \" + split[3];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Deadline deadline \u003d new Deadline(taskDescription);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (split[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            deadline.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 74
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * represents an event task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public Event(String taskDescription) throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (taskDescription.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of an event cannot be empty\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else if (!taskDescription.contains(\"/\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDateException(\"oops! the date for the event was not specified\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int space \u003d taskDescription.indexOf(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int slash \u003d taskDescription.indexOf(\"/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.task \u003d taskDescription.substring(space + 1, slash);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.eventTime \u003d taskDescription.substring(slash + 4);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.done \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String eventTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(this.eventTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            eventTime \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            eventTime \u003d this.eventTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[E]\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(super.toString())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(\"(at: \").append(eventTime).append(\")\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getEventTime() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String eventTime;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(this.eventTime);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            eventTime \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            eventTime \u003d this.eventTime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder encodedTask \u003d new StringBuilder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        encodedTask.append(\"E | \")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.isDoneInt() + \" | \")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.task + \"| \")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.eventTime);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return encodedTask.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static Event decode(String string) throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String[] split \u003d string.split(\" \\\\| \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String taskDescription \u003d \"event \" + split[2] + \" /at \" + split[3];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Event event \u003d new Event(taskDescription);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (split[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            event.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 85
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * represents a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public int isDoneInt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return this.done? 1 : 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public abstract String encode();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        sb.append(\"[\").append(this.getStatus()).append(\"] \").append(this.task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 34
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * represents a todo task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public ToDo(String taskDescription) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (taskDescription.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            throw new EmptyDescriptionException(\"oops! the description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            int space \u003d taskDescription.indexOf(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.task \u003d taskDescription.substring(space + 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            this.done \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        StringBuilder encodedTask \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        encodedTask.append(\"T | \")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.isDoneInt() + \" | \")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                .append(this.task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return encodedTask.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static ToDo decode(String string) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String[] split \u003d string.split(\" \\\\| \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String taskDescription \u003d \"todo \" + split[2];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ToDo todo \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (split[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            todo.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 49
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 61
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().showWelcome(), dukeImage));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gloon99"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gloon99"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gloon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gloon99"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gloon99": 62
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"500.0\" style\u003d\"-fx-max-height: \u0026quot;Infinity\u0026quot;;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" style\u003d\"-fx-background-color: FFFFCC; -fx-background-radius: 15; -fx-padding: 7.5;\" text\u003d\"label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            \u003cInsets /\u003e "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            \u003cFont name\u003d\"Avenir Book\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gloon99"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gloon99"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gloon99": 33
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"BOTTOM_LEFT\" layoutX\u003d\"7.0\" layoutY\u003d\"662.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"411.0\" promptText\u003d\"message...\" style\u003d\"-fx-background-radius: 10; -fx-background-color: E5CCFF;\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            \u003cFont name\u003d\"Avenir Book\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" graphicTextGap\u003d\"0.0\" layoutX\u003d\"424.0\" layoutY\u003d\"663.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"69.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: CCE5FF;\" text\u003d\"SEND\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "            \u003cFont name\u003d\"Avenir Next Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"-1.0\" prefHeight\u003d\"654.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gloon99"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"656.0\" prefWidth\u003d\"482.0\" style\u003d\"-fx-background-color: E5CCFF;\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gloon99"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gloon99"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gloon99": 26
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void event() throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        Event event \u003d new Event(\"event project meeting /at 2020-08-30\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        String eventTime \u003d event.getEventTime();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        assertEquals(\"Aug 30 2020\", eventTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 16
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    public void todo() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        ToDo todo \u003d new ToDo(\"todo read book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gloon99"
        },
        "content": "        assertEquals(true, todo.isDone());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gloon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gloon99": 15
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "[T][✘] read book"
      }
    ],
    "authorContributionMap": {
      "gloon99": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gloon99": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gloon99"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gloon99"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gloon99"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gloon99"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "gloon99": 6,
      "-": 32
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/EmptyDescriptionException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Parser.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ReadIn.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Ui.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gloon99"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "gloon99": 12
    }
  }
]
