[
  {
    "path": "Data/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "[T] false eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "[T] true sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "[T] true eat"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "[T] false fast"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 4
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 18,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Deadline(String description, boolean isCompleted, String deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        super(description,isCompleted);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.date \u003d parseDate(deadline);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.time \u003d parseTime(deadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String storeFormat() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s %s %s %s\",this.getTaskSymbol(),this.isDone(),this.description,this.deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s (by: %s %s)\",this.description,date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),time.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public LocalDate parseDate(String deadline) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "       return  LocalDate.parse(deadline.split(\"\\\\s+\")[0]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public LocalTime parseTime(String deadline) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return LocalTime.parse(deadline.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 42
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 60
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Duke extends Application{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String GREET_TEXT \u003d \"Hello World!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private UI userInterface \u003d new UI();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Label helloWorld \u003d new Label(getGreetText()); // Creating a new Label control"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String getGreetText() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return GREET_TEXT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    String getResponse(String input)  {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String command \u003d parseInput(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (isExitCommand(command)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            writeDataToFile(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return getGoodbyeMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (isListCommand(command)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return listAllTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (isFindCommand(command)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            String keyword \u003d getKeyWord(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return listAllSearchResults(keyword);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (isCompletedCommand(command)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Task task \u003d getTask(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return getTaskCompletionMessage(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (isDeleteCommand(command)){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (isInvalidDeleteCommand(command)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                throw new IllegalUserInputException(\"Please specify the correct argument number\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return deleteTask(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return storeInput(input, taskList, userInterface);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            this.taskList \u003d new TaskList(Storage.loadFile());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            System.out.println(\"An error has occurred: \" + e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        userInterface.greetUser();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        do{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                String input \u003d Parser.getUserCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                String command \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    Storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    userInterface.goodbye();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    userInterface.listTasks(taskList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                } else if (command.split(\"\\\\s+\")[0].equals(\"find\"))  {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    String keyword \u003d Parser.parseKeyWord(command);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    UI.listTasks(taskList.search(keyword));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                } else if (command.split(\"\\\\s+\")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    Task task \u003d taskList.get(Integer.parseInt(command.split(\"\\\\s+\")[1]) - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    task.setDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    userInterface.taskCompletedMessage(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                }else if (command.split(\"\\\\s+\")[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    if (command.split(\"\\\\s+\").length !\u003d 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        throw new IllegalUserInputException(\"PLease specify the correct argument number\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        int i \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        Task.decrementTask();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        Task task \u003d taskList.get(i-1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        taskList.deleteTaskIndex(i-1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        userInterface.taskDeletedMessage(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    } catch (TaskListError e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        System.out.println(e.getDetails());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    storeInput(input, taskList, userInterface);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            } catch (IllegalArgumentException | IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } while (true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static String storeInput(String command, TaskList taskList,UI userInterface) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String cmd1 \u003d command.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String cmd2;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Task task \u003dnull;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (cmd1.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            cmd2 \u003d  command.substring(cmd1.length()+1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                task \u003d Parser.parseDeadline(cmd2);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }catch (Exception e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "               System.out.println( \"Please specify time in format YYYY-MM-DD hh:hh \\n for instance : 2019-10-15 18:00\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (cmd1.equals(\"todo\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (command.split(\"\\\\s+\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                throw new IllegalUserInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            cmd2 \u003d  command.substring(cmd1.length()+1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d new Todo(cmd2,false);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (cmd1.equals(\"event\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            cmd2 \u003d  command.substring(cmd1.length()+1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d Parser.parseEvent(cmd2);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            throw new IllegalUserInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        assert task!\u003dnull : \"Task should not be null\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return userInterface.taskAddedMessage(task);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String parseInput(String input) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return UI.parseInput(input);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isExitCommand(String command) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return command.equals(\"bye\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private void writeDataToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } catch (IOException | IllegalArgumentException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String getGoodbyeMessage() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return userInterface.goodbye();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isListCommand(String command) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return command.equals(\"list\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String listAllTasks() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return userInterface.listTasks(taskList);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isFindCommand(String command) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return command.split(\"\\\\s+\")[0].equals(\"find\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String getKeyWord (String command) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return Parser.parseKeyWord(command);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String listAllSearchResults(String keyword) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return UI.listTasks(taskList.search(keyword));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isCompletedCommand(String command) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return command.split(\"\\\\s+\")[0].equals(\"done\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private Task getTask(String command) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return taskList.get(Integer.parseInt(command.split(\"\\\\s+\")[1]) - 1);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String getTaskCompletionMessage(Task task) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return userInterface.taskCompletedMessage(task);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isDeleteCommand(String command) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return command.split(\"\\\\s+\")[0].equals(\"delete\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isInvalidDeleteCommand(String command) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return command.split(\"\\\\s+\").length !\u003d 2;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String deleteTask(String command) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            int i \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Task.decrementTask();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Task task \u003d taskList.get(i-1);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            taskList.deleteTaskIndex(i-1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return userInterface.taskDeletedMessage(task);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } catch (TaskListError e) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return e.getDetails();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 223,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * Event class encapsulates Event object which is a subtype of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String EVENT_SYMBOL \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Constructor for Event class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param name String description or name of event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param isCompleted boolean indicating completion of task. True means task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     *                    has been completed. False means vice versa."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param duration String duration of event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Event (String name,boolean isCompleted, String duration) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        super(name,isCompleted);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String getDuration() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @return the symbol of the Event class as a String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return EVENT_SYMBOL;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Formats the Event object to be stored in the Database."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @return the storage of the event as a String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String storeFormat() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s %s %s %s\",this.getTaskSymbol(),this.isDone(),this.description,this.duration);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String toString () {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(\"%s (at: %s)\",this.description,this.duration);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 44
    }
  },
  {
    "path": "src/main/java/duke/IllegalUserInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class IllegalUserInputException extends IllegalArgumentException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public IllegalUserInputException (String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 12
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 50
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static Printable getUserInput() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return () -\u003e scanner.nextLine();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static String getUserCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return getUserInput().print();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static String[] splitString(String str) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return str.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public  static Task parseDeadline(String deadlineInputString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String[] arr \u003d splitString(deadlineInputString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String description\u003d\"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String deadline\u003d\"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (int i \u003d 0; i\u003carr.length;i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (arr[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                flag \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (!flag) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                description +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                deadline +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return new Deadline (description.substring(0,description.length()-1),false,deadline.substring(0,deadline.length()-1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static Task parseEvent (String eventInputString) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String[] arr \u003d splitString(eventInputString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String description\u003d\"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String duration\u003d\"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (int i \u003d 0; i\u003carr.length;i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (arr[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                flag \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (!flag) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                description +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                duration +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return new Event (description.substring(0,description.length()-1),false,duration.substring(0,duration.length()-1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static String parseKeyWord(String command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return command.substring(5);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 62
    }
  },
  {
    "path": "src/main/java/duke/Printable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public interface Printable {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String print();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 4
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * Store and Retrieve tasks from the task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static String  folderPath \u003d \"Data\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static String writePath \u003d \"Data/Duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Writes tasks to file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param taskList List of tasks to be written to the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void writeToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        FileWriter fw \u003d new FileWriter(writePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        fw.write(\"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (Task task : taskList.getListOfTasks()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            fw.append(task.storeFormat() + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Loads tasks from Database to be stored in the taskList"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @return list of Tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static List\u003cTask\u003e loadFile() throws IOException{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            File f \u003d new File(writePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                    tasks.add(generateTask(taskString));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                System.out.println(\"Initializing storage\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                File f2 \u003d new File(folderPath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                f2.mkdir();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Reads tasks from the database"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param taskString Storage string that represents the task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @return the actual task object"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static Task generateTask(String taskString) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String [] arr \u003d taskString.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        boolean isCompleted \u003d booleanToString(arr[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (arr[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d generateDeadline(arr,isCompleted);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (arr[0].equals(\"[E]\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d new Event(arr[2],isCompleted,arr[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (arr[0].equals(\"[T]\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            task \u003d new Todo(arr[2], isCompleted);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            System.out.println(\"This task cannot be read: \" + taskString);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static Deadline generateDeadline(String[] arr, boolean isCompleted) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String deadline \u003d arr[arr.length-2] + \" \" +arr[arr.length-1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        String description \u003d arr[2];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (i \u003d3 ; i \u003c arr.length-2 ;i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            description +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return new Deadline(description,isCompleted,deadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static boolean booleanToString (String bool) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (bool.equals(\"false\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (bool.equals(\"true\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(\"Boolean could not be deciphered\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 94
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    protected static int total \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Task(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.description \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.isDone \u003d isCompleted;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.total ++;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static int remainingTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return Task.total;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (!this.isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            this.total--;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public abstract String getTaskSymbol();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public abstract String storeFormat();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static void decrementTask() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Task.total --;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public boolean contains(String keyword) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (this.getClass().equals(other.getClass())) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Task object2 \u003d (Task)other;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return this.description.equals(object2.description) \u0026\u0026 this.isDone\u003d\u003dobject2.isDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 59
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * Stores tasks in a list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Constructor to initialize the tasks "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public List\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public int getTotalTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void deleteTaskIndex(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        assert getTotalTask() \u003e 0 : \"Task list is empty!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            taskList.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            throw new TaskListError(2,index,getTotalTask());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return taskList.get(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            throw new TaskListError(1,index,getTotalTask());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public TaskList search (String keyWord) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (Task task:this.taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (task.contains(keyWord)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 59
    }
  },
  {
    "path": "src/main/java/duke/TaskListError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class TaskListError extends IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static String errorType1 \u003d \"Accessing out of bounds index in TaskList \" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            \"You tried to access index %s The list is of size %s\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static String errorType2 \u003d \"Deleting out of bounds index in TaskList \" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            \"You tried to delete index %s The list is of size %s\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String INVALID_ERROR_MESSAGE \u003d \"Invalid Error Type\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private int errorType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private int indexAccessed;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private int sizeOfList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public TaskListError(int errorType, int indexAccessed, int sizeOfList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        assert isValidErrorType() : INVALID_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.indexAccessed \u003d indexAccessed;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        this.sizeOfList \u003d sizeOfList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        if (isErrorType1()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return getError1Message();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        } else if (isErrorType2()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            return getError2Message();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return INVALID_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isErrorType1() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return errorType \u003d\u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String getError1Message() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(errorType1,indexAccessed,sizeOfList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isErrorType2() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return errorType \u003d\u003d 2;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private String getError2Message() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(errorType2,indexAccessed,sizeOfList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private boolean isValidErrorType() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return isErrorType1() || isErrorType2();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 51
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * Todo is a type of Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String TODO_SYMBOL \u003d \"[T]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String STORE_FORMAT \u003d \"%s %s %s\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public Todo(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        super(name,isCompleted);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @return String representing the symbol of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String getTaskSymbol() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return TODO_SYMBOL;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Formats the Todo object to be stored in the Database."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @return the storage of the event as a String"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String storeFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(STORE_FORMAT,this.getTaskSymbol(),this.isDone(),this.description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 28
    }
  },
  {
    "path": "src/main/java/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " * Deals with user interactions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static Printable greetingMessage \u003d () -\u003e \"Hello! I\u0027m Duke \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static Printable goodbyeMessage \u003d () -\u003e \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String TASK_COMPLETION_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n[✓] \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String TASK_DELETION_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            \"%s%s %s\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static final String TASK_ADDITION_MESSAGE \u003d \"Got it. i\u0027ve added this task:\\n %s%s %s\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Generates greeting message for user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        introduceDuke();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        speak(greetingMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Generates goodbye message for user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String goodbye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return goodbyeMessage.print();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Generates Task completion message for user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param task Completed Task as input"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String taskCompletedMessage(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return TASK_COMPLETION_MESSAGE + task.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Generates task deletion message for user"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param task Task to be deleted as input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String taskDeletedMessage (Task task) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(TASK_DELETION_MESSAGE,task.getTaskSymbol(),task.getSymbol(),task.toString(),Task.remainingTasks());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public String taskAddedMessage (Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return String.format(TASK_ADDITION_MESSAGE, task.getTaskSymbol(), task.getSymbol(), task.toString(), Task.remainingTasks());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * Lists completed tasks for user"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     * @param taskList list of tasks as input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static String listTasks (TaskList taskList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        StringBuilder sb \u003d createStringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        addTaskToStringBuilder(sb,taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static void speak(Printable printable) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(\"------------------------------------------------------\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(printable.print() + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(\"------------------------------------------------------\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static void introduceDuke() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(\"Hello from\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static StringBuilder createStringBuilder() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    private static StringBuilder addTaskToStringBuilder(StringBuilder sb, TaskList taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for (i \u003d 0 ; i \u003c taskList.getTotalTask() ; i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            if (i\u003d\u003dtaskList.getTotalTask()-1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                sb.append(String.format(\"%d.%s %s\",i+1,task.getSymbol(),task));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                sb.append(String.format(\"%d.%s %s\\n\", i+1,task.getSymbol(), task));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return sb;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public static String parseInput (String input) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        return input.toLowerCase();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 105
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 19
    }
  },
  {
    "path": "src/test/Data/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "[T] false eat"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 1
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void storageTest() throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        TaskList taskList\u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        TaskList taskList2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        taskList.addTask(new Todo(\"eat\",false));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Storage.loadFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        Storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        taskList2 \u003d new TaskList(Storage.loadFile());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        for  (int i \u003d 0; i\u003ctaskList.getTotalTask();i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "            assertEquals(taskList.get(i),taskList2.get(i));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 23
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void totalTasksCheck() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        TaskList list \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        list.addTask(new Todo(\"sleep\", false));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        list.addTask(new Todo(\"eat\",true));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        assertEquals(list.getTotalTask(),2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    public void deleteTaskIndexTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        TaskList list \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        list.addTask(new Todo(\"sleep\", false));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        list.addTask(new Todo(\"eat\",true));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        list.deleteTaskIndex(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "        assertEquals(list.getTotalTask(),1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nauman-S"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Nauman-S": 1,
      "-": 20
    }
  }
]
