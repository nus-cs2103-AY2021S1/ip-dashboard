[
  {
    "path": "data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "E|0|ball |/sunday"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 1
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "T//0// 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "D//0// p//2020-10-10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "E//0// p//2020-10-10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "T//0// 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "T//0// 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "E//0// p//2020-10-10"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 6
    }
  },
  {
    "path": "data/test1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "T//0//1"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 1
    }
  },
  {
    "path": "data/test2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "T//0//do something"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        new Duke(\"data/data.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Rogerlys": 38
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.error.IncorrectFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public AddCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IncorrectFormat {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        int space \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        int slash \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        int length \u003d input.length();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        switch(input.substring(0, space)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            newTask \u003d new ToDo(input.substring(space, length));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            ui.printNew(newTask, \"ToDo\", tasks.numTask() + 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            String dateStringDeadline \u003d input.substring(slash + 1, input.length());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            newTask \u003d new Deadline(input.substring(space, slash), dateStringDeadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            ui.printNew(newTask, \"Deadline\", tasks.numTask() + 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            String dateStringEvent \u003d input.substring(slash + 1, input.length());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            newTask \u003d new Event(input.substring(space, slash), dateStringEvent);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            ui.printNew(newTask, \"Event\", tasks.numTask() + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            throw new IncorrectFormat();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        tasks.addTask(newTask, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 51
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.error.IncorrectFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IncorrectFormat, IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 15
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        Task removed \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ui.showDelete(removed, tasks.numTask());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 18
    }
  },
  {
    "path": "src/main/java/duke/command/PrintCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.parts.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class PrintCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ui.printList(storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 19
    }
  },
  {
    "path": "src/main/java/duke/error/IncorrectFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class IncorrectFormat  extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public IncorrectFormat() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        super(\"    Please use the correct format. Thank you\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 7
    }
  },
  {
    "path": "src/main/java/duke/error/UnknownAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class UnknownAction extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public UnknownAction() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        super(\"    I\u0027m sorry, but I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 7
    }
  },
  {
    "path": "src/main/java/duke/parts/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.parts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.command.PrintCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.error.UnknownAction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public static Command parse(String input) throws UnknownAction {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        if(input.indexOf(\"todo\") \u003d\u003d 0 || input.indexOf(\"deadline\") \u003d\u003d 0 || input.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            return new AddCommand(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        } else if(input.equals(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            return new PrintCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        } else if(input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        } else if(input.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            String index \u003d input.replaceAll(\"\\\\D+\",\"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(index));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            throw new UnknownAction();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 25
    }
  },
  {
    "path": "src/main/java/duke/parts/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.parts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    void createFile() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            File directory \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            File file \u003d new File(\"./data/data.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                if (!file.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        createFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            Scanner sc \u003d new Scanner(path);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                String[] parts \u003d sc.nextLine().split(\"//\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                switch (parts[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    arr.add(new ToDo(parts[2], parts[1].equals(\"1\")));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    arr.add(new Event(parts[2], parts[1].equals(\"1\"), parts[3]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    arr.add(new Deadline(parts[2], parts[1].equals(\"1\"), parts[3]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    void save(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                for (Task t : arr) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    FileWriter fileWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    fileWriter.write(t.writeToFile());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                    fileWriter.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 83
    }
  },
  {
    "path": "src/main/java/duke/parts/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.parts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    void updateList(Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void addTask(Task task, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        updateList(storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        Task removed \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public int numTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 36
    }
  },
  {
    "path": "src/main/java/duke/parts/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.parts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    static String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    static String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(INDENT + \"Hello! What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    void printNumTask(int numTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(String.format(\"%syou have %d tasks in the list.\", INDENT, numTask));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void showDelete(Task removed, int numLeft) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(INDENT + \"Tasked removed: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(INDENT + removed.getOutput());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        printNumTask(numLeft);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void printList(Storage storage) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ArrayList\u003cTask\u003e arrTask \u003d storage.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        printNumTask(arrTask.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(INDENT + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        for(int i \u003d 0; i \u003c arrTask.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            System.out.println(String.format(\"%s%d. %s\",INDENT,  i + 1, arrTask.get(i).getOutput()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void printNew(Task task, String type, int numTask) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(String.format(\"%sAdding %s to the list:\",INDENT ,type));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(String.format(\"%s %s\", INDENT, task.getOutput()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        printNumTask(numTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        System.out.println(INDENT + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    LocalDate time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.time \u003d LocalDate.parse(time);;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Deadline(String description, boolean isDone, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    String printTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"[D]%s\", super.getStatusIcon(), printTime());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"D//%d//%s//%s\\n\", done, this.description, this.time );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"%s %s(By: %s)\", getStatusIcon(), this.description, printTime());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    LocalDate time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Event(String description, boolean isDone, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    String printTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"[E]%s\", super.getStatusIcon(), printTime());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"E//%d//%s//%s\\n\", done, this.description, this.time );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"%s %s(At: %s)\", getStatusIcon(), this.description, printTime());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        String sign \u003d isDone ? \"\\u2713\" : \"\\u2718\"; //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return (String.format(\"[%s]\", sign));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"%s%s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return \"-1\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 33
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"[T]%s \", super.getStatusIcon());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        int done \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return String.format(\"T//%d//%s\\n\", done, this.description );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        // If the object is compared with itself then return true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        if (!(o instanceof ToDo)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ToDo c \u003d (ToDo) o;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        return super.description.equals(((ToDo) o).description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 36
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 12
    }
  },
  {
    "path": "src/test/java/duke/parts/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.parts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.error.UnknownAction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void parserTest() throws UnknownAction {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        Command c1 \u003d Parser.parse(\"todo 1\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        Command c2 \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        Command c3 \u003d Parser.parse(\"event something/2020-10-10\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        assertEquals(c1.getClass().getName(), \"duke.command.AddCommand\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        assertEquals(c2.getClass().getName(), \"duke.command.PrintCommand\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        assertEquals(c3.getClass().getName(), \"duke.command.AddCommand\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 20
    }
  },
  {
    "path": "src/test/java/duke/parts/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.parts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 4
    }
  },
  {
    "path": "src/test/java/duke/parts/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "package duke.parts;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void addTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        assertEquals(tasks.numTask(), 0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        tasks.addTask(new ToDo(\"1\"), new Storage(\"./data/test1.txt\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        assertEquals(tasks.numTask(), 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    public void updateList() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        Storage s \u003d new Storage(\"./data/test2.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        tasks.addTask(new ToDo(\"do something\"), s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        ArrayList\u003cTask\u003e xs \u003d s.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "        assertEquals(xs.get(0).equals(new ToDo(\"do something\")), true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "deadline do assignment /by Monday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "event meeting with friends /never"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "deadline workout/ by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Rogerlys": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "Rogerlys": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rogerlys"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Rogerlys": 1
    }
  }
]
