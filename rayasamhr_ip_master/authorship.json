[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"rayasamhr":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"compileJava.options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"tasks.withType(JavaCompile) {"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"    options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"    systemProperty \"file.encoding\", \"utf-8\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":63,"author":{"gitId":"rayasamhr"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":67,"author":{"gitId":"rayasamhr"},"content":"    systemProperty \"file.encoding\", \"utf-8\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"rayasamhr":23,"-":46}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"# TODO-ke: User Guide"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"TODO-ke is a simple task management application with a "},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"command line interface (CLI) and graphical user interface"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"(GUI)."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"### 1. Adding a Task"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"#### 1.1 Adding a Todo"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"Adds a Todo to the task list. "},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"A Todo is a task with only a description and no date."},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"**Format**: `todo \u003cdescription\u003e`"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"**Examples**: "},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"- `todo assignment for CS2103`"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"#### 1.2 Adding a Deadline"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"Adds a Deadline to the task list. A Deadline is a task"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"containing a description and a date by which it is meant to be completed."},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"**Format**: `deadline \u003cdescription\u003e \\by \u003cdate in YYYY-MM-DD format\u003e`"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"**Examples**: "},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"- `deadline assignment for CS2103 \\by 2020-09-19`"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"- `deadline group project \\by 2020-11-01`"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"#### 1.3 Adding an Event"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"Adds an Event to the task list. An Event is a task"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"containing a description and a date at which it is scheduled to occur."},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"**Format**: `event \u003cdescription\u003e \\at \u003cdate in YYYY-MM-DD format\u003e`"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"**Examples**: "},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"- `event birth \\at 2000-09-23`"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"- `event moon landing \\at 1969-07-20`"},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"### 2. Viewing all Tasks"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"Displays all tasks currently in the task list."},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"**Format**: `list`"},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":"### 3. Deleting a Task"},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"Deletes a task from the task list."},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"**Format**: `delete \u003cindex of task\u003e`"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":"- The index **must be a positive integer** less than or equal to"},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"the current size of the task list."},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"**Examples**: "},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"- `delete 2`"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"### 4. Searching Task Descriptions"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"Displays all the tasks whose descriptions contain the search phrase."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"**Format**: `find \u003csearch phrase\u003e`"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"- Trailing whitespaces in the search phrase are ignored."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":"**Examples**: "},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"- `find cs2103` returns all tasks whose descriptions contain the phrase `cs2103`"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"rayasamhr"},"content":"### 5. Adding Priorities to Tasks"},{"lineNumber":63,"author":{"gitId":"rayasamhr"},"content":"Adds a priority descriptor to a specific task. Before this step,"},{"lineNumber":64,"author":{"gitId":"rayasamhr"},"content":"the default priority for a task is `UNDEFINED`."},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"rayasamhr"},"content":"**Format**: `priority \u003cindex of task\u003e \u003cpriority\u003e`"},{"lineNumber":67,"author":{"gitId":"rayasamhr"},"content":"- The `\u003cpriority\u003e` descriptor must be either `high`, `medium` or `low`."},{"lineNumber":68,"author":{"gitId":"rayasamhr"},"content":"- Adding a priority overrides the previous priority associated with the task."},{"lineNumber":69,"author":{"gitId":"rayasamhr"},"content":"- The index **must be a positive integer** less than or equal to"},{"lineNumber":70,"author":{"gitId":"rayasamhr"},"content":"the current size of the task list."},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"rayasamhr"},"content":"**Examples**: "},{"lineNumber":73,"author":{"gitId":"rayasamhr"},"content":"- `priority 2 high`"},{"lineNumber":74,"author":{"gitId":"rayasamhr"},"content":"- `priority 3 low`"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"rayasamhr"},"content":"### 6. Saving and Exiting"},{"lineNumber":77,"author":{"gitId":"rayasamhr"},"content":"Saves all the tasks in the list to a local file and exits the program."},{"lineNumber":78,"author":{"gitId":"rayasamhr"},"content":"The saved tasks will be loaded again when the program is next run."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"rayasamhr"},"content":"**Format**: `bye`"}],"authorContributionMap":{"rayasamhr":70,"-":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.control.Button;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    public static final String FILE_DIRECTORY \u003d \"data/\";"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    public static final String FILE_NAME \u003d \"duke.txt\";"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    private TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    private Ui ui;"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    private ScrollPane scrollpane;"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"     * Creates a new Duke object that loads input from the database file."},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"    public Duke() {"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"            ui \u003d new Ui();"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"            storage \u003d new Storage(FILE_DIRECTORY, FILE_NAME);"},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"            List\u003cTask\u003e taskList \u003d storage.generateTaskList();"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"            tasks \u003d new TaskList(storage.generateTaskList());"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"        } catch (IOException | DukeException e) {"},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"            ui.showError(e.toString());"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":"     * Runs the program on the Command Line Interface until"},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"     * a valid exit input is typed in by the user."},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"    public void run() {"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":"        ui.greet();"},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"        boolean isExit \u003d false;"},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":"        while (!isExit) {"},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"            try {"},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"                if (!fullCommand.isEmpty()) {"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"                    Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"                    c.execute(tasks, ui, storage);"},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":"                    isExit \u003d c.isExit();"},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"            } catch (DukeException | IOException e) {"},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"                ui.showError(e.toString());"},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":63,"author":{"gitId":"rayasamhr"},"content":"    public static void main(String[] args) {"},{"lineNumber":64,"author":{"gitId":"rayasamhr"},"content":"        new Duke().run();"},{"lineNumber":65,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":67,"author":{"gitId":"rayasamhr"},"content":"    public String getResponse(String userText) throws DukeException, IOException {"},{"lineNumber":68,"author":{"gitId":"rayasamhr"},"content":"        String fullCommand \u003d userText.trim();"},{"lineNumber":69,"author":{"gitId":"rayasamhr"},"content":"        Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":70,"author":{"gitId":"rayasamhr"},"content":"        return c.execute(tasks, ui, storage);"},{"lineNumber":71,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":72}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"import duke.command.EventCommand;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"import duke.command.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"import duke.command.FindCommand;"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"import duke.command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"import duke.command.MarkDoneCommand;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"import duke.command.PriorityCommand;"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"import duke.command.TodoCommand;"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException.ExceptionType;"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Priority;"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":" * Contains methods for processing user input, converting it to a {@link Command}"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":" * that can be executed."},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":" */"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"public class Parser {"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"     * Converts user input into a {@link Command} that can be executed."},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"     * @param input String input entered by user."},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"     * @return {@link Command} that can be executed."},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"     * @throws DukeException When no integer input is provided after \"done\" or \"delete\"."},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"     * @throws DukeException When no description is provided for a task."},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"     * @throws DukeException When there is no date flagged by \"/by\" for a deadline, or \"/at\" for an event."},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"     * @throws DukeException When the date input for a deadline or event does not follow YYYY-MM-DD format."},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"     * @throws DukeException When unsupported input is entered."},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":"            //Splits input into parts by spaces"},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"            String[] inputByParts \u003d input.split(\" \", 2);"},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":"            //Runs through the list of acceptable commands"},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":"                return new ExitCommand();"},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"            } else if (input.equals(\"list\")) {"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":"                return new ListCommand();"},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"            } else if (inputByParts[0].equals(\"delete\")) {"},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":"                int taskNumber \u003d Integer.parseInt(inputByParts[1]);"},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"                return new DeleteCommand(taskNumber);"},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"            } else if (inputByParts[0].equals(\"done\")) {"},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"                int taskNumber \u003d Integer.parseInt(inputByParts[1]);"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"                return new MarkDoneCommand(taskNumber);"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"            } else if (inputByParts[0].equals(\"find\")) {"},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":"                String toFind \u003d inputByParts[1];"},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"                return new FindCommand(toFind);"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"            } else if (inputByParts[0].equals(\"priority\")) {"},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"                String[] taskInfo \u003d inputByParts[1].split(\" \");"},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":"                int taskNumber \u003d Integer.parseInt(taskInfo[0]);"},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"                Priority priority \u003d getPriority(taskInfo[1]);"},{"lineNumber":61,"author":{"gitId":"rayasamhr"},"content":"                return new PriorityCommand(taskNumber, priority);"},{"lineNumber":62,"author":{"gitId":"rayasamhr"},"content":"            } else {"},{"lineNumber":63,"author":{"gitId":"rayasamhr"},"content":"                String taskType \u003d inputByParts[0];"},{"lineNumber":64,"author":{"gitId":"rayasamhr"},"content":"                validateTaskType(taskType);"},{"lineNumber":65,"author":{"gitId":"rayasamhr"},"content":"                String description \u003d inputByParts[1];"},{"lineNumber":66,"author":{"gitId":"rayasamhr"},"content":"                return parseNewTaskInput(taskType, description);"},{"lineNumber":67,"author":{"gitId":"rayasamhr"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"rayasamhr"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":69,"author":{"gitId":"rayasamhr"},"content":"            throw new DukeException(ExceptionType.NO_DESCRIPTION_PROVIDED);"},{"lineNumber":70,"author":{"gitId":"rayasamhr"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":71,"author":{"gitId":"rayasamhr"},"content":"            throw new DukeException(ExceptionType.INVALID_NUMBER_INPUT);"},{"lineNumber":72,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":75,"author":{"gitId":"rayasamhr"},"content":"    private static Priority getPriority(String inputByPart) throws DukeException {"},{"lineNumber":76,"author":{"gitId":"rayasamhr"},"content":"        switch (inputByPart) {"},{"lineNumber":77,"author":{"gitId":"rayasamhr"},"content":"        case \"high\":"},{"lineNumber":78,"author":{"gitId":"rayasamhr"},"content":"            return Priority.HIGH;"},{"lineNumber":79,"author":{"gitId":"rayasamhr"},"content":"        case \"medium\":"},{"lineNumber":80,"author":{"gitId":"rayasamhr"},"content":"            return Priority.MEDIUM;"},{"lineNumber":81,"author":{"gitId":"rayasamhr"},"content":"        case \"low\":"},{"lineNumber":82,"author":{"gitId":"rayasamhr"},"content":"            return Priority.LOW;"},{"lineNumber":83,"author":{"gitId":"rayasamhr"},"content":"        default:"},{"lineNumber":84,"author":{"gitId":"rayasamhr"},"content":"            throw new DukeException(ExceptionType.INVALID_PRIORITY);"},{"lineNumber":85,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":88,"author":{"gitId":"rayasamhr"},"content":"    private static Command parseNewTaskInput(String taskType, String description) throws DukeException {"},{"lineNumber":89,"author":{"gitId":"rayasamhr"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"rayasamhr"},"content":"            switch (taskType) {"},{"lineNumber":91,"author":{"gitId":"rayasamhr"},"content":"            case \"todo\":"},{"lineNumber":92,"author":{"gitId":"rayasamhr"},"content":"                return new TodoCommand(description);"},{"lineNumber":93,"author":{"gitId":"rayasamhr"},"content":"            case \"deadline\":"},{"lineNumber":94,"author":{"gitId":"rayasamhr"},"content":"                String[] deadlineDetails \u003d description.split(\"/by\", 2);"},{"lineNumber":95,"author":{"gitId":"rayasamhr"},"content":"                String deadlineDesc \u003d deadlineDetails[0].trim();"},{"lineNumber":96,"author":{"gitId":"rayasamhr"},"content":"                LocalDate deadlineTime \u003d LocalDate.parse(deadlineDetails[1].trim());"},{"lineNumber":97,"author":{"gitId":"rayasamhr"},"content":"                return new DeadlineCommand(deadlineDesc, deadlineTime);"},{"lineNumber":98,"author":{"gitId":"rayasamhr"},"content":"            default:"},{"lineNumber":99,"author":{"gitId":"rayasamhr"},"content":"                assert taskType.equals(\"event\") : \"The last case in the switch statement should be event.\";"},{"lineNumber":100,"author":{"gitId":"rayasamhr"},"content":"                String[] eventDetails \u003d description.split(\"/at\", 2);"},{"lineNumber":101,"author":{"gitId":"rayasamhr"},"content":"                String eventDesc \u003d eventDetails[0].trim();"},{"lineNumber":102,"author":{"gitId":"rayasamhr"},"content":"                LocalDate eventTime \u003d LocalDate.parse(eventDetails[1].trim());"},{"lineNumber":103,"author":{"gitId":"rayasamhr"},"content":"                return new EventCommand(eventDesc, eventTime);"},{"lineNumber":104,"author":{"gitId":"rayasamhr"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"rayasamhr"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":106,"author":{"gitId":"rayasamhr"},"content":"            throw new DukeException(DukeException.ExceptionType.NO_TIMEFRAME_PROVIDED);"},{"lineNumber":107,"author":{"gitId":"rayasamhr"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":108,"author":{"gitId":"rayasamhr"},"content":"            throw new DukeException(DukeException.ExceptionType.INVALID_TIMEFRAME);"},{"lineNumber":109,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":112,"author":{"gitId":"rayasamhr"},"content":"    private static void validateTaskType(String taskType) throws DukeException {"},{"lineNumber":113,"author":{"gitId":"rayasamhr"},"content":"        if (!(taskType.equals(\"todo\") || taskType.equals(\"deadline\") || taskType.equals(\"event\"))) {"},{"lineNumber":114,"author":{"gitId":"rayasamhr"},"content":"            throw new DukeException(taskType, DukeException.ExceptionType.UNEXPECTED_INPUT_IN_FILE);"},{"lineNumber":115,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":117}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Priority;"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Task;"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Todo;"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    public static final String LINE \u003d \"//\";"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    private String directoryName;"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    private String fileName;"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    private File databaseFile;"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"    private FileWriter fw;"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"     * Creates a new Storage object that stores a reference to a file."},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"     * If the file does not exist yet, creates the file."},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"     * @param directoryName String path to directory where the file is stored"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"     * @param fileName Name of file"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"    public Storage(String directoryName, String fileName) {"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"        assert directoryName !\u003d null \u0026\u0026 fileName !\u003d null : \"Directory and file names should be non-null strings\";"},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"        this.directoryName \u003d directoryName;"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"        //Create directory if it does not exist"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"        File directory \u003d new File(directoryName);"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"        boolean directoryIsCreated \u003d directory.mkdirs();"},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"        //Create path to file"},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":"        databaseFile \u003d new File(directoryName + fileName);"},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"     * Returns a list of {@code Task} objects corresponding to the information"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":"     * stored in the database file."},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"     * @return Previously saved list of tasks."},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":"     * @throws DukeException When the information stored in the database file cannot be parsed."},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"     * @throws IOException If an I/O error occurred."},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"    public List\u003cTask\u003e generateTaskList() throws DukeException, IOException {"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"        List\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":"        //Create file if it does not yet exist"},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"        boolean fileIsCreated \u003d databaseFile.createNewFile();"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"        //Read contents of file and transfer into list"},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":"        Scanner s \u003d new Scanner(databaseFile);"},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"        while (s.hasNext()) {"},{"lineNumber":61,"author":{"gitId":"rayasamhr"},"content":"            String nextstr \u003d s.nextLine();"},{"lineNumber":62,"author":{"gitId":"rayasamhr"},"content":"            Task next \u003d generateTaskFromFile(nextstr);"},{"lineNumber":63,"author":{"gitId":"rayasamhr"},"content":"            tempTaskList.add(next);"},{"lineNumber":64,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"rayasamhr"},"content":"        s.close();"},{"lineNumber":66,"author":{"gitId":"rayasamhr"},"content":"        return tempTaskList;"},{"lineNumber":67,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":69,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"rayasamhr"},"content":"     * Converts the existing task list into a format that can be parsed upon re-opening"},{"lineNumber":71,"author":{"gitId":"rayasamhr"},"content":"     * the Duke program and writes it to the database file."},{"lineNumber":72,"author":{"gitId":"rayasamhr"},"content":"     * @param tl List of tasks to be saved."},{"lineNumber":73,"author":{"gitId":"rayasamhr"},"content":"     * @throws IOException If an I/O error occurred."},{"lineNumber":74,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"rayasamhr"},"content":"    public void saveTaskList(TaskList tl) throws IOException {"},{"lineNumber":76,"author":{"gitId":"rayasamhr"},"content":"        fw \u003d new FileWriter(directoryName + fileName);"},{"lineNumber":77,"author":{"gitId":"rayasamhr"},"content":"        fw.write(tl.formatForSave());"},{"lineNumber":78,"author":{"gitId":"rayasamhr"},"content":"        fw.flush();"},{"lineNumber":79,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":81,"author":{"gitId":"rayasamhr"},"content":"    public void finalise() throws IOException {"},{"lineNumber":82,"author":{"gitId":"rayasamhr"},"content":"        fw.close();"},{"lineNumber":83,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":85,"author":{"gitId":"rayasamhr"},"content":"    private Task generateTaskFromFile(String nextLine) throws DukeException {"},{"lineNumber":86,"author":{"gitId":"rayasamhr"},"content":"        String[] taskCharacteristics \u003d nextLine.split(LINE);"},{"lineNumber":87,"author":{"gitId":"rayasamhr"},"content":"        boolean isDone \u003d taskCharacteristics[1].equals(\"1\");"},{"lineNumber":88,"author":{"gitId":"rayasamhr"},"content":"        String type \u003d taskCharacteristics[0];"},{"lineNumber":89,"author":{"gitId":"rayasamhr"},"content":"        String desc \u003d taskCharacteristics[2];"},{"lineNumber":90,"author":{"gitId":"rayasamhr"},"content":"        Priority priority \u003d getPriority(taskCharacteristics[3]);"},{"lineNumber":91,"author":{"gitId":"rayasamhr"},"content":"        switch (type) {"},{"lineNumber":92,"author":{"gitId":"rayasamhr"},"content":"        case (\"T\"):"},{"lineNumber":93,"author":{"gitId":"rayasamhr"},"content":"            return new Todo(desc, priority);"},{"lineNumber":94,"author":{"gitId":"rayasamhr"},"content":"        case (\"D\"):"},{"lineNumber":95,"author":{"gitId":"rayasamhr"},"content":"            return new Deadline(desc, priority, LocalDate.parse(taskCharacteristics[4]));"},{"lineNumber":96,"author":{"gitId":"rayasamhr"},"content":"        case (\"E\"):"},{"lineNumber":97,"author":{"gitId":"rayasamhr"},"content":"            return new Event(desc, priority, LocalDate.parse(taskCharacteristics[4]));"},{"lineNumber":98,"author":{"gitId":"rayasamhr"},"content":"        default:"},{"lineNumber":99,"author":{"gitId":"rayasamhr"},"content":"            throw new DukeException(type,"},{"lineNumber":100,"author":{"gitId":"rayasamhr"},"content":"                    DukeException.ExceptionType.UNEXPECTED_INPUT_IN_FILE);"},{"lineNumber":101,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":104,"author":{"gitId":"rayasamhr"},"content":"    private Priority getPriority(String priorityStr) {"},{"lineNumber":105,"author":{"gitId":"rayasamhr"},"content":"        System.out.println(priorityStr);"},{"lineNumber":106,"author":{"gitId":"rayasamhr"},"content":"        switch (priorityStr) {"},{"lineNumber":107,"author":{"gitId":"rayasamhr"},"content":"        case \"HIGH\":"},{"lineNumber":108,"author":{"gitId":"rayasamhr"},"content":"            return Priority.HIGH;"},{"lineNumber":109,"author":{"gitId":"rayasamhr"},"content":"        case \"MEDIUM\":"},{"lineNumber":110,"author":{"gitId":"rayasamhr"},"content":"            return Priority.MEDIUM;"},{"lineNumber":111,"author":{"gitId":"rayasamhr"},"content":"        case \"LOW\":"},{"lineNumber":112,"author":{"gitId":"rayasamhr"},"content":"            return Priority.LOW;"},{"lineNumber":113,"author":{"gitId":"rayasamhr"},"content":"        default:"},{"lineNumber":114,"author":{"gitId":"rayasamhr"},"content":"            return Priority.UNDEFINED;"},{"lineNumber":115,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":117}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"        StringBuilder res \u003d new StringBuilder();"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"        assert taskList !\u003d null : \"List of tasks should not be null.\";"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"            res.append(i)"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"                    .append(\". \")"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"                    .append(taskList.get(i - 1));"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"            if (i !\u003d taskList.size()) {"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"                res.append(\"\\n\");"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"        return res.toString();"},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"     * Returns information about the {@code Task} objects in its list in a"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"     * String format for saving."},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"     * @return String representation of list of tasks for saving."},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"    public String formatForSave() {"},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":"        StringBuilder res \u003d new StringBuilder();"},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"        for (Task t : taskList) {"},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":"            res.append(t.getSaveFormat());"},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":"            res.append(\"\\n\");"},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":"        return res.toString();"},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"    public void deleteTask(int taskNumber) {"},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":"        taskList.remove(taskNumber - 1);"},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"    public Task getTask(int taskNumber) throws DukeException {"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"            return taskList.get(taskNumber - 1);"},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"            throw new DukeException(DukeException.ExceptionType.REQUESTED_NONEXISTENT_ITEM);"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"rayasamhr"},"content":"     * Returns a new {@code TaskList} object containing a subset of the tasks whose"},{"lineNumber":62,"author":{"gitId":"rayasamhr"},"content":"     * descriptions contain the phrase specified."},{"lineNumber":63,"author":{"gitId":"rayasamhr"},"content":"     * @param phrase String phrase to search the list of tasks against."},{"lineNumber":64,"author":{"gitId":"rayasamhr"},"content":"     * @return New {@code TaskList} object containing a subset of the tasks."},{"lineNumber":65,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"rayasamhr"},"content":"    public TaskList findTasks(String phrase) {"},{"lineNumber":67,"author":{"gitId":"rayasamhr"},"content":"        List\u003cTask\u003e searchResult \u003d new ArrayList\u003c\u003e();"},{"lineNumber":68,"author":{"gitId":"rayasamhr"},"content":"        for (Task task: taskList) {"},{"lineNumber":69,"author":{"gitId":"rayasamhr"},"content":"            if (task.getDescription().contains(phrase)) {"},{"lineNumber":70,"author":{"gitId":"rayasamhr"},"content":"                searchResult.add(task);"},{"lineNumber":71,"author":{"gitId":"rayasamhr"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"rayasamhr"},"content":"        return new TaskList(searchResult);"},{"lineNumber":74,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":76,"author":{"gitId":"rayasamhr"},"content":"    public int getCount() {"},{"lineNumber":77,"author":{"gitId":"rayasamhr"},"content":"        return taskList.size();"},{"lineNumber":78,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":80,"author":{"gitId":"rayasamhr"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":81,"author":{"gitId":"rayasamhr"},"content":"        taskList.add(newTask);"},{"lineNumber":82,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":83}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"    public static final String TASK_LIST_NUMBER \u003d \"\\nNow you have %d tasks in the list\";"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    public static final String TASK_REMOVED \u003d \"Noted. I\u0027ve removed this task: \\n\";"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_READ \u003d \"Here are the tasks in your list: \\n\";"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_ADDED \u003d \"Got it. I\u0027ve added this task: \\n\";"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_COMPLETED \u003d \"Nice! I\u0027ve marked this task as complete. \\n\";"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    private static final String ERROR \u003d \"Whoops! There was an error. \\n\";"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    private static final String FAREWELL \u003d \"Bye. Hope to see you again soon.\";"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    private static final String DASH \u003d (\"\\u2500\").repeat(5);"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke \\n\""},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"            + \"What can I do for you?\";"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_PRIORITY_ADDED \u003d \"Got it. I\u0027ve added a priority to this task: \\n\";"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    private Scanner sc;"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    public Ui() {"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"     * Displays a basic greeting."},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"    public void greet() {"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"        printMessage(\"Hello from\\n\" + logo);"},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"        printMessage(GREETING);"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":"    public String displayTaskAdd(Task t, int numberOfItems) {"},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"        return printMessage(TASK_ADDED + t.toString() + String.format("},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":"                TASK_LIST_NUMBER, numberOfItems"},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":"        ));"},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"    public String displayTaskComplete(Task t) {"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":"        return printMessage(TASK_COMPLETED + t.toString());"},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"    public String displayTaskDelete(Task t, int numberOfItems) {"},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"        return printMessage(TASK_REMOVED + t.toString() + String.format("},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"                TASK_LIST_NUMBER, numberOfItems"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"        ));"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"    public String listTasks(TaskList tl) {"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"        return printMessage(TASK_READ + tl);"},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"    public String showError(String message) {"},{"lineNumber":61,"author":{"gitId":"rayasamhr"},"content":"        return printMessage(ERROR + message);"},{"lineNumber":62,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":64,"author":{"gitId":"rayasamhr"},"content":"    public String exit() {"},{"lineNumber":65,"author":{"gitId":"rayasamhr"},"content":"        sc.close();"},{"lineNumber":66,"author":{"gitId":"rayasamhr"},"content":"        return printMessage(FAREWELL);"},{"lineNumber":67,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":69,"author":{"gitId":"rayasamhr"},"content":"    private String printMessage(String message) {"},{"lineNumber":70,"author":{"gitId":"rayasamhr"},"content":"        String prettyMessage \u003d DASH + \"\\n\" + message + \"\\n\" + DASH;"},{"lineNumber":71,"author":{"gitId":"rayasamhr"},"content":"        System.out.println(prettyMessage);"},{"lineNumber":72,"author":{"gitId":"rayasamhr"},"content":"        return prettyMessage;"},{"lineNumber":73,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":75,"author":{"gitId":"rayasamhr"},"content":"    public String readCommand() {"},{"lineNumber":76,"author":{"gitId":"rayasamhr"},"content":"        String rawInput \u003d sc.nextLine();"},{"lineNumber":77,"author":{"gitId":"rayasamhr"},"content":"        return rawInput.trim();"},{"lineNumber":78,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":80,"author":{"gitId":"rayasamhr"},"content":"    public String displayTaskAddPriority(Task task) {"},{"lineNumber":81,"author":{"gitId":"rayasamhr"},"content":"        return printMessage(TASK_PRIORITY_ADDED + task.toString());"},{"lineNumber":82,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":83}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"public interface Command {"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    boolean isExit();"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":15}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"public class DeadlineCommand implements Command {"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    private final LocalDate deadlineTime;"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    private final String deadlineDesc;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"     * Creates a new DeadlineCommand object which will create a new {@code Deadline} object"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"     * when the execute() method is called."},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"     * @param deadlineDesc information about the {@code Deadline} to be added"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"     * @param deadlineTime time by which the {@code Deadline} is expected to be completed"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    public DeadlineCommand(String deadlineDesc, LocalDate deadlineTime) {"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"        this.deadlineDesc \u003d deadlineDesc;"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"        Deadline newTask \u003d new Deadline(deadlineDesc, deadlineTime);"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"        tasks.addTask(newTask);"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"        return ui.displayTaskAdd(newTask, tasks.getCount());"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":37}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"public class DeleteCommand implements Command {"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    private final int taskNumber;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    public DeleteCommand(int taskNumber) {"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        Task deletedTask \u003d tasks.getTask(taskNumber);"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"        tasks.deleteTask(taskNumber);"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"        return ui.displayTaskDelete(deletedTask, tasks.getCount());"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":28}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"public class EventCommand implements Command {"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    private final LocalDate eventTime;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"    private final String eventDesc;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    public EventCommand(String eventDesc, LocalDate eventTime) {"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"        this.eventDesc \u003d eventDesc;"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"        Event newTask \u003d new Event(eventDesc, eventTime);"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"        tasks.addTask(newTask);"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"        return ui.displayTaskAdd(newTask, tasks.getCount());"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"        return false;"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":32}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"public class ExitCommand implements Command {"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"        storage.saveTaskList(tasks);"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"        storage.finalise();"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"        return ui.exit();"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        return true;"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"        return obj \u003d\u003d this || obj instanceof ExitCommand;"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"public class FindCommand implements Command {"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"    private String toFind;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    public FindCommand(String toFind) {"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"        this.toFind \u003d toFind;"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"        return ui.listTasks("},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"                tasks.findTasks(toFind));"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"public class ListCommand implements Command {"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"        return ui.listTasks(tasks);"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"        return false;"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":19}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"public class MarkDoneCommand implements Command {"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    private final int taskNumber;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    public MarkDoneCommand(int taskNumber) {"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        Task completedTask \u003d tasks.getTask(taskNumber);"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"        completedTask.markDone();"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"        return ui.displayTaskComplete(completedTask);"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":28}},{"path":"src/main/java/duke/command/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Priority;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"public class PriorityCommand implements Command {"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    private final int taskNumber;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"    private final Priority priority;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    public PriorityCommand(int taskNumber, Priority priority) {"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"        this.priority \u003d priority;"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"        Task task \u003d tasks.getTask(taskNumber);"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"        task.addPriority(priority);"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"        return ui.displayTaskAddPriority(task);"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"        return false;"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":31}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"public class TodoCommand implements Command {"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"    private final String description;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    public TodoCommand(String description) {"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"        Todo newTask \u003d new Todo(description);"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        tasks.addTask(newTask);"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"        return ui.displayTaskAdd(newTask, tasks.getCount());"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    public boolean isExit() {"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"        return false;"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":27}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"public class DukeException extends Throwable {"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"    //for exceptions"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"    private static final String delete_task_number_missing \u003d \"Please enter a valid duke.task number\";"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_INDEX_OUT_OF_BOUNDS \u003d \"That task does not exist.\";"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_NUMBER_FORMAT \u003d \"Please enter the task number in numerals.\";"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_NO_DESCRIPTION \u003d \"Invalid, there is missing information.\";"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_INVALID_TYPE \u003d \"Invalid, not an accepted task type.\";"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_INVALID_DATE \u003d \"Invalid date. Please enter the date in YYYY-MM-DD format.\";"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    private static final String TASK_INVALID_PRIORITY \u003d \"Invalid priority. \""},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"        + \"Please enter either \u0027high\u0027, \u0027medium\u0027 or \u0027low\u0027.\";"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    private String word;"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"    private ExceptionType type;"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    public enum ExceptionType {"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        UNEXPECTED_INPUT_IN_FILE,"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"        NO_DESCRIPTION_PROVIDED,"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"        INVALID_NUMBER_INPUT,"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"        NO_TIMEFRAME_PROVIDED,"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"        INVALID_TIMEFRAME,"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"        REQUESTED_NONEXISTENT_ITEM,"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"        INVALID_PRIORITY"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    public DukeException(ExceptionType type) {"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"        this.type \u003d type;"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"    public DukeException(String word, ExceptionType type) {"},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"        this.word \u003d word;"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"        this.type \u003d type;"},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"        switch (type) {"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"        case INVALID_TIMEFRAME:"},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":"            return TASK_INVALID_DATE;"},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"        case INVALID_NUMBER_INPUT:"},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":"            return TASK_NUMBER_FORMAT;"},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":"        case NO_TIMEFRAME_PROVIDED:"},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"            return \"This task requires a date. Please follow the following format: \""},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":"                    + \"\\ndeadline [description] /by [date]\""},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"                    + \"\\nOR:\""},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":"                    + \"\\nevent [description] /at [date]\";"},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"        case NO_DESCRIPTION_PROVIDED:"},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":"            return TASK_NO_DESCRIPTION;"},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"        case UNEXPECTED_INPUT_IN_FILE:"},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"            return TASK_INVALID_TYPE;"},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"        case REQUESTED_NONEXISTENT_ITEM:"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"            return TASK_INDEX_OUT_OF_BOUNDS;"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"        case INVALID_PRIORITY:"},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":"            return TASK_INVALID_PRIORITY;"},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"        default:"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"            return \"There is an error. Try again.\";"},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":60}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"import javafx.geometry.Insets;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"public class DialogBox extends HBox {"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    private Label dialog;"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    private ImageView displayPicture;"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"     * Creates a new DialogBox object which displays some text and an image side by side."},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"     * @param text Text to be displayed."},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"     * @param im Image to be displayed."},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"    public DialogBox(String text, Image im) {"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"            FXMLLoader loader \u003d new FXMLLoader(Main.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"            loader.setController(this);"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"            loader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"            loader.load();"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"            VBox.setMargin(this, new Insets(10));"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":"        dialog.setText(text);"},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"        displayPicture.setImage(im);"},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"    public static DialogBox getUserDialog(String text, Image im) {"},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":"        return new DialogBox(text, im);"},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"    public static DialogBox getDukeDialog(String text, Image im) {"},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":"        DialogBox reversedOrientation \u003d new DialogBox(text, im);"},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"        reversedOrientation.flip();"},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"        return reversedOrientation;"},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"    private void flip() {"},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":"        ObservableList\u003cNode\u003e children \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"        FXCollections.reverse(children);"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"        getChildren().setAll(children);"},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":"        setStyle(\"-fx-background-color: #344955;\");"},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":62,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":62}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":" */"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"            FXMLLoader loader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"            AnchorPane ap \u003d loader.load();"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"            stage.setTitle(\"TODO-ke\");"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"            loader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":30}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.control.Button;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"public class MainWindow {"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"    private javafx.scene.image.Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    private javafx.scene.image.Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"        scrollPane.vvalueProperty()"},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"            .bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"    public void setDuke(Duke duke) {"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"        this.duke \u003d duke;"},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":"        String userText \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"        String fullCommand \u003d userText.trim();"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":"        String dukeText \u003d null;"},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":"            dukeText \u003d duke.getResponse(userText);"},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":"        } catch (DukeException e) {"},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"            dukeText \u003d e.toString();"},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"            e.printStackTrace();"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":"        DialogBox mUser \u003d DialogBox.getUserDialog(userText, userImage);"},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"        DialogBox mDuke \u003d DialogBox.getDukeDialog(dukeText, dukeImage);"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"        dialogContainer.getChildren()"},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"                .addAll(mUser, mDuke);"},{"lineNumber":59,"author":{"gitId":"rayasamhr"},"content":"        checkIfExit(fullCommand);"},{"lineNumber":60,"author":{"gitId":"rayasamhr"},"content":"        userInput.clear();"},{"lineNumber":61,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":63,"author":{"gitId":"rayasamhr"},"content":"    private void checkIfExit(String fullCommand) {"},{"lineNumber":64,"author":{"gitId":"rayasamhr"},"content":"        if (fullCommand.equals(\"bye\")) {"},{"lineNumber":65,"author":{"gitId":"rayasamhr"},"content":"            Platform.exit();"},{"lineNumber":66,"author":{"gitId":"rayasamhr"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":68}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    private LocalDate deadline;"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"     * Creates a new Deadline object that represents a task with a due date."},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"     * @param description information about the task"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"     * @param deadline date by which the task is expected to be completed"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"    public Deadline(String description, LocalDate deadline) {"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        super(description, \"D\");"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    public Deadline(String description, Priority p, LocalDate deadline) {"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"        super(description, p, \"D\");"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"    public String getSaveFormat() {"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"        return super.getSaveFormat() + Storage.LINE + deadline;"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"        return super.toString()"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"               + String.format(\" (by: %s)\", deadline.format("},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":"                        DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"    private LocalDate date;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    public Event(String description, LocalDate date) {"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"        super(description, \"E\");"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"        this.date \u003d date;"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    public Event(String description, Priority p, LocalDate date) {"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"        super(description, p, \"E\");"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        this.date \u003d date;"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"    public String getSaveFormat() {"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"        return super.getSaveFormat() + Storage.LINE + date;"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"        return super.toString()"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"                + String.format(\" (at: %s)\", date.format("},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"                    DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":32}},{"path":"src/main/java/duke/task/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"public enum Priority {"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"    HIGH, MEDIUM, LOW, UNDEFINED"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":5}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"    private static final String tick \u003d \"\\u2713\";"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"    private static final String cross \u003d \"\\u2718\";"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"    private String description;"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    private String taskMarker \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    private boolean isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    private Priority priority \u003d Priority.UNDEFINED;"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"    protected Task(String description, String taskMarker) {"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"        this.taskMarker \u003d taskMarker;"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    protected Task(String description, Priority p, String taskMarker) {"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"        this.description \u003d description;"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"        this.priority \u003d p;"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"        this.taskMarker \u003d taskMarker;"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"    public void addPriority(Priority p) {"},{"lineNumber":30,"author":{"gitId":"rayasamhr"},"content":"        this.priority \u003d p;"},{"lineNumber":31,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":33,"author":{"gitId":"rayasamhr"},"content":"    public void markDone() {"},{"lineNumber":34,"author":{"gitId":"rayasamhr"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":37,"author":{"gitId":"rayasamhr"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"rayasamhr"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"rayasamhr"},"content":"        String status \u003d isDone ? tick : cross;"},{"lineNumber":40,"author":{"gitId":"rayasamhr"},"content":"        return boxFormat(taskMarker) + boxFormat(status)"},{"lineNumber":41,"author":{"gitId":"rayasamhr"},"content":"                + boxFormat(priority.toString()) + \" \" + description;"},{"lineNumber":42,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":44,"author":{"gitId":"rayasamhr"},"content":"    public String getSaveFormat() {"},{"lineNumber":45,"author":{"gitId":"rayasamhr"},"content":"        int isDoneInt \u003d isDone ? 1 : 0;"},{"lineNumber":46,"author":{"gitId":"rayasamhr"},"content":"        return taskMarker + Storage.LINE + isDoneInt"},{"lineNumber":47,"author":{"gitId":"rayasamhr"},"content":"                + Storage.LINE + description"},{"lineNumber":48,"author":{"gitId":"rayasamhr"},"content":"                + Storage.LINE + priority.toString();"},{"lineNumber":49,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":51,"author":{"gitId":"rayasamhr"},"content":"    protected String boxFormat(String symbol) {"},{"lineNumber":52,"author":{"gitId":"rayasamhr"},"content":"        return String.format(\"[%s]\", symbol);"},{"lineNumber":53,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":55,"author":{"gitId":"rayasamhr"},"content":"    public String getDescription() {"},{"lineNumber":56,"author":{"gitId":"rayasamhr"},"content":"        return description;"},{"lineNumber":57,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":58}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"        super(description, \"T\");"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"    public Todo(String description, Priority p) {"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"        super(description, p, \"T\");"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":11}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" styleClass\u003d\"card\" stylesheets\u003d\"@css/WindowView.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"    \u003cpadding\u003e"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    \u003c/padding\u003e"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"image\" /\u003e"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"   \u003ceffect\u003e"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"      \u003cDropShadow radius\u003d\"4.75\" width\u003d\"0.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"   \u003c/effect\u003e"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"   \u003copaqueInsets\u003e"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"20.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"   \u003c/opaqueInsets\u003e"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"rayasamhr":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@css/WindowView.css\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"533.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"537.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"main-view\" stylesheets\u003d\"@css/WindowView.css\"\u003e"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"         \u003cpadding\u003e"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"            \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"         \u003c/padding\u003e\u003c/VBox\u003e"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"   \u003cHBox alignment\u003d\"BOTTOM_CENTER\" fillHeight\u003d\"false\" layoutY\u003d\"575.0\" styleClass\u003d\"text-enter\" AnchorPane.bottomAnchor\u003d\"16.0\" AnchorPane.leftAnchor\u003d\"8.0\" AnchorPane.rightAnchor\u003d\"8.0\"\u003e"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"      \u003cchildren\u003e"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"          \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type in a command!\" styleClass\u003d\"text-enter\"\u003e"},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"            \u003cfont\u003e"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"               \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"            \u003c/font\u003e"},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"         \u003c/TextField\u003e"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":"          \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"TOP\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"62.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"      \u003c/children\u003e"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"   \u003c/HBox\u003e"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"rayasamhr":29}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"import duke.Parser;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":"import duke.command.Command;"},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import duke.command.ExitCommand;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"public class ParserTest {"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    public void parse_byeCommand() throws DukeException {"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"        Command expected \u003d new ExitCommand();"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"        Command actual \u003d Parser.parse(\"bye\");"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"        assertEquals(expected, actual);"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"    public void parse_unsupportedWord_exceptionThrown() {"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":"        Throwable exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"dodobird\"));"},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"        assertEquals(\"Invalid, not an accepted task type.\", exception.toString());"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":24}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"import duke.Ui;"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":"import duke.task.Todo;"},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"import java.io.PrintStream;"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"public class UiTest {"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"    public void displayTaskAdd_todo() {"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":"        //Set output stream to capture displayed text"},{"lineNumber":14,"author":{"gitId":"rayasamhr"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"},{"lineNumber":15,"author":{"gitId":"rayasamhr"},"content":"        System.setOut(new PrintStream(outputStream));"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":17,"author":{"gitId":"rayasamhr"},"content":"        String testTodoText \u003d \"This is a test todo\";"},{"lineNumber":18,"author":{"gitId":"rayasamhr"},"content":"        Todo testTodo \u003d new Todo(testTodoText);"},{"lineNumber":19,"author":{"gitId":"rayasamhr"},"content":"        new Ui().displayTaskAdd(testTodo, 3);"},{"lineNumber":20,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":21,"author":{"gitId":"rayasamhr"},"content":"        String expected \u003d \"─────\" + \"\\n\""},{"lineNumber":22,"author":{"gitId":"rayasamhr"},"content":"                + \"Got it. I\u0027ve added this task: \\n\""},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"                + testTodo.toString()"},{"lineNumber":24,"author":{"gitId":"rayasamhr"},"content":"                + \"\\nNow you have 3 tasks in the list\\n\""},{"lineNumber":25,"author":{"gitId":"rayasamhr"},"content":"                + \"─────\" + \"\\r\\n\";"},{"lineNumber":26,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":27,"author":{"gitId":"rayasamhr"},"content":"        assertEquals(expected, outputStream.toString());"},{"lineNumber":28,"author":{"gitId":"rayasamhr"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"rayasamhr"},"content":"}"}],"authorContributionMap":{"rayasamhr":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"nothing"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":"list"},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"todo event"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"deadline event"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"deadline homework /by 7pm"},{"lineNumber":6,"author":{"gitId":"rayasamhr"},"content":"event meeting /at will confirm later"},{"lineNumber":7,"author":{"gitId":"rayasamhr"},"content":"list"},{"lineNumber":8,"author":{"gitId":"rayasamhr"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"rayasamhr"},"content":"done 3"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"list"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"bye"}],"authorContributionMap":{"rayasamhr":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"rayasamhr"},"content":"REM javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"rayasamhr"},"content":"dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"},{"lineNumber":12,"author":{"gitId":"rayasamhr"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"},{"lineNumber":13,"author":{"gitId":"rayasamhr"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":17,"author":{"gitId":"-"},"content":")"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"rayasamhr":5,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"rayasamhr"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"rayasamhr"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"rayasamhr":2,"-":36}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rayasamhr"},"content":"C:\\Users\\mione\\IdeaProjects\\ip\\src\\main\\java\\duke.task.Deadline.java"},{"lineNumber":2,"author":{"gitId":"rayasamhr"},"content":"C:\\Users\\mione\\IdeaProjects\\ip\\src\\main\\java\\duke.Duke.java"},{"lineNumber":3,"author":{"gitId":"rayasamhr"},"content":"C:\\Users\\mione\\IdeaProjects\\ip\\src\\main\\java\\duke.task.Event.java"},{"lineNumber":4,"author":{"gitId":"rayasamhr"},"content":"C:\\Users\\mione\\IdeaProjects\\ip\\src\\main\\java\\duke.task.Task.java"},{"lineNumber":5,"author":{"gitId":"rayasamhr"},"content":"C:\\Users\\mione\\IdeaProjects\\ip\\src\\main\\java\\duke.task.Todo.java"}],"authorContributionMap":{"rayasamhr":5}}]
