[
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.AnonymousException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.NoIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String HELP_COMMAND \u003d \"--help\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String TODO_COMMAND \u003d\"todo\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String SHOW_AFTER_COMMAND \u003d \"show after\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String SHOW_BEFORE_COMMAND \u003d \"show before\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DELETE_ALL_COMMAND \u003d \"delete all\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DONE_ALL_COMMAND \u003d \"done all\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public abstract void execute (TaskList tasks, Ui ui, Storage storage) throws IOException, AnonymousException, DescriptionException, DukeDateTimeParserException, NoIndexException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setExit(boolean exit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        isExit \u003d exit;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 42
    }
  },
  {
    "path": "src/main/java/Command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.DeadlineTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003dcommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DescriptionException, DukeDateTimeParserException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "          try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString, String\u003e taskDetails \u003d Parser.findDescriptionParser(this.command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DeadlineTask deadlineTask \u003d new DeadlineTask(taskDetails.get(\"taskDescription\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    LocalDateTime.parse(taskDetails.get(\"taskTime\"), formatter));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            ui.getTaskMessage(deadlineTask, tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DukeDateTimeParserException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 44
    }
  },
  {
    "path": "src/main/java/Command/DeleteAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DeleteAllCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeleteAllCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int length \u003d tasks.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for(int i \u003d 0 ; i \u003c length; i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks.remove(0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getMessageTemplate(ui.formatMessage(\"All of your task has been removed!\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 28
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.NoIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, NoIndexException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int index \u003d Parser.findIndexParser(this.command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task removedTask \u003d tasks.remove(index-1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getMessageTemplate(ui.formatMessage(\"Noted. I\u0027ve removed this task:\\n\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + ui.formatMessage(removedTask.toString() + \"\\n\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + ui.formatMessage(\"Now you have \" + tasks.size() + \" tasks in the list\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 33
    }
  },
  {
    "path": "src/main/java/Command/DoneAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DoneAllCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DoneAllCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for(Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if(!task.isDone()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                task.setStatus(true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for(int i \u003d 0 ; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (i !\u003d tasks.size()-1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                sb.append(ui.formatMessage((i + 1) + \". \" +tasks.getTask(i) + \"\\n\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                sb.append(ui.formatMessage((i + 1) + \". \" + tasks.getTask(i)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getMessageTemplate(ui.formatMessage(\"Here are the tasks in your list:\\n\" + sb.toString()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 37
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.NoIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, NoIndexException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int index \u003d Parser.findIndexParser(this.command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task task \u003d tasks.getTask(index-1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        task.setStatus(true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getMessageTemplate(ui.formatMessage(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                +ui.formatMessage(task.toString())));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 33
    }
  },
  {
    "path": "src/main/java/Command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.EventTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DescriptionException, DukeDateTimeParserException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString, String\u003e taskDetails \u003d Parser.findDescriptionParser(this.command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            EventTask eventTask \u003d new EventTask(taskDetails.get(\"taskDescription\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    LocalDateTime.parse(taskDetails.get(\"taskTime\"), formatter));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks.add(eventTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            ui.getTaskMessage(eventTask, tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DescriptionException e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DescriptionException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DukeDateTimeParserException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 46
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getMessageTemplate(ui.formatMessage(\"Bye! Hope to see you soon\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super.setExit(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 19
    }
  },
  {
    "path": "src/main/java/Command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getCommandList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 17
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for(int i \u003d 0 ; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (i !\u003d tasks.size()-1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                sb.append(ui.formatMessage((i + 1) + \". \" +tasks.getTask(i) + \"\\n\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                sb.append(ui.formatMessage((i + 1) + \". \" + tasks.getTask(i)));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getMessageTemplate(ui.formatMessage(\"Here are the tasks in your list:\\n\" + sb.toString()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 26
    }
  },
  {
    "path": "src/main/java/Command/ShowAfterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.DeadlineTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.EventTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ShowAfterCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public ShowAfterCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeDateTimeParserException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        LocalDate localDate \u003d Parser.findDateParser(this.command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for(Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (deadlineTask.getDateTime().toLocalDate().isAfter(localDate)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    sb.append(ui.formatMessage(i + \". \" + deadlineTask + \"\\n\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else if(task instanceof EventTask) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (eventTask.getDateTime().toLocalDate().isAfter(localDate)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    sb.append(ui.formatMessage(i + \". \" + eventTask + \"\\n\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getMessageTemplate(sb.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 50
    }
  },
  {
    "path": "src/main/java/Command/ShowBeforeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.DeadlineTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.EventTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ShowBeforeCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String  command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public ShowBeforeCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeDateTimeParserException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        LocalDate localDate \u003d Parser.findDateParser(this.command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for(Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (deadlineTask.getDateTime().toLocalDate().isBefore(localDate)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    sb.append(ui.formatMessage(i + \". \" + deadlineTask + \"\\n\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else if(task instanceof EventTask) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (eventTask.getDateTime().toLocalDate().isBefore(localDate)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    sb.append(ui.formatMessage(i + \". \" + eventTask + \"\\n\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getMessageTemplate(sb.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 48
    }
  },
  {
    "path": "src/main/java/Command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003dcommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DescriptionException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String taskDescription \u003d Parser.findTodoParser(this.command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        TodoTask todoTask \u003d new TodoTask(taskDescription);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        tasks.add(todoTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.getTaskMessage(todoTask,tasks.size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 32
    }
  },
  {
    "path": "src/main/java/Command/WrongCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.AnonymousException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class WrongCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public WrongCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws AnonymousException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        throw new AnonymousException(this.command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.AnonymousException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeCreateFileException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeFileException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeFileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.NoIndexException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            ui.getExceptionTemplate(new DukeFileNotFoundException());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            ui.getExceptionTemplate(new DukeCreateFileException());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            System.exit(-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void mainProgram() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                Command c \u003d Parser.parseCommand(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new DukeFileNotFoundException());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new DukeFileException());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (AnonymousException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new AnonymousException(command));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (DescriptionException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new DescriptionException());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (DukeDateTimeParserException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new DukeDateTimeParserException());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } catch (NoIndexException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                ui.getExceptionTemplate(new NoIndexException());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static void main (String[]args){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Duke duke \u003d new Duke(\"data/data.txt\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        duke.mainProgram();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 68,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Exception/AnonymousException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class AnonymousException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public AnonymousException(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" There are no commands that start with \" +  this.input + \"\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + \"      \"+\"Please type --help to see all the commands\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 14
    }
  },
  {
    "path": "src/main/java/Exception/DescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" Description cannot be empty\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 9
    }
  },
  {
    "path": "src/main/java/Exception/DukeCreateFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeCreateFileException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \"Failed to create a file\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 8
    }
  },
  {
    "path": "src/main/java/Exception/DukeDateTimeParserException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeDateTimeParserException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" You have to enter the date time format correctly\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 9
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return \"OOPS!!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 9
    }
  },
  {
    "path": "src/main/java/Exception/DukeFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeFileException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" Something went wrong when accessing your file\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 9
    }
  },
  {
    "path": "src/main/java/Exception/DukeFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DukeFileNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() +\" I cannot find your file. Sorry! :(\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 9
    }
  },
  {
    "path": "src/main/java/Exception/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class EventException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" The description of a event cannot be empty\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 9
    }
  },
  {
    "path": "src/main/java/Exception/NoIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class NoIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" You have to specify which number in your lists\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 9
    }
  },
  {
    "path": "src/main/java/Exception/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TodoException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return super.toString() + \" The description of a todo cannot be empty\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 11
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DeleteAllCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DoneAllCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.ShowAfterCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.ShowBeforeCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.TodoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.WrongCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DescriptionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.DukeDateTimeParserException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Exception.NoIndexException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.DeadlineTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.EventTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TodoTask;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Parser(){}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static String[] fileParser(String filepath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return filepath.split(\"/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static Task readFileParser(String line) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String[] strings \u003d line.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String taskType \u003d strings[0].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        case \"T\" :"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            TodoTask todoTask \u003d new TodoTask();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (strings[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                todoTask.setStatus(true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                todoTask.setStatus(false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            todoTask.setDescription(strings[2].trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return todoTask;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        case \"D\" :"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            DeadlineTask deadlineTask \u003d new DeadlineTask();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (strings[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                deadlineTask.setStatus(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                deadlineTask.setStatus(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] taskDetails \u003d strings[2].split(\"\\\\|\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            deadlineTask.setDescription(taskDetails[0].trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            deadlineTask.setDate(LocalDateTime.parse(taskDetails[1].trim(),formatter));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return deadlineTask;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        case \"E\" :"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            EventTask eventTask \u003d new EventTask();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if(strings[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                eventTask.setStatus(true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                eventTask.setStatus(false);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] taskDetails2 \u003d strings[2].split(\"\\\\|\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            eventTask.setDescription(taskDetails2[0].trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            eventTask.setDateTime(LocalDateTime.parse(taskDetails2[1].trim(),formatter));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return eventTask;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        default :"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new Task() ;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static Command parseCommand(String command) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (command.toLowerCase().equals(Command.EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().equals(Command.LIST_COMMAND)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if(command.toLowerCase().equals(Command.DONE_ALL_COMMAND)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DoneAllCommand();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }else if (command.toLowerCase().contains(Command.DONE_COMMAND)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.TODO_COMMAND)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new TodoCommand(command);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new EventCommand(command);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().equals(Command.HELP_COMMAND)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if(command.toLowerCase().contains(Command.DELETE_ALL_COMMAND)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DeleteAllCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.DELETE_COMMAND)){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.SHOW_AFTER_COMMAND)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new ShowAfterCommand(command);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } else if (command.toLowerCase().contains(Command.SHOW_BEFORE_COMMAND)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new ShowBeforeCommand(command);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return new WrongCommand(command);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static int findIndexParser(String input) throws NoIndexException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            int index \u003d Integer.parseInt(input.split(\"\\\\s\")[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new NoIndexException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static LocalDate findDateParser(String input) throws DukeDateTimeParserException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(input.split(\"\\\\s\")[2]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return localDate;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DukeDateTimeParserException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static Map\u003cString,String\u003e findDescriptionParser(String input) throws DescriptionException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] getDetails \u003d input.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] details \u003d getDetails[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            map.put(\"taskDescription\", details[0].trim());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String[] splitTimeDetails \u003d details[1].split(\"\\\\s\",2);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            map.put(\"taskTime\", splitTimeDetails[1]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return map;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DescriptionException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static String findTodoParser(String input) throws DescriptionException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            return input.split(\"\\\\s\", 2)[1];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            throw new DescriptionException();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 152
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TodoTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Storage(){}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Storage(String filepath) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String[] strings \u003d Parser.fileParser(filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String parentPath \u003d strings[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String childPath \u003d strings[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.file \u003d new File(parentPath, childPath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        if (!this.file.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            this.file.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public List\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Scanner s \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            tasks.add(Parser.readFileParser(s.nextLine()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void updateFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        StringBuilder txtToAdd \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        for(Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            if (task instanceof TodoTask) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                TodoTask todoTask \u003d (TodoTask) task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (todoTask.isDone()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"T\").append(\" | \").append(\"1\").append(\" | \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"T\").append(\" | \").append(\"0\").append(\" | \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                txtToAdd.append(todoTask.getDescription()).append(\"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                EventTask eventTask \u003d (EventTask) task;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (eventTask.isDone()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"E\").append(\" | \").append(\"1\").append(\" | \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"E\").append(\" | \").append(\"0\").append(\" | \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                txtToAdd.append(eventTask.getDescription()).append(\" | \")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                        .append(eventTask.getDateTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))).append(\"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                DeadlineTask deadlineTask \u003d (DeadlineTask) task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                if (deadlineTask.isDone()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"D\").append(\" | \").append(\"1\").append(\" | \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                    txtToAdd.append(\"D\").append(\" | \").append(\"0\").append(\" | \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                txtToAdd.append(deadlineTask.getDescription()).append(\" | \")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                        .append(deadlineTask.getDateTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))).append(\"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        fw.write(txtToAdd.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 89
    }
  },
  {
    "path": "src/main/java/Task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DEADLINE \u003d \"[D]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeadlineTask() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public DeadlineTask(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setDate(LocalDateTime date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return DEADLINE + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyy, h a\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 29
    }
  },
  {
    "path": "src/main/java/Task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static final String DEADLINE \u003d \"[E]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public EventTask() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public EventTask(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setDateTime(LocalDateTime date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.dateTime \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return DEADLINE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return DEADLINE + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyy, h a\")) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 34
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Task(){}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private String getStatus() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return isDone? \"[O]\": \"[X]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setStatus(boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return getStatus() + \" \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 39
    }
  },
  {
    "path": "src/main/java/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void setTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return this.tasks.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 44
    }
  },
  {
    "path": "src/main/java/Task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    private static final String TODO \u003d \"[T]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public TodoTask() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return TODO + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 18
    }
  },
  {
    "path": "src/main/java/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    static final String LINE \u003d \"     ___________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    static final String DOUBLE_TAB \u003d \"      \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        enterCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String command \u003d sc.nextLine();;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void getMessageTemplate(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.print(LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.println(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void getExceptionTemplate(Exception exception) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.print(LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.println(formatExceptionMessage(exception.toString()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String formatCommandList(String command, String format) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String indentation \u003d \"%-20s%s%n\" ;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return formatMessage(String.format(indentation,command,format));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void getCommandList(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        getMessageTemplate( formatCommandList(\"COMMAND\", \"FORMAT\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"deadline\", \"deadline \u003cDEADLINE_NAME\u003e /by \u003cyyyy-MM-dd\u003e \u003cHH:mm\u003e\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"delete\", \"delete \u003cTASK_NUMBER\u003e\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"delete all\", \"delete all\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"done\", \"done \u003cTASK_NUMBER\u003e\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"done all\", \"done all\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"event\",\"event \u003cEVENT_NAME\u003e /at \u003cyyyy-MM-dd\u003e \u003cHH:mm\u003e\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"show after\", \"show after \u003cyyyy-MM-dd\u003e\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"show before\", \"show before \u003cyyyy-MM-dd\u003e\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatCommandList(\"todo\",\"todo \u003cTASK_NAME\u003e\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public String formatMessage(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return DOUBLE_TAB + input;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public static String formatExceptionMessage(String message) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        return DOUBLE_TAB + message;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        getMessageTemplate(formatMessage(\"Hello! I\u0027m Rich.\\n\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatMessage( \"What can I do for you?\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void enterCommand() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        System.out.print(\"Enter command here: \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void getTaskMessage(Task task, int size) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        getMessageTemplate(formatMessage(\"Got it. I\u0027ve added this task :\\n\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatMessage(task +\"\\n\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "                + formatMessage(\"Now you have \" + size + \" tasks in the list\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 81
    }
  },
  {
    "path": "src/test/java/main/java/Task/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DeleteAllCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DoneAllCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.ShowAfterCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.ShowBeforeCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.TodoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Command.WrongCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import main.java.Parser.Parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertSame;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void readFileTest() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task test1  \u003d Parser.readFileParser(\"T | 0 | read book\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        TodoTask todoTask \u003d new TodoTask(\"read book\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(todoTask.toString(),test1.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(todoTask.getDescription(),test1.getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task test2 \u003d (Parser.readFileParser(\"D | 0 | return book | 2020-06-06 06:00\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeadlineTask deadlineTask \u003d new DeadlineTask(\"return book\",LocalDateTime.parse(\"2020-06-06 06:00\",formatter));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineTask.toString(), test2.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineTask.getDescription(),test2.getDescription());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineTask.getClass(),test2.getClass());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineTask.getDateTime(),((DeadlineTask) test2).getDateTime());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Task test3 \u003d Parser.readFileParser(\"E | 0 | return book | 2020-06-06 06:00\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        EventTask eventTask \u003d new EventTask(\"return book\",LocalDateTime.parse(\"2020-06-06 06:00\",formatter));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(eventTask.toString(),test3.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(eventTask.getDescription(),test3.getDescription());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(eventTask.getDateTime(),((EventTask)test3).getDateTime());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void parseCommandTest() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test1 \u003d Parser.parseCommand(\"bye\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ExitCommand exitCommand \u003d new ExitCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(exitCommand.getClass(), test1.getClass());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test2 \u003d Parser.parseCommand(\"list\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(listCommand.getClass(),test2.getClass());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test3 \u003d Parser.parseCommand(\"done all\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DoneAllCommand doneAllCommand \u003d new DoneAllCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(doneAllCommand.getClass(),test3.getClass());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test4 \u003d Parser.parseCommand(\"done 1\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DoneCommand doneCommand \u003d new DoneCommand(\"done 1\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(doneCommand.getClass(),test4.getClass());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test5 \u003d Parser.parseCommand(\"todo borrow book\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        TodoCommand todoCommand \u003d new TodoCommand(\"todo borrow book\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(todoCommand.getClass(),test5.getClass());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test6 \u003d Parser.parseCommand(\"deadline eat /by 2020-04-04 16:00\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"deadline eat /by 2020-04-04 16:00\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deadlineCommand.getClass(), test6.getClass());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test7 \u003d Parser.parseCommand(\"event eat /by 2020-04-04 16:00\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        EventCommand eventCommand \u003d new EventCommand(\"event eat /by 2020-04-04 16:00\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(eventCommand.getClass(),test7.getClass());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test8 \u003d Parser.parseCommand(\"--help\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        HelpCommand helpCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(helpCommand.getClass(), test8.getClass());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test9 \u003d Parser.parseCommand(\"delete all\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeleteAllCommand deleteAllCommand \u003d new DeleteAllCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deleteAllCommand.getClass(), test9.getClass());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test10 \u003d Parser.parseCommand(\"delete 1\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(\"delete 1\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(deleteCommand.getClass(), test10.getClass());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test11 \u003d Parser.parseCommand(\"show after 2020-04-04\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ShowAfterCommand showAfterCommand \u003d new ShowAfterCommand(\"show after 2020-04-04\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(showAfterCommand.getClass(),test11.getClass());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test12 \u003d Parser.parseCommand(\"show before 2020-04-04\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        ShowBeforeCommand showBeforeCommand \u003d new ShowBeforeCommand(\"show before 2020-04-04\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(showBeforeCommand.getClass(), test12.getClass());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Command test13 \u003d Parser.parseCommand(\"blah\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        WrongCommand wrongCommand \u003d new WrongCommand(\"blah\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(wrongCommand.getClass(),test13.getClass());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void findIndexParserTest() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Assertions.assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            int test1 \u003d Parser.findIndexParser(\"done 1\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(1,test1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            int test2 \u003d Parser.findIndexParser(\"delete 1\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(1,test2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void findDateParserTest() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Assertions.assertDoesNotThrow(()-\u003e {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDate test1 \u003d Parser.findDateParser(\"show before 2020-05-05\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(\"2020-05-05\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(localDate,test1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            LocalDate test2 \u003d Parser.findDateParser(\"show after 2020-05-05\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(localDate,test2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void findDescriptionParserTest() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Assertions.assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString,String\u003e test1 \u003d Parser.findDescriptionParser(\"event borrow book /by 2020-04-04 18:00\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"borrow book\", test1.get(\"taskDescription\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"2020-04-04 18:00\", test1.get(\"taskTime\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            Map\u003cString,String\u003e test2 \u003d Parser.findDescriptionParser(\"deadline eating a lot /by 2020-04-04 18:00\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"eating a lot\", test2.get(\"taskDescription\"));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"2020-04-04 18:00\", test2.get(\"taskTime\"));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void findTodoParserTest() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        Assertions.assertDoesNotThrow(() -\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            String test1 \u003d Parser.findTodoParser(\"todo borrow book\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "            assertEquals(\"borrow book\", test1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        });"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 154
    }
  },
  {
    "path": "src/test/java/main/java/Task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "package main.java.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void todoTaskTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String description \u003d \"Task Example\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        TodoTask todoTask \u003d new TodoTask(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(description,todoTask.getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[T][X] Task Example\",todoTask.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        todoTask.setStatus(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[T][O] Task Example\",todoTask.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void deadlineTaskTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String description \u003d \"Task Example\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"2020-03-04 18:00\",formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DeadlineTask deadlineTask \u003d new DeadlineTask(description, localDateTime );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(description,deadlineTask.getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(localDateTime, deadlineTask.getDateTime());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[D][X] Task Example (by: Mar 4 2020, 6 PM)\",deadlineTask.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        deadlineTask.setStatus(true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(true,deadlineTask.isDone());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[D][O] Task Example (by: Mar 4 2020, 6 PM)\", deadlineTask.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    public void eventTaskTest() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        String description \u003d \"Task Example\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"2020-03-04 18:00\",formatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        EventTask eventTask \u003d new EventTask(description, localDateTime);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(description,eventTask.getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(localDateTime, eventTask.getDateTime());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[E][X] Task Example (by: Mar 4 2020, 6 PM)\",eventTask.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        eventTask.setStatus(true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(true,eventTask.isDone());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "        assertEquals(\"[E][O] Task Example (by: Mar 4 2020, 6 PM)\", eventTask.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 57
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "--help"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "delete"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HynRidge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HynRidge"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "HynRidge": 7,
      "-": 19
    }
  }
]
