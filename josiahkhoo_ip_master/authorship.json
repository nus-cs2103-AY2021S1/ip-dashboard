[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "group \u0027org.example\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "version \u00271.0-SNAPSHOT\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027Main\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    mainClassName \u003d \u0027Main\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    archiveBaseName \u003d \u0027Duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    archiveVersion \u003d \u00270.1\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 32
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":end"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 104
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 1
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 8
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            this.taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DukeException | IOException exception) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            this.taskManager \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Run duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (duke.taskManager \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        ui.sendMessage(MessageManager.getGreetMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            command.execute(taskManager, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            isExit \u003d command.isExit;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 46,
      "-": 8
    }
  },
  {
    "path": "src/main/java/duke/MessageManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a MessageManager."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * A MessageManager handles the different messages that Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * sends in the UI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class MessageManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a list of tasks and remaining number of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * from specified taskManager in message form."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager to retrieve all tasks from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the message containing list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * and remaining number of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static String getListMessage(TaskManager taskManager) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String listStringFormat \u003d \"Here are the tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                \"%s\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                \"You have %s task(s) in your list.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                listStringFormat,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                taskManager.toString(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                taskManager.getTaskCount());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the deleted task and remaining number of tasks in message form."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param task        the deleted task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager to retrieve all tasks from"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the message containing the deleted task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * and remaining number of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static String getDeleteSuccessMessage(Task task, TaskManager taskManager) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String successfulTaskDeleteStringFormat \u003d \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                \"%s\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                \"Now you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                successfulTaskDeleteStringFormat,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                task,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                taskManager.getTaskCount());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the greeting message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the greeting message"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static String getGreetMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String greetMessage \u003d \"Hello. What can I do for you?\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return greetMessage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the exit message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the exit message"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static String getByeMessage() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String byeMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return byeMessage;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the completed task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param task the completed task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the message containing the completed task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static String getCompleteSuccessMessage(Task task) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String successfulTaskCompleteStringFormat \u003d \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                \"%s\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                successfulTaskCompleteStringFormat,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the added task and remaining number of tasks in message form."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param task        the added task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager to retrieve all tasks from"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the message containing the added task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * and remaining number of tasks"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static String getAddSuccessMessage(Task task, TaskManager taskManager) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String successfulTaskAddStringFormat \u003d \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                \"%s\\n\" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                \"Now you have %d task(s) in the list.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                successfulTaskAddStringFormat,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                task,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                taskManager.getTaskCount());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the list of tasks in the format of a find command response message."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskList the list of tasks to be included in the message"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the list of tasks in find command response format."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static String getFindAllContainingMessage(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String findAllContainingStringFormat \u003d \"Here are the matching tasks in your list:\\n%s\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String matchingTaskString \u003d IntStream.range(0, taskList.size())"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, taskList.get(i).toString()))"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(findAllContainingStringFormat, matchingTaskString);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 119
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.patterns.InputPattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a parser."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Used to parse user input into commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the corresponding command for a users text input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user text input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the command corresponding to the users input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (input.matches(InputPattern.BYE)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new ExitCommand(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (input.matches(InputPattern.COMPLETE_TASK)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new CompleteTaskCommand(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (input.matches(InputPattern.DELETE_TASK)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new DeleteTaskCommand(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (input.matches(InputPattern.ADD_EVENT)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new AddEventCommand(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (input.matches(InputPattern.ADD_DEADLINE)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new AddDeadlineCommand(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (input.matches(InputPattern.ADD_TODO)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new AddTodoCommand(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (input.matches(InputPattern.LIST)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (input.matches(InputPattern.FIND_ALL_CONTAINING)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new FindAllContainingCommand(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return new InvalidCommand(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 39
    }
  },
  {
    "path": "src/main/java/duke/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a TaskManager."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Stores and manipulates tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private final TaskStorage taskStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Constructor for TaskManager."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException   If an input or output exception occurred."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public TaskManager() throws IOException, DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.taskStorage \u003d TaskStorage.init();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Creates and adds a Todo to the taskStorage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content string description of todo"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return created todo"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException   If an input or output exception occurred."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Todo addTodo(String content) throws DukeException, IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Todo todo \u003d new Todo(content);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        taskStorage.addTask(todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Creates and adds a Deadline to the taskStorage."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content     string description of deadline"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param datetimeDue datetime of when the deadline is"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return created deadline"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException   If an input or output exception occurred."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Deadline addDeadline(String content, String datetimeDue) throws DukeException, IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Deadline deadline \u003d new Deadline(content, datetimeDue);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        taskStorage.addTask(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Creates and adds an Event to the taskStorage."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content  string description of event"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param datetime datetime of when the event is"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return created todo"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException   If an input or output exception occurred."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Event addEvent(String content, String datetime) throws DukeException, IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Event event \u003d new Event(content, datetime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        taskStorage.addTask(event);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Deletes a specified Task in the taskStorage."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskNumber Task number of task to be deleted."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return deleted task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException   If an input or output exception occurred."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Task deleteTask(int taskNumber) throws DukeException, IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        int index \u003d getIndex(taskNumber);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return taskStorage.removeTask(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Completes a specified Task in the taskStorage."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskNumber Task number of task to complete."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return completed task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException   If an input or output exception occurred."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Task completeTask(int taskNumber) throws DukeException, IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        int index \u003d getIndex(taskNumber);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Task task \u003d taskStorage.getTask(index);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        task.setComplete(true);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        taskStorage.save();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private int getIndex(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Invalid task number specified, task number must be greater than 0.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (taskNumber \u003e taskStorage.getTaskCount()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Task number specified is larger than current amount of tasks.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        int index \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a human readable string of all tasks in the taskStorage."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return string concatenation of all tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return IntStream.range(0, taskStorage.getTaskCount())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, taskStorage.taskList.get(i).toString()))"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return taskStorage.getTaskCount();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a list of tasks from the taskManager that contains the content"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content the search term used"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the list of tasks that contains the content specified"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public List\u003cTask\u003e findAllContaining(String content) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return taskStorage.findAllContaining(content);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 139
    }
  },
  {
    "path": "src/main/java/duke/TaskStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents the storage for tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Handles the saving, loading and creating of the tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class TaskStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    static String taskStoragePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        taskStoragePath \u003d \"./tmp/storage.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private TaskStorage(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Initializes the taskStorage from local storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * If no storage file is found in the path, creates a new storage file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return initialized taskStorage"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException   If an input or output exception occurred."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static TaskStorage init() throws IOException, DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        File tempStorage \u003d new File(taskStoragePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (tempStorage.exists() \u0026\u0026 tempStorage.isFile()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return TaskStorage.load(tempStorage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else if (tempStorage.isDirectory()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new IOException(\"Save file is a directory, cannot create\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return TaskStorage.create(tempStorage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private static TaskStorage create(File file) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return new TaskStorage(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private static TaskStorage load(File file) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        FileInputStream fileInputStream \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Scanner scanner \u003d new Scanner(fileInputStream);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            Task task \u003d parseLine(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return new TaskStorage(taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private static Task parseLine(String line) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String[] lineSplit \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            String taskType \u003d lineSplit[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            Boolean isTaskComplete \u003d convertToBoolean(lineSplit[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            String content \u003d lineSplit[2];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            String datetime \u003d lineSplit[3];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                    return new Deadline(content, datetime, isTaskComplete);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                    return new Event(content, datetime, isTaskComplete);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                    return new Todo(content, isTaskComplete);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                    throw new DukeException(\"Error in parsing line, invalid task type.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(exception.getMessage());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private static boolean convertToBoolean(String value) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        boolean returnValue \u003d false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (\"1\".equalsIgnoreCase(value) || \"yes\".equalsIgnoreCase(value) ||"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                \"true\".equalsIgnoreCase(value) || \"on\".equalsIgnoreCase(value))"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            returnValue \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns and saves the current taskStorage in memory locally."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return updated taskStorage"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public TaskStorage save() throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Object[] objectArray \u003d taskList.stream().map(Task::toSaveString).toArray();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String[] lineArray \u003d Arrays.copyOf(objectArray, objectArray.length, String[].class);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String fileString \u003d String.join(\"\\n\", lineArray);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(taskStoragePath);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        fileWriter.write(fileString);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the total number of tasks in memory."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return total number of tasks in memory"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns the specified task from memory."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param index the index of the task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return task specified by index"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Adds and saves task to storage."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param task Task to add into storage."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void addTask(Task task) throws IOException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.save();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Removes and returns the specified task from memory."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param index the index of the task to remove"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return task @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Task removeTask(int index) throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Task task \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.save();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a list of tasks that contains the content"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content the search term used"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return the list of tasks that contains the content specified"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public List\u003cTask\u003e findAllContaining(String content) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return taskList.stream()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                .filter(task -\u003e task.content.contains(content))"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 168
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents the Ui."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Handles input and output to the client."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Constructor for Ui."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Sends message to client."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param message message to be sent to client"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void sendMessage(String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        System.out.println(String.format(\"----------\\n%s\\n----------\\n\", message));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns input from client."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return input from client"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String input \u003d this.scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.MessageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.patterns.InputPattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a command to add a deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public AddDeadlineCommand(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Pattern r \u003d Pattern.compile(InputPattern.ADD_DEADLINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Matcher m \u003d r.matcher(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String content \u003d m.group(\"content\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String datetimeDue \u003d m.group(\"datetimeDue\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            Deadline deadline \u003d taskManager.addDeadline(content, datetimeDue);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(MessageManager.getAddSuccessMessage(deadline, taskManager));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DukeException | IOException exception) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(exception.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 49
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.MessageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.patterns.InputPattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a command to add an event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public AddEventCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Pattern r \u003d Pattern.compile(InputPattern.ADD_EVENT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Matcher m \u003d r.matcher(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String content \u003d m.group(\"content\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String datetime \u003d m.group(\"datetime\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            Event event \u003d taskManager.addEvent(content, datetime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(MessageManager.getAddSuccessMessage(event, taskManager));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DukeException | IOException exception) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(exception.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.MessageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.patterns.InputPattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a command to add a todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public AddTodoCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Pattern r \u003d Pattern.compile(InputPattern.ADD_TODO);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Matcher m \u003d r.matcher(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String content \u003d m.group(\"content\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            Todo todo \u003d taskManager.addTodo(content);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(MessageManager.getAddSuccessMessage(todo, taskManager));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DukeException | IOException exception) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(exception.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents an abstract command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Instructions to be executed for the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public abstract void execute(TaskManager taskManager, Ui ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.MessageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.patterns.InputPattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a command to complete a task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public CompleteTaskCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Pattern r \u003d Pattern.compile(InputPattern.COMPLETE_TASK);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Matcher m \u003d r.matcher(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(m.group(\"taskNumber\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            Task task \u003d taskManager.completeTask(taskNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(MessageManager.getCompleteSuccessMessage(task));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DukeException | IOException exception) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(exception.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.MessageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.patterns.InputPattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a command to delete a task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public DeleteTaskCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Pattern r \u003d Pattern.compile(InputPattern.DELETE_TASK);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Matcher m \u003d r.matcher(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(m.group(\"taskNumber\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            Task task \u003d taskManager.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(MessageManager.getDeleteSuccessMessage(task, taskManager));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DukeException | IOException exception) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            ui.sendMessage(exception.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.MessageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a command to exit Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public ExitCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        ui.sendMessage(MessageManager.getByeMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/FindAllContainingCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.MessageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.patterns.InputPattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a command to find all containing a keyword."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class FindAllContainingCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public FindAllContainingCommand(String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui the ui to return output to"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Pattern r \u003d Pattern.compile(InputPattern.FIND_ALL_CONTAINING);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Matcher m \u003d r.matcher(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        m.find();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String query \u003d m.group(\"content\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        List\u003cTask\u003e matchedTasks \u003d taskManager.findAllContaining(query);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String message \u003d MessageManager.getFindAllContainingMessage(matchedTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        ui.sendMessage(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents an invalid command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public InvalidCommand(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        ui.sendMessage(\"I don\u0027t know what you just sent...\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.MessageManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a command list all tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public ListCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Execution instructions for the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param taskManager the taskManager"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param ui          the ui to return output to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String message \u003d MessageManager.getListMessage(taskManager);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        ui.sendMessage(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 32
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents an exception in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param message error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(\"%s Please try again!\", super.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 20
    }
  },
  {
    "path": "src/main/java/duke/patterns/InputPattern.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.patterns;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents the different types of input patterns."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class InputPattern {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static final String DELETE_TASK \u003d \"^delete (?\u003ctaskNumber\u003e[0-9]+)$\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static final String COMPLETE_TASK \u003d \"^done (?\u003ctaskNumber\u003e[0-9]+)$\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static final String ADD_EVENT \u003d \"^event (?\u003ccontent\u003e.+) /at (?\u003cdatetime\u003e.+)$\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static final String ADD_DEADLINE \u003d \"^deadline (?\u003ccontent\u003e.+) /by (?\u003cdatetimeDue\u003e.+)$\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static final String ADD_TODO \u003d \"^todo (?\u003ccontent\u003e.+)$\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static final String LIST \u003d \"^list$\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static final String BYE \u003d \"^bye$\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public static final String FIND_ALL_CONTAINING \u003d \"^find (?\u003ccontent\u003e.+)$\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 17
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a Deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    LocalDateTime datetimeDue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor specifying whether the deadline is complete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content           the contents of the deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param datetimeDueString the due datetime of the deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param isComplete        the completion status of the deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Deadline(String content, String datetimeDueString, boolean isComplete) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        super(content, isComplete);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (datetimeDueString.replace(\" \", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Event datetime cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            this.datetimeDue \u003d LocalDateTime.parse(datetimeDueString, formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Invalid datetime specified (Needs to be yyyy-MM-dd HH:mm).\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content           the contents of the deadline"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param datetimeDueString the due datetime of the deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Deadline(String content, String datetimeDueString) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (datetimeDueString.replace(\" \", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Event datetime cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            this.datetimeDue \u003d LocalDateTime.parse(datetimeDueString, formatter);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Invalid datetime specified (Needs to be yyyy-MM-dd HH:mm).\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a user-readable deadline string."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return user-readable deadline string"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), datetimeDue.format(formatter));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a deadline string readable by storage."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return storage-safe deadline string"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(\"D/%s/%s\", super.toSaveString(), datetimeDue.format(formatter));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 75
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents an Event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    LocalDateTime datetime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor specifying whether the event is complete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content        the contents of the event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param datetimeString the datetime of the event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param isComplete     the completion status of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Event(String content, String datetimeString, Boolean isComplete) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        super(content, isComplete);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (datetimeString.replace(\" \", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Event datetime cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            this.datetime \u003d LocalDateTime.parse(datetimeString, formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Invalid datetime specified (Needs to be yyyy-MM-dd HH:mm).\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content        the contents of the event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param datetimeString the datetime of the event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Event(String content, String datetimeString) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (datetimeString.replace(\" \", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Event datetime cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            this.datetime \u003d LocalDateTime.parse(datetimeString, formatter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Invalid datetime specified (Needs to be yyyy-MM-dd HH:mm).\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a user-readable event string."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return user-readable event string"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), datetime.format(formatter));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns an event string readable by storage."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return storage-safe event string"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(\"E/%s/%s\", super.toSaveString(), datetime.format(formatter));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 75
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String content;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public boolean isComplete;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content the contents of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Task(String content) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (content.replace(\" \", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            throw new DukeException(\"Contents of a task cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isComplete \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor specifying whether the task is complete."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content the contents of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Task(String content, boolean isComplete) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Sets the completion status of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param isComplete the completion status of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void setComplete(boolean isComplete) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a user-readable task string."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return user-readable task string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        if (isComplete) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return String.format(\"[Y] %s\", content);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "            return String.format(\"[X] %s\", content);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    private static int booleanToInt(boolean bool) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return bool ? 1 : 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a task string readable by storage."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return storage-safe task string"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(\"%s/%s\", booleanToInt(isComplete), content);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 68
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " * Represents a Todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor specifying whether the todo is complete."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content    the contents of the todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param isComplete the completion status of the todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Todo(String content, Boolean isComplete) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        super(content, isComplete);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @param content the contents of the todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @throws DukeException If an exception related to Duke occurred."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public Todo(String content) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a user-readable todo string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return user-readable todo string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * Returns a todo string readable by storage."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     * @return storage-safe todo string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        return String.format(\"T/%s/ \", super.toSaveString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 50
    }
  },
  {
    "path": "src/test/java/duke/MessageManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "class MessageManagerTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    void testGetFindAllContainingMessage() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"test\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        String expectedOutput \u003d String.format(\"Here are the matching tasks in your list:\\n1. %s\", deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(expectedOutput, MessageManager.getFindAllContainingMessage(taskList));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 23
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCreateDeadline() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testDeadlineSetComplete() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        deadline.setComplete(true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertTrue(deadline.isComplete);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testIncompleteDeadlineToString() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"[D][X] Test content (by: 1990-10-10 10:10)\", deadline.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCompleteDeadlineToString() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        deadline.setComplete(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"[D][Y] Test content (by: 1990-10-10 10:10)\", deadline.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testIncompleteDeadlineToSaveString() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"D/0/Test content/1990-10-10 10:10\", deadline.toSaveString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCompleteDeadlineToSaveString() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        deadline.setComplete(true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"D/1/Test content/1990-10-10 10:10\", deadline.toSaveString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 51
    }
  },
  {
    "path": "src/test/java/duke/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCreateEvent() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Event event \u003d new Event(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testEventSetComplete() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Event event \u003d new Event(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        event.setComplete(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertTrue(event.isComplete);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testIncompleteEventToString() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Event event \u003d new Event(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"[E][X] Test content (at: 1990-10-10 10:10)\", event.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCompleteEventToString() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Event event \u003d new Event(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        event.setComplete(true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"[E][Y] Test content (at: 1990-10-10 10:10)\", event.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testIncompleteEventToSaveString() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Event event \u003d new Event(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"E/0/Test content/1990-10-10 10:10\", event.toSaveString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCompleteEventToSaveString() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Event event \u003d new Event(\"Test content\", \"1990-10-10 10:10\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        event.setComplete(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"E/1/Test content/1990-10-10 10:10\", event.toSaveString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 49
    }
  },
  {
    "path": "src/test/java/duke/tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCreateTodo() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Todo todo \u003d new Todo(\"Test content\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testTodoSetComplete() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Todo todo \u003d new Todo(\"Test content\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        todo.setComplete(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertTrue(todo.isComplete);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testIncompleteTodoToString() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Todo todo \u003d new Todo(\"Test content\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"[T][X] Test content\", todo.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCompleteTodoToString() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Todo todo \u003d new Todo(\"Test content\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        todo.setComplete(true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"[T][Y] Test content\", todo.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testIncompleteTodoToSaveString() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Todo todo \u003d new Todo(\"Test content\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"T/0/Test content/ \", todo.toSaveString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    public void testCompleteTodoToSaveString() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        Todo todo \u003d new Todo(\"Test content\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        todo.setComplete(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "        assertEquals(\"T/1/Test content/ \", todo.toSaveString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 49
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "todo Walk my pet"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "event CS2103T tutorial /at Thursday 5pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "deadline CS2103T homework /by Friday 1159"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josiahkhoo"
        },
        "content": "if ! javac -cp ../src -encoding ISO-8859-1 -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "josiahkhoo": 1,
      "-": 37
    }
  }
]
