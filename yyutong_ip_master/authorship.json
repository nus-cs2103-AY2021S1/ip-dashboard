[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "## Aim"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Duke is a task managing application that helps you keep track of your task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "## Feature List"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Show all of the tasks in the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Add a task of a specific type(Todo/Deadline/Event) into the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Delete a task from the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Search for related tasks by keyword"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- mark a task as done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Store the list in a local txt file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Load the list from the local txt file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "## Future Expansion Plan"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Tag function: give each task a tag"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Search by tag"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Priority function: give each a priority number"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- List the tasks by priority"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- List the tasks of a specific type(Deadline/Event/Todo)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 1. `hi` - Greet "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `hi`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "hi"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Hi!"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 2. `list` - List all of the tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `list`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyutong"
        },
        "content": "list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyutong"
        },
        "content": "1. [T][✓] homework"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyutong"
        },
        "content": "2. [T][✘] ip"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyutong"
        },
        "content": "3. [D][✘] quiz (by: 9月 18 2019)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 3. `todo` - Add a Todo task to the list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyutong"
        },
        "content": "todo CS2103S Quiz"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✘] CS2103 Quiz"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 4. `deadline` - Add a Deadline task to the list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `deadline DESCRIPTION /by YYYY-MM-DD`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[D][✘] CS2103S ip (by: 2020-09-18)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[E][✘] CS2101 OP meeting (at: Wednesday 9pm)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 5. `event` - Add an Event task to the list"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `event DESCRIPTION /at TIME`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyutong"
        },
        "content": "event CS2101 OP meeting /at Wednesday 9pm"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[E][✘] CS2101 OP meeting (at: Wednesday 9pm)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 5. `done` - Mark a task as done"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `done INDEX`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyutong"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✓] CS2103 Quiz"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 6. `find` - Search for related tasks by keyword"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `find KEYWORD`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yyutong"
        },
        "content": "find 2103"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Here are the tasks found: "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✘] 2103"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✓] CS2103 Quiz"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[D][✘] CS2103S ip (by: 2020-09-18)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 7. `delete` - Delete a task from the task list"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `delete INDEX`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yyutong"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✘] 2103"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 8. `bye` - Exit from the Duke application"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `bye`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yyutong"
        },
        "content": "bye"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yyutong"
        },
        "content": "The main window of the application closes."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yyutong"
        },
        "content": "The programme stops and you will exit from the application."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "yyutong": 155,
      "-": 26
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    archiveBaseName \u003d \"Aqua\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 16,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "T | 1 | hw"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": "T | 1 | CS2103 Quiz"
      }
    ],
    "authorContributionMap": {
      "yyutong": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "## Aim"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Aqua is a task managing application that helps you keep track of your task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "## Feature List"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": " - Show all of the tasks in the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": " - Add a task of a specific type(Todo/Deadline/Event) into the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": " - Delete a task from the list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": " - Search for related tasks by keyword"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": " - Mark a task as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": " - Store the list in a local txt file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": " - Load the list from the local txt file every time the application is opened"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "## Future Expansion Plan"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Tag function: give each task a tag"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Search by tag"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- Priority function: give each a priority number"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- List the tasks by priority"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "- List the tasks of a specific type(Deadline/Event/Todo)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 1. `hi` - Greet "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `hi`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "hi"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Hi!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 2. `list` - List all of the tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `list`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": "list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyutong"
        },
        "content": "1. [T][✓] homework"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyutong"
        },
        "content": "2. [T][✘] ip"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyutong"
        },
        "content": "3. [D][✘] quiz (by: 9月 18 2019)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 3. `todo` - Add a Todo task to the list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyutong"
        },
        "content": "todo CS2103S Quiz"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✘] CS2103 Quiz"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 4. `deadline` - Add a Deadline task to the list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `deadline DESCRIPTION /by YYYY-MM-DD`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[D][✘] CS2103S ip (by: 2020-09-18)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[E][✘] CS2101 OP meeting (at: Wednesday 9pm)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 5. `event` - Add an Event task to the list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `event DESCRIPTION /at TIME`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyutong"
        },
        "content": "event CS2101 OP meeting /at Wednesday 9pm"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[E][✘] CS2101 OP meeting (at: Wednesday 9pm)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 5. `done` - Mark a task as done"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `done INDEX`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyutong"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✓] CS2103 Quiz"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 6. `find` - Search for related tasks by keyword"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `find KEYWORD`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yyutong"
        },
        "content": "find 2103"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Here are the tasks found: "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✘] 2103"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✓] CS2103 Quiz"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[D][✘] CS2103S ip (by: 2020-09-18)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 7. `delete` - Delete a task from the task list"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `delete INDEX`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yyutong"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yyutong"
        },
        "content": "[T][✘] 2103"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yyutong"
        },
        "content": "### 8. `bye` - Exit from the Duke application"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yyutong"
        },
        "content": "User input format: `bye`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```$xslt"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yyutong"
        },
        "content": "bye"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yyutong"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yyutong"
        },
        "content": "The main window of the application closes."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yyutong"
        },
        "content": "The programme stops and you will exit from the application."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yyutong"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "yyutong": 164,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        setBackground();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        setCircledIcon();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private void setCircledIcon() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Circle img \u003d new Circle(50, 50, 60);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        displayPicture.setClip(img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private void setBackground() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Background dukeBackground \u003d new Background(new BackgroundFill("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                Color.POWDERBLUE, new CornerRadii(20), new Insets(5, 5, 5, 5)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        this.setBackground(dukeBackground);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 82
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * Duke can take in command and manage tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private boolean canClose \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Construct a duke object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        TaskList taskList \u003d Storage.read();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Parser.setTaskList(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * The main method in Duke class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Create an Ui object to print the lists of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        TaskList taskList \u003d Storage.read();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Parser.setTaskList(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Get the response."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The response we get from the parser"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            String response \u003d Parser.processCommand(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            Storage.saveDataToFile(Parser.taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            if (Parser.canClose()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                this.canClose \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public boolean canClose() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return canClose;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 62,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            stage.setTitle(\"Aqua\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            TaskList taskList \u003d Storage.read();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            Parser.setTaskList(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            // initializing plus greeting"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 38
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private static double TIME_DELAY \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.getGreeting(), dukeImage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (duke.canClose()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition((Duration.seconds(TIME_DELAY)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            delay.setOnFinished(event -\u003e System.exit(0));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 62
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * An exception which indicates that the deadline is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class InvalidDeadlineException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Creates a new InvalidDeadlineException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param message The message of this exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public InvalidDeadlineException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 15
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * An exception which indicates that the event is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class InvalidEventException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Creates a new InvalidEventException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param message The message of this exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public InvalidEventException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 15
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidKeyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * InvalidKeyException is an exception that indicates that the key word is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class InvalidKeyException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Creates a new InvalidKeyException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param message The message of this exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public InvalidKeyException(String message){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 15
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidRequestException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * An exception which indicates that the command is invalid."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class InvalidRequestException extends Exception{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Creates a new InvalidRequestException."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param message The message of this exception"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public InvalidRequestException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 14
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * An exception which indicates that the time is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class InvalidTimeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Creates a new InvalidTimeException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param message The message of this exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public InvalidTimeException(String message){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * An exception which indicates that the todo is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class InvalidTodoException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Creates a new InvalidTodoException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param message The message of this exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public InvalidTodoException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 15
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.exceptions.InvalidDeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.exceptions.InvalidEventException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.exceptions.InvalidKeyException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.exceptions.InvalidRequestException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * Interpret the command and do the instruction."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private static boolean canClose \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Sets taskList for Parser."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param list TaskList that manages tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static void setTaskList(TaskList list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        taskList \u003d list;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Processes a command sentence."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param command Take in the command to be processed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @throws Exception Throws an exception if the command can not be interpreted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static String processCommand(String command) throws Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (command.contains(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return taskList.printTaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else if (command.contains(\"hi\") || command.contains(\"hello\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return \"Hi!\" + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    + \"What do you want to know about your tasks?\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else if (command.contains(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            canClose \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return \"Bye!\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            String[] words \u003d command.split(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            int numberOfWords \u003d words.length;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            assert numberOfWords \u003e\u003d 1 : \"Command is incomplete!\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            if (numberOfWords \u003d\u003d 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                throw new InvalidRequestException(\"Command is empty. Please tell me a valid command.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            if (words[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (numberOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"Which task would you like to mark as done?\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (numberOfWords \u003e 2) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"Sorry. I can only handle one task at a time!!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                Integer index \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (taskList.findListSize() \u003c index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"I could not find this task, please tell me a valid task index.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"Task index is invalid, please tell me a valid one.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                return taskList.markAsDone(index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            } else if (words[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (numberOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"What task would you like to delete from the list?\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (numberOfWords \u003e 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"Sorry, I can only handle one task at a time.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                Integer index \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (taskList.findListSize() \u003c index) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"I could not find this task, please enter a valid task index.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"Task index is invalid, please tell me a valid one.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                return taskList.deleteTask(index);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            } else if (words[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (words.length \u003e 2) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidKeyException(\"Sorry, I can only handle one keyword.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                return taskList.findTask(words[1]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (words[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    if (numberOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        throw new InvalidRequestException(\"What is the Todo that you would like to be added to list?\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    String name \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    newTask \u003d new Todo(name);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                } else if (words[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    if (numberOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        throw new InvalidEventException(\"What is the event that you would like to be added to list?\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    String content \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    if (content.split(\" /at \").length \u003c 2) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        throw new InvalidEventException(\"Please tell me both the name as well as the period of time of the event!\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    String name \u003d content.split(\" /at \")[0];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    String timePeriod \u003d content.split(\" /at \")[1];"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    newTask \u003d new Event(name, timePeriod);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                } else if (words[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    if (numberOfWords \u003d\u003d 1) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        throw new InvalidDeadlineException(\"What is the Deadline that you would like to be added to list?\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    String content \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    if (content.split(\" /by \").length \u003c 2) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        throw new InvalidDeadlineException(\"Please tell me both the name as well as the due date of the event!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    String name \u003d content.split(\" /by \")[0];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    String dueDate \u003d content.split(\" /by \")[1];"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    TimeConverter timeConverter \u003d new TimeConverter();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//                    String formattedDueDate \u003d timeConverter.convertTime(dueDate);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//                    newTask \u003d new Deadline(name, formattedDueDate);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    newTask \u003d new Deadline(name, dueDate);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    throw new InvalidRequestException(\"Sorry, I could not understand what you said. Please say another one!\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                return taskList.addTask(newTask);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static boolean canClose() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return canClose;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 193
    }
  },
  {
    "path": "src/main/java/duke/parser/TimeConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * TimeConverter can convert the time in input into the MMM dd yyyy LocalTime format."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class TimeConverter {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Constructs a time converter."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param time Time command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return Time in the given format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @throws Exception Throws time excepiton is the command does not meet requirements."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String convertTime(String time) throws Exception {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (isValidTime(time)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            String formattedTime \u003d localDate.format(dateTimeFormatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return formattedTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            throw new InvalidTimeException(\"I don\u0027t understand the due date mentioned in the message. \" + \"/n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    \"Please tell me the time strictly in YYYY-MM-DD format\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Checks whether the time is in the valid format or not."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param time"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public boolean isValidTime(String time) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String[] timeArray \u003d time.split(\"-\", 3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (timeArray.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            int year \u003d Integer.parseInt(timeArray[0]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            int month \u003d Integer.parseInt(timeArray[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            int date \u003d Integer.parseInt(timeArray[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return month \u003c\u003d 12 \u0026\u0026 date \u003c\u003d 31;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yyutong": 58
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public Storage(TaskList taskList){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private static final String FILE_PATH \u003d \"./duke.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static void saveDataToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            FileWriter writer \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            for (Task task : taskList.getListOfTasks()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                writer.write(task.showContent());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static TaskList read() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            File storageFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            Scanner scanner \u003d new Scanner(storageFile);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                String currentLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                String[] wordsParsed \u003d currentLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                boolean isTaskDone \u003d wordsParsed[1].equals(\"1\")"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        ? true"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        : false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                switch (wordsParsed[0]) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        Task todo \u003d new Todo(wordsParsed[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        todo.setStatus(isTaskDone);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        listOfTasks.add(todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        Task deadline \u003d new Deadline(wordsParsed[2], wordsParsed[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        deadline.setStatus(isTaskDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        listOfTasks.add(deadline);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        Task event \u003d new Event(wordsParsed[2], wordsParsed[3]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        event.setStatus(isTaskDone);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        listOfTasks.add(event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return new TaskList(listOfTasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            //System.out.println(e.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 81
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * Deadline is a type of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Construct a new Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param name    Name or description of the deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param dueDate The due date of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public Deadline(String name, String dueDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Gets the type of Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return \"D\" which represents deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Gets the due date of the deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The due date of the deadline"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Override the toString method."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return the description and due date of the deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 48
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * Event is a type of Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private String timePeriod;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Constructs an event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param name       Description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param timePeriod The period of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public Event(String name, String timePeriod) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        this.timePeriod \u003d timePeriod;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Gets the type of Event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return \"E\" which represents event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Gets the period of time of the event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The period of time of the event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return timePeriod;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * The toString method of Event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The required String format of an event"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timePeriod + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 49
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * A task has a name/description and a status of whether it is done or not."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Constructs a new Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param name Take in the name of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        assert this.isDone: \"OOPS! Failed to mark this task as done.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String result \u003d \"Nice! I\u0027ve marked this task as done:\"+\"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//        System.out.println(this.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        result \u003d result + this.toString() + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Sets the status of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param status Whether the task is done or not. \"true\" means is done and \"false\" means not done yet"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        isDone \u003d status.equals(\"true\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public void setStatus(boolean status) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        isDone \u003d status;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Prints out the name of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public void showName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        System.out.println(this.name);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Prints out the description of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param index The position index of the task in a list of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String showTask(int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        result \u003d result + index + \". \" + this.toString() + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//        System.out.println(index + \". \" +this.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Gets the tyoe of the task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * It will be overridden by child classes."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The general type which is \"Task\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Gets the time of the task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * It will be overridden by child classes."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return \"\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Shows the content of the task, which will be stored and displayed in duke.txt."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The content of the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String showContent() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        int status;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            status \u003d 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            status \u003d 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String commonContent \u003d this.getType() + \" | \" + status + \" | \" + this.name;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String content;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (this instanceof Deadline || this instanceof Event) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            content \u003d commonContent + \" | \" + this.getTime();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            content \u003d commonContent;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return content + \"\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * The toString method of Task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Print the correct format of a task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String isDoneSymbol;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            isDoneSymbol \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            isDoneSymbol \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"[\" + isDoneSymbol + \"] \" + name;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 121
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * List of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Constructs a new TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Finds the size of the list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return the size."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public int findListSize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return listOfTasks.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Prints out the tasks in the list one by one."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String printTaskList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String result \u003d \"Here are the tasks in your list: \" + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        int number \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        for (int i \u003d 0; i \u003c number; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            result \u003d result + listOfTasks.get(i).showTask(i + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Removes the task from the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param index The position index of the task in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String deleteTask(int index) throws Exception {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Task toBeDeletedTask \u003d listOfTasks.get(index - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        int sizeOfList \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        listOfTasks.remove(index - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        assert listOfTasks.size() \u003c sizeOfList : \"OOPS! Deleting task failed.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        int size \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String result \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        result \u003d result + toBeDeletedTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            result \u003d result + \"Now your task list is empty.\" + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            result \u003d result + \"Now you have 1 task in the list.\" + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            result \u003d result + \"Now you have \" + size + \" tasks in the list\" + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Finds the task that fit the keyword."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param keyWord The keyword to be used for searching"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return An ArrayList of tasks that meet the searching requirements"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String findTask(String keyWord) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        for (Task task : listOfTasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            String[] words \u003d task.name.split(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            for (String word : words) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (word.contains(keyWord)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    tasksFound.add(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if (tasksFound.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            result \u003d result + \"Sorry, no task related to \" + keyWord + \" is found.\" + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            result \u003d result + \"Here are the tasks found: \" + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            for (Task task : tasksFound) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                result \u003d result + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Adds the task to the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        listOfTasks.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        int initialSize \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        int taskSize \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        assert taskSize \u003e initialSize : \"OOPS! Adding task failed.\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String result \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                + \"Now you have \" + taskSize + \" tasks in the list.\" + \"\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                + \"Good luck with the quest!\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param index The position index of the task."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String markAsDone(int index) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return listOfTasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The list of tasks"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public ArrayList\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return this.listOfTasks;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Describes the list of the tasks."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The description of each task in the list"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        for (Task task : listOfTasks) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            result \u003d result + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 164
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * Todo is a type of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Constructs a Todo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param name Description of the todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The type of a Todo which is \"T\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String[] toArray(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String status;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        if(this.isDone){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            status \u003d \"1\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            status \u003d \"0\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String[] result \u003d new String[]{\"T\", status, this.name};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * The toString method of Todo."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @return The required String format of a todo"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 46
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import com.sun.security.jgss.GSSUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": " * User Interface"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static String logo \u003d \"   _____  \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    private final Scanner input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Constructs an User interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Prints out the greetings."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        System.out.println(\"Hello!\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \"I\u0027m Aqua, the (useless baka) Goddess of water!\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \"Welcome to this parallel world where you (have to do debugging 7/24)\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \"can go on an adventure and battle monsters!\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \"I\u0027ll help you track your missions until you defeat Devil King(CS2103T)!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static String getGreeting() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String greeting \u003d \"Hello!\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \"I\u0027m Aqua, the (useless baka) Goddess of water!\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \"Welcome to this parallel world where you (have to do debugging 7/24)\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \"can go on an adventure and battle monsters!\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \"I\u0027ll help you track your missions until you defeat Devil King(CS2103T)!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyutong"
        },
        "content": "         return greeting;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Prints out the goodbye words."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Prints out the command received."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * @param command Take in a command."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public static void echo(String command) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        System.out.println(command);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     * Runs the programme."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyutong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        while (input.hasNext()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                command \u003d input.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                if (command.contains(\"bye\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    input.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    System.out.println(Parser.processCommand(command));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyutong"
        },
        "content": "//                    Storage storage \u003d new Storage(Parser.taskList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                    Storage.saveDataToFile(Parser.taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 115
    }
  },
  {
    "path": "src/main/java/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yyutong": 16
    }
  },
  {
    "path": "src/main/java/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yyutong": 19
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yyutong": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yyutong": 19
    }
  },
  {
    "path": "src/test/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    void todo_taskToArray_test(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        Todo todo \u003d new Todo(\"shopping\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        String[] expected \u003d new String[]{\"T\", \"0\", \"shopping\"};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "        assertArrayEquals(expected, todo.toArray());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyutong": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": "todo project"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "event team meeting /at Tuesday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yyutong": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "dir /s /B ..\\src\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\Duke.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yyutong": 6,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    find ../src -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyutong"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyutong"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yyutong": 6,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/test/DukeTest.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/ui/Ui.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/tasks/TaskList.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/tasks/Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/tasks/Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/tasks/Deadline.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/tasks/Todo.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/parser/TimeConverter.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/parser/Parser.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/exceptions/InvalidDeadlineException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/exceptions/InvalidEventException.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/exceptions/InvalidRequestException.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/exceptions/InvalidKeyException.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/exceptions/InvalidTodoException.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/exceptions/InvalidTimeException.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/storage/Storage.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyutong"
        },
        "content": "../src/main/java/duke/Duke.java"
      }
    ],
    "authorContributionMap": {
      "yyutong": 17
    }
  },
  {
    "path": "wrapper/dists/gradle-6.2-bin/6zaomcc3lf3gnwxgkllci1muk/gradle-6.2/init.d/readme.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyutong"
        },
        "content": "You can add .gradle init scripts to this directory. Each one is executed at the start of the build."
      }
    ],
    "authorContributionMap": {
      "yyutong": 1
    }
  }
]
