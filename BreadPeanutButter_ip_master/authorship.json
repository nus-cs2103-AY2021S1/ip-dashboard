[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private final String task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private static final String errorMessage \u003d \"OOPS!!! The description of a deadline cannot be empty.\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected Deadline(String command) throws DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            int index \u003d command.indexOf(\"/by\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            this.task \u003d command.substring(9, index - 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            this.deadline \u003d command.substring(index + 4);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected String getTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                super.isDone() ? \"\\u2713\" : \"\\u2717\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                getTask(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private static void processInput(String input, TaskList list) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                System.out.println(\"Here are your tasks:\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                System.out.println(list);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                list.markTaskDone(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                ToDo toDoTask \u003d new ToDo(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                list.addTask(toDoTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                Deadline deadlineTask \u003d new Deadline(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                list.addTask(deadlineTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                Event eventTask \u003d new Event(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                list.addTask(eventTask);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                list.deleteTask(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                //unrecognised command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        System.out.println(\"Hi there! I\u0027m Peanut.\\nHow can I be of assistance?\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                System.out.println(\"Here are your tasks:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                System.out.println(list);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            } else if (input.length() \u003e 3 \u0026\u0026 input.substring(0,4).equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                int listIndex \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                list.markTaskDone(listIndex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                Task task \u003d Task.makeTask(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                list.addTask(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        System.out.println(\"\\nBye! Sad to see you go :(\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 57,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private final String task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private static final String errorMessage \u003d \"OOPS!!! The description of a event cannot be empty.\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected Event(String command) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            int index \u003d command.indexOf(\"/at\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            this.task \u003d command.substring(6, index - 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            this.time \u003d command.substring(index + 4);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected String getTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                super.isDone() ? \"\\u2713\" : \"\\u2717\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                getTask(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 30
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private boolean done \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    abstract protected String getTask();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected void markDone() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected boolean isDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 15
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private static final String doneErrorMessage \u003d \"OOPS!!! Please choose a valid task index to mark as done.\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private static final String deleteErrorMessage \u003d \"OOPS!!! Please choose a valid task index to delete.\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected void addTask(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        System.out.println(\"added: \" + task + \"\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected void markTaskDone(String command) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            int listIndex \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            Task task \u003d list.get(listIndex - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            System.out.printf(\"Hurray! %s is now done.\\n\", task.getTask());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            System.out.println(task + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        } catch (Exception error) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            throw new DukeException(doneErrorMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected void deleteTask(String command) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            int listIndex \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            Task task \u003d list.get(listIndex - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            list.remove(listIndex - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            System.out.printf(\"Okay %s has been deleted.\\n\", task.getTask());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            System.out.println(\"You now have \" + list.size() + \" tasks.\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        } catch (Exception error) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            throw new DukeException(deleteErrorMessage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            message +\u003d String.format(\"%d.%s\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                    , count++, task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 50
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private final String task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    private static final String errorMessage \u003d \"OOPS!!! The description of a todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected ToDo(String command) throws DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "            this.task \u003d command.substring(5);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    protected String getTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "        return String.format(\"[T][%s] %s\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                super.isDone() ? \"\\u2713\" : \"\\u2717\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "                getTask());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "todo My Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "event Big Event /at Tuesday 3pm-9pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "deadline Homework /by Wednesday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "todo More Tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "delete"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "rubbish"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "deadline Essay /by Friday"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "event Small Event /at Thursday 12pm-12am"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BreadPeanutButter"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "BreadPeanutButter": 3,
      "-": 37
    }
  }
]
