[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 22,
      "-": 45
    }
  },
  {
    "path": "config/travis/check-eof-newline.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "# Checks that all text files end with a newline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "ret\u003d0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "# Preserve filename with spaces by only splitting on newlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "IFS\u003d\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        echo \"ERROR:$filename:$line: no newline at EOF.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 18
    }
  },
  {
    "path": "config/travis/check-line-endings.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "# Checks for prohibited line endings."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "# Prohibited line endings: \\r\\n"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ret \u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 19
    }
  },
  {
    "path": "config/travis/check-trailing-whitespace.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "# Checks for trailing whitespace"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "awk \u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    BEGIN {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FS \u003d \":\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        OFS \u003d \":\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ret \u003d 0"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        # Only warn for markdown files (*.md) to accomodate text editors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        # which do not properly handle trailing whitespace."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        # (e.g. GitHub web editor)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if ($1 ~ /\\.md$/) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            severity \u003d \"WARN\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            severity \u003d \"ERROR\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            ret \u003d 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print severity, $1, $2, \" trailing whitespace.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    END {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        exit ret"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u0027"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 26
    }
  },
  {
    "path": "config/travis/run-checks.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "#!/bin/sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "ret\u003d0 \u0026\u0026"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "for checkscript in \"$dir\"/check-*; do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    if ! \"$checkscript\"; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ret\u003d1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "exit $ret"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 11
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskManager.addTask(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.replyAdd(task, taskManager);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 18
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 11
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public abstract void execute(TaskManager taskManager, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public abstract boolean isBye();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe DateAndTime class defines the behavior of an object that represents specific time.\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates an object to represent date and time as a whole."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param date The date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param time The time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DateAndTime(LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DateAndTime(LocalDate localDate) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.date \u003d localDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (time !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return time.toString() + \", \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 43
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe DeadlineTask class defines the behavior of deadline task that has a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * specific date to be done by for the task.\u003c/p\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private DateAndTime deadlineTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates a Task object that has a description and status of whether the task is done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskDescription A String that represents the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param isDone A boolean that shows the status of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param timeToBeDoneBy A DateAndTime object to represent the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DeadlineTask(String taskDescription, boolean isDone, DateAndTime timeToBeDoneBy, TagList tagList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(taskDescription, isDone, tagList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.deadlineTime \u003d timeToBeDoneBy;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DateAndTime getDeadlineTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return deadlineTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String serialiseTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        int isDone \u003d getTaskStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"deadline %% \" + getTaskDescription() + \" %% \" + isDone + \" %% \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                + getDeadlineTime().getDate().toString() + \" %% \" + getTagList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"[D] [\" + getStatusIcon() + \"] \" + taskDescription + \" (by: \" + deadlineTime + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 37
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskIndex \u003d taskNum;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assert (taskIndex \u003e\u003d 1) : \"Task index must be more than 0\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.replyDelete(taskManager.getTask(taskIndex - 1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskManager.removeTask(taskIndex - 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 19
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        dialog.setStyle(\"-fx-background-color: #f18c8e; \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                + \"-fx-border-color: #f18c8e; -fx-border-radius: 10; \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                + \"-fx-border-width: 10; -fx-background-radius: 10\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        dialog.setFont(Font.font(\"Consolas\", 13));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        //set background color for duke box"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        dialog.setStyle(\"-fx-background-color: #f1d1b5; \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                + \"-fx-border-color: #f1d1b5; -fx-border-radius: 10; \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                + \"-fx-border-width: 10; -fx-background-radius: 10\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        db.dialog.setTextFill(Color.valueOf(\"305f72\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 71
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assert (taskIndex \u003e\u003d 1) :  \"Task index must be more than 0\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.replyDone(taskManager.getTask(taskIndex - 1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskManager.markTaskAsDone(taskIndex - 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke  {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private TaskSaveAndLoadManager taskSaveAndLoadManager \u003d new TaskSaveAndLoadManager();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public Duke() throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (taskSaveAndLoadManager.loadTaskManager() !\u003d null) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            this.taskManager \u003d taskSaveAndLoadManager.loadTaskManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            this.taskManager \u003d new TaskManager(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void setUi(VBox dialogContainer) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.ui \u003d new Ui(dialogContainer);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            c.execute(taskManager, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            taskSaveAndLoadManager.saveTaskManager(this.taskManager);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return c.isBye();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            ui.print(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assert (ui !\u003d null) : \"UI must be specified\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 36,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe DukeException class defines the behavior of an exception that is produced by Duke.\u003c/p\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 13
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class EmptyTaskException extends MissingElementException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public EmptyTaskException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"A task cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe EventTask class defines the behavior of an event task that has a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * specific date and time when the event happens.\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private DateAndTime eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public EventTask(String taskName, boolean isDone, DateAndTime eventTime, TagList tagList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(taskName, isDone, tagList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String serialiseTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        int isDone \u003d getTaskStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"event %% \" + getTaskDescription() + \" %% \" + isDone + \" %% \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                + getEventTime().getDate() + \" %% \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                + getEventTime().getTime() + \" %% \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                + getTagList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DateAndTime getEventTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"[E] [\" + getStatusIcon() + \"] \" + taskDescription + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 30
    }
  },
  {
    "path": "src/main/java/FileReadWrite.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe FileReadWrite class handles the writing to and reading"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * from saved file with static methods.\u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class FileReadWrite {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"iP\", \"SavedData\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static String fullFilePath \u003d path + \"/SavedData.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // if file not existed, create new then add"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (!directoryExists) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            Files.createDirectories(path);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fullFilePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.write(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.flush();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fullFilePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.write(textToAppend + System.lineSeparator());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static List\u003cString\u003e loadFromSavedFile() throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        File file \u003d new File(fullFilePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return Files.readAllLines(Paths.get(fullFilePath));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 45
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.replyFind(taskManager, taskManager.findTaskThatHasKeyword(keyword));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 17
    }
  },
  {
    "path": "src/main/java/HashtagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class HashtagCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final Tag tag;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public HashtagCommand(Tag tag) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.replyFindTag(taskManager, taskManager.findTaskWithTag(tag));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 17
    }
  },
  {
    "path": "src/main/java/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.replyHelp();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 11
    }
  },
  {
    "path": "src/main/java/InvalidNumberInput.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class InvalidNumberInput extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public InvalidNumberInput() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"Sorry this is not a number.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 7
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.replyList(taskManager);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        duke.setUi(dialogContainer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        duke.greet();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (duke.getResponse(input)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 52
    }
  },
  {
    "path": "src/main/java/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class MissingDescriptionException extends MissingElementException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public MissingDescriptionException(TaskType type) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"The description of \" + type.toString().toLowerCase() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/MissingElementException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class MissingElementException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public MissingElementException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/MissingTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class MissingTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public MissingTaskIndexException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"Sorry what\u0027s you task index again?\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/NoTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class NoTimeException extends MissingElementException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public NoTimeException(String message, TaskType type) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(message + \"The time of a \" + type.toString().toLowerCase() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/OutOfBoundTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class OutOfBoundTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public OutOfBoundTaskException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"Sorry there\u0027s no task with such index. Please enter a number in range.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        int i \u003d userInput.trim().indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String command \u003d userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String detail \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (i \u003e 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            command \u003d userInput.substring(0, i);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            detail \u003d userInput.substring(i).trim();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (command.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (userInput.startsWith(\"#\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new HashtagCommand(parseTagToFind(userInput.substring(1)));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"bye\") :"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"list\") :"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"todo\") :"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new AddCommand(parseTodo(detail));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"deadline\") :"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new AddCommand(parseDeadline(detail));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"event\") :"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new AddCommand(parseEvent(detail));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"delete\") :"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new DeleteCommand(parseNumber(detail));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"done\") :"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new DoneCommand(parseNumber(detail));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"find\") :"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new FindCommand(detail);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        case (\"help\") :"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new UnexpectedInputException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static DateAndTime parseTime(String timeFormat) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (!timeFormat.contains(\" \")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(timeFormat.trim());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new DateAndTime(localDate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String[] split \u003d timeFormat.trim().split(\" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(split[0].trim());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(split[1].trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new DateAndTime(localDate, localTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static ToDoTask parseTodo(String detail) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (detail.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new MissingDescriptionException(TaskType.TODO);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (detail.contains(\"#\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                TagList taglist \u003d parseTag(detail);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                // excludes the tags in description"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                int i \u003d detail.indexOf(\"#\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String newDetail \u003d detail.substring(0, i);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new ToDoTask(newDetail, false, taglist);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new ToDoTask(detail, false, null);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static DeadlineTask parseDeadline(String detail) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (detail.equals(\"\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new MissingDescriptionException(TaskType.DEADLINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (!detail.contains(\"#\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String descriptionAndTime \u003d detail.replace(\"/by\", \"%\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String description \u003d descriptionAndTime.split(\"%\")[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String time \u003d descriptionAndTime.split(\"%\")[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                DateAndTime dateAndTime \u003d parseTime(time.trim());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new DeadlineTask(description, false, dateAndTime, null);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                int i \u003d detail.indexOf(\"#\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String newDetail \u003d detail.substring(0, i);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String descriptionAndTime \u003d newDetail.replace(\"/by\", \"%\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String description \u003d descriptionAndTime.split(\"%\")[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String time \u003d descriptionAndTime.split(\"%\")[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                DateAndTime dateAndTime \u003d parseTime(time.trim());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                TagList taglist \u003d parseTag(detail);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                System.out.println(taglist.getTagList().size());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new DeadlineTask(description, false, dateAndTime, taglist);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static EventTask parseEvent(String detail) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (detail.equals(\"\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new MissingDescriptionException(TaskType.EVENT);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String descriptionAndTime \u003d detail.replace(\"/at\", \"%\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String description \u003d descriptionAndTime.split(\"%\")[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String time \u003d descriptionAndTime.split(\"%\")[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            DateAndTime dateAndTime \u003d parseTime(time.trim());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (!detail.contains(\"#\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new EventTask(description, false, dateAndTime, null);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                TagList taglist \u003d parseTag(detail);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new EventTask(description, false, dateAndTime, taglist);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static int parseNumber(String detail) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (detail.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new MissingTaskIndexException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return Integer.parseInt(detail.trim());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new InvalidNumberInput();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static TagList parseTag(String detail) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        int i \u003d detail.trim().indexOf(\"#\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String tagList \u003d detail.substring(i).trim();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String spaceRemovedString \u003d tagList.replace(\" \", \"\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String[] tagArr \u003d spaceRemovedString.trim().split(\"#\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        TagList res \u003d new TagList();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (String s : tagArr) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (!s.equals(\"\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                Tag currTag \u003d new Tag(s);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                res.addTag(currTag);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        System.out.println(res.getTagList().size());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static Tag parseTagToFind(String tag) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return new Tag(tag);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 146
    }
  },
  {
    "path": "src/main/java/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String TAG_PREFIX \u003d \"#\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final String fullTag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public Tag(String keyword) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.fullTag \u003d TAG_PREFIX + keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getFullTag() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return fullTag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getTagKeyword() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return fullTag.substring(1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (this \u003d\u003d o) return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        Tag tag \u003d (Tag) o;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return Objects.equals(fullTag, tag.fullTag);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return Objects.hash(fullTag);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return this.fullTag;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 36
    }
  },
  {
    "path": "src/main/java/TagList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class TagList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private ArrayList\u003cTag\u003e tagList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TagList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.tagList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void addTag(Tag tagToAdd) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.tagList.add(tagToAdd);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void removeTag(Tag tagToRemove) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.tagList.removeIf(tag -\u003e tag \u003d\u003d tagToRemove);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ArrayList\u003cTag\u003e getTagList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return tagList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (Tag tag : tagList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            res \u003d res + tag.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 31
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe Task class defines the behaviour of a task.\u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    protected final String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private TagList tagList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates a Task object that has a description and status of whether the task is done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskDescription A String that represents the description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param isDone A boolean that shows the status of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public Task(String taskDescription, boolean isDone, TagList tagList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.tagList \u003d tagList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String serialiseTask() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void setTaskAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TagList getTagList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return tagList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Returns a tick or cross symbol to indicate the task\u0027s status:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * \u003cli\u003eIf the task is done, returns a tick.\u003c/li\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * \u003cli\u003eIf the task is not done, returns a cross.\u003c/li\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return A String that represents the symbol."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean getTaskStatus() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + taskDescription;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 59
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe TaskManager class stores a task list and manages commands relevant"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * to the task list: add, remove, mark as done, get,....\u003c/p\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates a TaskManager object that stores a taskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskList The task list stored."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TaskManager(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Adds a task into the current task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param newTask The Task to add."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Removes a task of specified index."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskIndex The int that represents index of the task in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void removeTask(int taskIndex) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new OutOfBoundTaskException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Marks a task of specified index as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param index The int that represents index of the task in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void markTaskAsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            taskList.get(index).setTaskAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new OutOfBoundTaskException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Gets a task of specified index."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param index The int that represents index of the task in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return The Task that has the specified index."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return taskList.get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            throw new OutOfBoundTaskException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Gets the total number of tasks in the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return The int that represents total number of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public int getTotalNoOfTasks() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Returns all the tasks in the task list that has a specified keyword."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param keyWord A String that represents the keyword."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return A list of tasks that have the specified keyword."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ArrayList\u003cTask\u003e findTaskThatHasKeyword(String keyWord) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (task.getTaskDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                res.add(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ArrayList\u003cTask\u003e findTaskWithTag(Tag tag) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (task.getTagList() !\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                if (task.getTagList().getTagList().contains(tag)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                    res.add(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                    System.out.println(tag);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Converts a given task list into a formatted string representation."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param givenTaskList A list of task to be converted."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return The string representation of the task list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String convertTaskListToString(ArrayList\u003cTask\u003e givenTaskList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (int i \u003d 0; i \u003c givenTaskList.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String index \u003d (i + 1) + \". \";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            // remove the empty line created in the last task"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (i \u003d\u003d givenTaskList.size() - 1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                result \u003d result + index + givenTaskList.get(i).toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            result \u003d result + index + givenTaskList.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 130
    }
  },
  {
    "path": "src/main/java/TaskSaveAndLoadManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe TaskSaveAndLoadManager class manages the logic to convert Java objects into data objects"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * and vice versa.\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class TaskSaveAndLoadManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Saves the task list with tasks, along with their descriptions as well as"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * their respective statuses and types."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskManager The TaskManager that stores the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @throws IOException An exception thrown when IO operation fails"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void saveTaskManager(TaskManager taskManager) throws IOException, DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (int i \u003d 0; i \u003c taskManager.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                FileReadWrite.writeToFile(taskManager.getTaskList().get(0).serialiseTask());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                FileReadWrite.appendToFile(taskManager.getTaskList().get(i).serialiseTask());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Loads the task list with tasks, along with their descriptions as well as"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * their respective statuses and types since last save."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return The TaskManager that stores the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @throws IOException An exception thrown when IO operation fails."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TaskManager loadTaskManager() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        List\u003cString\u003e loadedData \u003d FileReadWrite.loadFromSavedFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // System.out.println(loadedData.get(0));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (loadedData !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            for (String string : loadedData) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                Task taskToAdd \u003d loadTask2(string);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new TaskManager(taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private TagList loadTagList(String fullData) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        TagList tagList \u003d new TagList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        int i \u003d fullData.indexOf(\"#\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String tagListString \u003d fullData.substring(i + 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String[] tagArr \u003d tagListString.trim().split(\"#\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (String tag : tagArr) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            Tag currTag \u003d new Tag(tag);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            tagList.addTag(currTag);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return tagList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Task loadTask2(String string) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String[] splitDataString \u003d string.trim().split(\" %% \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String taskType \u003d splitDataString[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String taskDescription \u003d splitDataString[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String isDoneString \u003d splitDataString[2];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        isDone \u003d Integer.parseInt(isDoneString) \u003d\u003d 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (string.contains(\"#\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                TagList tagList \u003d loadTagList(string);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new ToDoTask(taskDescription, isDone, tagList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new ToDoTask(taskDescription, isDone, null);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            DateAndTime dt \u003d new DateAndTime(LocalDate.parse(splitDataString[3]));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (string.contains(\"#\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                TagList tagList \u003d loadTagList(string);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new DeadlineTask(taskDescription, isDone, dt, tagList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new DeadlineTask(taskDescription, isDone, dt,null);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            DateAndTime dt \u003d new DateAndTime(LocalDate.parse(splitDataString[3]),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                LocalTime.parse(splitDataString[4]));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (string.contains(\"#\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                TagList tagList \u003d loadTagList(string);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new DeadlineTask(taskDescription, isDone, dt, tagList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                return new DeadlineTask(taskDescription, isDone, dt,null);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 98
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe ToDoTask class defines the behavior of a todo task that only"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * has description and status.\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ToDoTask(String taskName, boolean isDone, TagList tagList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(taskName, isDone, tagList);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String serialiseTask() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        int isDone \u003d getTaskStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"todo %% \" + getTaskDescription() + \" %% \" + isDone + \" %% \" + getTagList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"[T] [\" + getStatusIcon() + \"] \" + taskDescription;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String GREETING \u003d \"Ah another dude trying to be productive. \" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            \"Sure. What do you want, sweetie? Type help to view all commands. \\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String BYE \u003d \"That\u0027s all? Sure. See you again (hopefully LOL).\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String LIST_REPLY \u003d \"Checking the whole list doesn\u0027t make you finish anything faster... \\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String FIND_REPLY \u003d \"Found \u0027em. But at what cost... \\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String CANNOT_FIND_REPLY \u003d \"Sorry can\u0027t find any tasks with such keyword.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String FIND_TAG_REPLY \u003d \"These are the tasks with the tag: \\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String CANNOT_FIND_TAG_REPLY \u003d \"Sorry can\u0027t find any tasks with such tag.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String DELETE_REPLY \u003d \"Good good... Okay removed! Looks more apt for a lazy ass like you. \\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String ADD_REPLY_TOP \u003d \"Wow, another task. Added. You sure you can finish them all? \\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String ADD_REPLY_BOT \u003d \"Now you have a grand total of %d\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String DONE_REPLY \u003d \"Wah finally. Wondering how long more I need to wait... \\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static final String HELP_REPLY \u003d  \"\\u0AE6 todo [description] - add a todo task \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            + \"\\u0AE6 deadline [description] /by [YYYY-MM-DD] - add a deadline task \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            + \"\\u0AE6 event [description] /at [YYYY-MM-DD HH:mm] - add an event task \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            + \"\\u0AE6 list - view all current tasks \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            + \"\\u0AE6 find [keyword] - find all tasks with specified keyword \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            + \"\\u0AE6 done [task number] - mark chosen task as done \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            + \"\\u0AE6 delete [task number] - delete chosen task \\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /** Creates and initiate an Ui object. */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public Ui(VBox dialogContainer) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.dialogContainer \u003d dialogContainer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /** Greets the user. */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print(GREETING);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /** Says goodbye to user. */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print(BYE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /** Replies when user input \"list\" */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void replyList(TaskManager taskManager) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String taskList \u003d taskManager.convertTaskListToString(taskManager.getTaskList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print(LIST_REPLY + taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void replyHelp() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print(HELP_REPLY);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void replyAdd(Task taskAdded, TaskManager taskManager) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String task \u003d taskAdded.toString() + \"\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String dukeReplyBot \u003d String.format(ADD_REPLY_BOT, taskManager.getTotalNoOfTasks());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print(ADD_REPLY_TOP + task + dukeReplyBot);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void replyDelete(Task taskDeleted) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String task \u003d taskDeleted.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print(DELETE_REPLY + task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void replyDone(Task taskDone) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String task \u003d taskDone.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        print(DONE_REPLY + task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void replyFind(TaskManager taskManager, ArrayList\u003cTask\u003e foundTasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (foundTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            print(FIND_REPLY + taskManager.convertTaskListToString(foundTasks));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            print(CANNOT_FIND_REPLY);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void replyFindTag(TaskManager taskManager, ArrayList\u003cTask\u003e foundTasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (foundTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            print(FIND_TAG_REPLY + taskManager.convertTaskListToString(foundTasks));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            print(CANNOT_FIND_TAG_REPLY);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void print(String text) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(text, dukeImage));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 91
    }
  },
  {
    "path": "src/main/java/UnexpectedInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class UnexpectedInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public UnexpectedInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"Sorry I don\u0027t specialise in gibberish.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 6
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003cLabel minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" fx:id\u003d\"dialog\" style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        -fx-border-style: solid inside; -fx-border-radius: 10; -fx-border-width: 10; -fx-border-color: #AEFCFB;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        -fx-background-color: #AEFCFB; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" \u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003cCircle style\u003d\"-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                fx:id\u003d\"displayPicture\" fill\u003d\"WHITE\" radius\u003d\"50.0\" strokeType\u003d\"INSIDE\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003c/Circle\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                style\u003d\"-fx-font-size: 15; -fx-background-color: #f0b7a4; -fx-text-fill: #305f72;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                        -fx-font: 15px Tahoma; -fx-font-weight: bold\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" style\u003d\"-fx-background: #305f72;\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 22
    }
  },
  {
    "path": "src/test/DateAndTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DateAndTimeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void dateAndTime_correctlyFormattedToString_MMMdYYYY() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assertEquals(\"Oct 20 2020\", new DateAndTime(LocalDate.parse(\"2020-10-20\")).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 12
    }
  },
  {
    "path": "src/test/UITest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class UITest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void userInputList_botReplyHeadingIsCorrect() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assertEquals(\"Checking the whole list doesn\u0027t make you finish anything faster... \\n\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                new UI().botReplyHeading(\"list\").get(0));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "kdsf"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "todo collect homework"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "todo collect homework #school #homework"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "event project meeting /at 19:00 2020-12-25"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "deadline CS2030 homework /by 2020-12-22"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 1,
      "-": 20
    }
  }
]
