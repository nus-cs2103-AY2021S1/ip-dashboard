[
  {
    "path": "src/main/java/duke/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " * Represents a deadline task with a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    LocalDate deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    String deadlineString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Initialise description to be desc and deadline to be deadlineParse. Will attempt to parse deadlineParse."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * If it is in the format yyyy-mm-dd, it will be stored as local date, for nicer string representation later."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param desc Description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param deadlineParse The deadline of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public DeadlineTask(String desc, String deadlineParse) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            deadline \u003d LocalDate.parse(deadlineParse);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            deadlineString \u003d String.format(\"%s %d %d\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    deadline.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    deadline.getDayOfMonth(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    deadline.getYear());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            // Not parsable"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            deadlineString \u003d deadlineParse;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadlineString + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return String.format(\"D @@ %d @@ %s @@ %s\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                isDone ? 1 : 0, desc, deadline \u003d\u003d null ? deadlineString : deadline.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return desc.contains(s) || deadlineString.contains(s);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 51
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    String dest;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Constructor with specified directory of database."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param dest directory of database"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public Duke(String dest) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        this.dest \u003d dest;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        TaskList taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            storage \u003d new Storage(dest);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            taskList \u003d storage.loadFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            ui.printNicely(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        ui.listOut(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                String input \u003d ui.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                switch (parser.parseInput(input)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case ADD:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    taskList.add(parser.parseInputTask(input));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    ui.printNicely(\"Noted, I have added the following task:\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                            parser.parseInputTask(input).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    taskList.markDone(parser.parseDone(input));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    ui.printNicely(\"Noted, I have marked the following task as done:\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                            taskList.get(parser.parseDone(input)).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    ui.printNicely(\"Noted, I have deleted the following task:\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                            taskList.get(parser.parseDelete(input)).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    taskList.delete(parser.parseDelete(input));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    ui.listOut(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    TaskList newList \u003d taskList.find(parser.parseFind(input));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    ui.listOut(String.format(\"I have found the following %d task(s)\", newList.size()),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                            newList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    ui.listOut(taskList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    ui.bye();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    throw new IOException(\"Cannot be understood.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                storage.writeFile(taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                ui.printNicely(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 75,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    String periodString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    LocalDate period;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Initialise description to be desc and period to be periodParse. Will attempt to parse deadlineParse."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * If it is in the format yyyy-mm-dd, it will be stored as local date, for nicer string representation later."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param desc Description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param periodParse The deadline of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public EventTask(String desc, String periodParse) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            period \u003d LocalDate.parse(periodParse);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            periodString \u003d String.format(\"%s %d %d\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    period.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    period.getDayOfMonth(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    period.getYear());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            // Not parsable"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            periodString \u003d periodParse;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return \"[E]\" + super.toString()  + \" (at: \" + periodString + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return String.format(\"E @@ %d @@ %s @@ %s\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                isDone ? 1 : 0, desc, period \u003d\u003d null ? periodString : period.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return desc.contains(s) || periodString.contains(s);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 48
    }
  },
  {
    "path": "src/main/java/duke/PARSER_RESULT.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " * Results of Parser parsing an input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public enum PARSER_RESULT {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    ADD"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 13
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " * Parses user inputs or saved strings."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isBye(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.toLowerCase().equals(\"bye\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isList(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.toLowerCase().equals(\"list\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isDone(String s) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.length() \u003e\u003d 4 \u0026\u0026 s.substring(0, 4).toLowerCase().equals(\"done\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isDelete(String s) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.length() \u003e\u003d 6 \u0026\u0026 s.substring(0, 6).toLowerCase().equals(\"delete\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private static boolean isFind(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.length() \u003e\u003d 4 \u0026\u0026 s.substring(0, 4).toLowerCase().equals(\"find\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Returns the index of the task to be marked done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param s The input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @return An integer index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public int parseDone(String s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return Integer.parseInt(s.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Returns the index of the task to be deleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param s The input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @return An integer index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public int parseDelete(String s) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return Integer.parseInt(s.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Returns the keyword to be searched."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param s The input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @return A string keyword."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String parseFind(String s) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return s.split(\" \")[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Returns a task represented by the input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param s The input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @return A task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @throws IllegalArgumentException Unrecognizable task command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @throws IndexOutOfBoundsException Task formatted wrongly."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public Task parseInputTask(String s) throws IllegalArgumentException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        String[] processed;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            switch (s.split(\" \")[0]) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                task \u003d new ToDoTask(s.substring(5));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                processed \u003d s.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                task \u003d new EventTask(processed[0], processed[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                processed \u003d s.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                task \u003d new DeadlineTask(processed[0], processed[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new IllegalArgumentException(\"Unrecognizable task command.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new IndexOutOfBoundsException(\"Task formatted wrongly.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private boolean isTask(String s) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            parseInputTask(s);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Determines the type of command."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param input The input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @return A PARSER_RESULT value."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @throws IllegalArgumentException Unrecognizable command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public PARSER_RESULT parseInput(String input) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        if (isBye(input)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return PARSER_RESULT.BYE;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } else if (isDelete(input)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return PARSER_RESULT.DELETE;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } else if (isDone(input)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return PARSER_RESULT.DONE;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } else if (isList(input)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return PARSER_RESULT.LIST;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } else if (isFind(input)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return PARSER_RESULT.FIND;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } else if (isTask(input)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return PARSER_RESULT.ADD;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new IllegalArgumentException(\"Unrecognizable command.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Parse a saved string to a task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param s The saved string."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @return The saved task."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public static Task parseSavedTask(String s) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        String[] arg \u003d s.split(\" @@ \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        switch (arg[0]) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            task \u003d new ToDoTask(arg[2]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            task \u003d new DeadlineTask(arg[2], arg[3]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            task \u003d new EventTask(arg[2], arg[3]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new IllegalArgumentException(\"Save file corrupted\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        if (arg[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 154
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " * Handles reading and writing from database."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    String dest;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Initialise the destination of database."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param dest"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public Storage(String dest) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        this.dest \u003d dest;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Returns the taskList saved at destination. If file does not exist attempts to create one."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @return a taskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @throws IOException error creating the file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public TaskList loadFile() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            File file \u003d new File(dest);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            new File(dest.split(\"/\")[0]).mkdir();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                tasks.add(Parser.parseSavedTask(scanner.nextLine()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new FileNotFoundException(\"Could not find file after creating.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new IOException(\"Error creating file.\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Saves a taskList to file at destination."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param taskList the taskList to be saved"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @throws FileNotFoundException couldn\u0027t find the file at destination."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void writeFile(TaskList taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(dest));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            for (Task task: taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                bufferedWriter.write(task.toSaveString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new FileNotFoundException(\"Couldn\u0027t find file\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 65
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " * Represents a task. A task has a description and a state representing if it is done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return String.format(\"[%c] %s\", isDone ? \u0027\\u2713\u0027 : \u0027\\u2717\u0027, desc);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public abstract String toSaveString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public abstract boolean contains(String s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 26
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Marks the task at index as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param index the index of the task to be marked done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @throws IndexOutOfBoundsException if index is incorrect"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void markDone(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            get(index).markDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new IndexOutOfBoundsException(\"No task with this number\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Deletes the task at index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param index the index of the task to be deleted"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @throws IndexOutOfBoundsException if index is incorrect"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void delete(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            throw new IndexOutOfBoundsException(\"No task with this number\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Returns a sublist with all the tasks that contains the keyword. Containment of keyword is determined by the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param s the keyword"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @return a taskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public TaskList find(String s) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        TaskList newList \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            if (get(i).contains(s)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                newList.add(get(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 53
    }
  },
  {
    "path": "src/main/java/duke/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " * Represents a to-do task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public ToDoTask(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return String.format(\"T @@ %d @@ %s\", isDone ? 1 : 0, desc);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return desc.contains(s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 27
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " * Interacts with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNicely(\"Hello! This is duckmoon99\u0027s Duke.\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                  \"What can I do to help you today?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNicely(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * List out the taskList the user has."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param taskList The user\u0027s taskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void listOut(TaskList taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        ArrayList\u003cString\u003e toPrint \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        toPrint.add(String.format(\"You currently have %d task(s)\", taskList.size()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            toPrint.add(String.format(\"%d.%s\", i+1, taskList.get(i)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNicelyCollection(toPrint);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * List out a taskList with a different message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param message The message explaining the context of the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param taskList The taskList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void listOut(String message, TaskList taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        ArrayList\u003cString\u003e toPrint \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        toPrint.add(message);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            toPrint.add(String.format(\"%d.%s\", i+1, taskList.get(i)));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNicelyCollection(toPrint);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Prints nicely a collection of strings."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param strings The collection of strings to be printed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void printNicelyCollection(Collection\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        for (String s: strings) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "            System.out.println(\"    \" + s);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * Prints nicely all the strings as one."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     * @param strings Vararg of strings to be printed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void printNicely(String ...strings) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        printNicelyCollection(Arrays.asList(strings));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 81
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import duke.PARSER_RESULT;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void parseInput_recognizableList_LIST() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        String[] tests \u003d {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \"list\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \" list\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \"  list   \","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \"List \"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        assertTrue(Arrays.stream(tests)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                .map(s -\u003e parser.parseInput(s) \u003d\u003d PARSER_RESULT.LIST)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                .reduce((x, y) -\u003e x \u0026\u0026 y)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                .get());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    public void parseInput_recognizableBye_BYE() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        String[] tests \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \"bye\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \" Bye  \","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                \"BYE \"};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "        assertTrue(Arrays.stream(tests)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                    .map(s -\u003e parser.parseInput(s) \u003d\u003d PARSER_RESULT.BYE)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                .reduce((x, y) -\u003e x \u0026\u0026 y)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "                .get());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo omanpqcdopxpmoj"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "event lawwhpyctjxwqfz /at tfmxowwugx"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "event ybjbyomjlvfrrul /at akujwntuqw"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo lwbssjwdswrlmxq"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo mvtxnwvxhhxxunz"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline bplugnrsvfozqid /by oleonxhvvg"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo ibgxbftdfnowuwf"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo gawyhtvjlpoqgrq"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo ybzwwfgbnwoerbp"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline zndsdzdqcprvtge /by qfdhveiuhv"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline ascqiujaavkljun /by ugjawcyiwg"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "done 11"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline plwzjygipzfuozr /by ystqvcnxdl"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "deadline uxpmimaywzsugwf /by trtlftiqis"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo nsgjwvtxsspyopy"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "delete 13"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "todo zjnghbhzkwvlixr"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 31
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": "    pause"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duckmoon99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "duckmoon99": 6,
      "-": 20
    }
  }
]
