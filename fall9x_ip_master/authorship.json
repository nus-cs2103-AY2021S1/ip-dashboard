[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"    mainClassName \u003d \"dude.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"    archiveBaseName \u003d \"dude\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":43,"fall9x":19}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"E | 0 | Go for communications class | 2020-09-20"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":"T | 1 | jUst trY thIs"},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"E | 0 | john trying to do this | 2020-12-12"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"T | 0 | Check for overflow"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"D | 0 | Submit final version  | 2020-09-16"}],"authorContributionMap":{"fall9x":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":"* Features"},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"    * [Adding a ToDo task: `todo`](#todo)"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"    * [Adding a Deadline task: `deadline`](#deadline)"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"    * [Adding an Event task: `event`](#event)"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"    * [Listing all task: `list`](#list)"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"    * [Locating a task by name: `find`](#find)"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"    * [Deleting a task: `delete`](#delete)"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"    * [Complete a task: `done`](#done)"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"    * [Exiting the program: `bye`](#bye)"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"---"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"\u003e Notes about the command format:"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"\u003e * Words in `UPPER_CASE` are the parameters to be supplied by the user.  "},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"\u003e e.g in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo Submit work`."},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"\u003e Items in square brackets are optional.  "},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"\u003e e.g. `KEYWORD [MORE_KEYWORD]` can be used as `try` or as `try this`"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"\u003e Items with `...` can be used multiple times including zero times.  "},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"\u003e e.g. `KEYWORD [MORE_KEYWORD]` can be used as `just` or as `just try`, `just try this` etc."},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"\u003e Parameters must be in the specified order."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"### Adding a ToDo task: `todo` \u003ca name\u003d\"todo\"\u003e\u003c/a\u003e"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"Adds a ToDo task to Dude Bot."},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"Example of usage: "},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"* `todo Do my laundry`"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"Expected outcome:  "},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"![todo outcome](rss/todo.PNG \"todo\")"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"### Adding a Deadline task: `deadline` \u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"Adds a Deadline task to Dude Bot."},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"Format: `deadline DESCRIPTION /by DATE`"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"* `DATE` **must be** in the form `YYYY-MM-DD`."},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"Example of usage: "},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"* `deadline Submit math homework /by 2020-10-04`"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"Expected outcome:  "},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"![deadline outcome](rss/deadline.PNG \"deadline\")"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"### Adding an Event task: `event`: todo \u003ca name\u003d\"event\"\u003e\u003c/a\u003e"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"Adds an Event task to Dude Bot."},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"Format: `event DESCRIPTION /at DATE`"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"* `DATE` **must be** in the form `YYYY-MM-DD`."},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"Example of usage: "},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"* `event Go for communications class /at 2020-09-20`"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"Expected outcome:  "},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"![event outcome](rss/event.PNG \"event\")"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"### Listing all task: `list` todo \u003ca name\u003d\"list\"\u003e\u003c/a\u003e"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"Shows a list of all tasks in Dude Bot."},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"Format: `list`"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"### Locating a task by name: `find` todo \u003ca name\u003d\"find\"\u003e\u003c/a\u003e"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"Finds tasks whose descriptions contains the given keyword."},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"Format: `find KEYWORD [MORE_KEYWORD]...`"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"* The search is case-insensitive. e.g `teSt` will match `Test`"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"* The order of the keywords does not matter. e.g `try this` will match `this try`"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"* Only the description is searched."},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"* Partial matching of words is allowed. e.g. `te` will match `ted` and `test`"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":67,"author":{"gitId":"fall9x"},"content":"* `find this try`"},{"lineNumber":68,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":69,"author":{"gitId":"fall9x"},"content":"Expected outcome:  "},{"lineNumber":70,"author":{"gitId":"fall9x"},"content":"![find outcome](rss/find.PNG \"find\")"},{"lineNumber":71,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":72,"author":{"gitId":"fall9x"},"content":"### Deleting a task: `delete` todo \u003ca name\u003d\"delete\"\u003e\u003c/a\u003e"},{"lineNumber":73,"author":{"gitId":"fall9x"},"content":"Deletes the specified task from Dude Bot."},{"lineNumber":74,"author":{"gitId":"fall9x"},"content":"Format: `delete INDEX`"},{"lineNumber":75,"author":{"gitId":"fall9x"},"content":"* Deletes the task at the specified `INDEX`."},{"lineNumber":76,"author":{"gitId":"fall9x"},"content":"* The index refers to the index number displayed on the task list."},{"lineNumber":77,"author":{"gitId":"fall9x"},"content":"* The index **must be a positive integer**."},{"lineNumber":78,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":79,"author":{"gitId":"fall9x"},"content":"Example of usage: "},{"lineNumber":80,"author":{"gitId":"fall9x"},"content":"* `delete 2` deletes the 2nd person in the task list."},{"lineNumber":81,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":82,"author":{"gitId":"fall9x"},"content":"### Complete a task: `done` todo \u003ca name\u003d\"done\"\u003e\u003c/a\u003e"},{"lineNumber":83,"author":{"gitId":"fall9x"},"content":"Marks the specified task as complete in Dude Bot."},{"lineNumber":84,"author":{"gitId":"fall9x"},"content":"Format: `done INDEX`"},{"lineNumber":85,"author":{"gitId":"fall9x"},"content":"* Marks the tasks at the specified `INDEX`."},{"lineNumber":86,"author":{"gitId":"fall9x"},"content":"* The index refers to the index number displayed on the task list."},{"lineNumber":87,"author":{"gitId":"fall9x"},"content":"* The index **must be a positive integer**."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"fall9x"},"content":"### Exiting the program: `bye` \u003ca name\u003d\"bye\"\u003e\u003c/a\u003e"},{"lineNumber":90,"author":{"gitId":"fall9x"},"content":"Exits the program."},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"fall9x"},"content":"Format: `exit`"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"fall9x"},"content":"## Command summary"},{"lineNumber":95,"author":{"gitId":"fall9x"},"content":"| Action | Format |"},{"lineNumber":96,"author":{"gitId":"fall9x"},"content":"| :----- | :----- |"},{"lineNumber":97,"author":{"gitId":"fall9x"},"content":"| bye | `bye` "},{"lineNumber":98,"author":{"gitId":"fall9x"},"content":"| deadline | `deadline DESCRIPTION /by DATE` \u003cbr/\u003e e.g. `deadline Drink Tea /by 2020-09-16`"},{"lineNumber":99,"author":{"gitId":"fall9x"},"content":"| delete | `delete INDEX` \u003cbr/\u003e e.g. `delete 2`"},{"lineNumber":100,"author":{"gitId":"fall9x"},"content":"| done | `done INDEX` \u003cbr/\u003e e.g. `done 1` "},{"lineNumber":101,"author":{"gitId":"fall9x"},"content":"event | `event DESCRIPTION /at DATE` \u003cbr/\u003e e.g. `event Have fun /at 2020-12-10`"},{"lineNumber":102,"author":{"gitId":"fall9x"},"content":"find | `find KEYWORD` \u003cbr/\u003e e.g. `find fun`"},{"lineNumber":103,"author":{"gitId":"fall9x"},"content":"list | `list`"},{"lineNumber":104,"author":{"gitId":"fall9x"},"content":"todo | `todo DESCRIPTION` \u003cbr/\u003e e.g. `todo Charge airpods`"}],"authorContributionMap":{"-":12,"fall9x":92}},{"path":"src/main/java/dude/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":" * The possible commands from the user."},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"public enum Commands {"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"    LIST, BYE, DONE, TODO, EVENT, DEADLINE, DELETE, FIND"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":8}},{"path":"src/main/java/dude/Dude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.command.Command;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.command.ListCommand;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.ui.DialogWrapper;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"import dude.util.CorruptedFileException;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"import dude.util.InvalidArgumentException;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"import dude.util.InvalidCommandException;"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":" * The main class containing the key functionality of the bot."},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"public class Dude {"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    private static final String FILEPATH \u003d \"./data/tasks.txt\";"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    private static final String UPDATE \u003d \"list\";"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"    private final Storage storage;"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    private final Ui ui;"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"    private TaskList tasks;"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"     * Constructor for Dude class."},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"    public Dude() {"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"        ui \u003d new Ui();"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"        storage \u003d new Storage(FILEPATH);"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"            tasks \u003d new TaskList(storage.read());"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"            ui.showFileNotFound();"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"        } catch (CorruptedFileException e) {"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"            ui.showLoadingError();"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"     * Get a response from Dude."},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"     * @param input input from user."},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"     * @return DialogWrapper based on the command executed."},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"    public DialogWrapper getResponse(String input) {"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"            Command inputCommand \u003d Parser.parse(input);"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"            inputCommand.execute(tasks, ui, storage);"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"            return new DialogWrapper(ui.getMessage(), inputCommand.getExitStatus(), false);"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"        } catch (CommandException | InvalidArgumentException | InvalidCommandException e) {"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"            return new DialogWrapper(e.getMessage(), false, true);"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"    public void updateListView() {"},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"        new ListCommand(UPDATE);"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"     * Starts Dude bot by accepting user input."},{"lineNumber":65,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"fall9x"},"content":"    public void run() {"},{"lineNumber":67,"author":{"gitId":"fall9x"},"content":"        ui.greet();"},{"lineNumber":68,"author":{"gitId":"fall9x"},"content":"        boolean willExit \u003d false;"},{"lineNumber":69,"author":{"gitId":"fall9x"},"content":"        while (!willExit) {"},{"lineNumber":70,"author":{"gitId":"fall9x"},"content":"            try {"},{"lineNumber":71,"author":{"gitId":"fall9x"},"content":"                String input \u003d ui.readCommand();"},{"lineNumber":72,"author":{"gitId":"fall9x"},"content":"                Command inputCommand \u003d Parser.parse(input);"},{"lineNumber":73,"author":{"gitId":"fall9x"},"content":"                inputCommand.execute(tasks, ui , storage);"},{"lineNumber":74,"author":{"gitId":"fall9x"},"content":"                willExit \u003d inputCommand.getExitStatus();"},{"lineNumber":75,"author":{"gitId":"fall9x"},"content":"                ui.showMessage();"},{"lineNumber":76,"author":{"gitId":"fall9x"},"content":"            } catch (CommandException | InvalidArgumentException | InvalidCommandException e) {"},{"lineNumber":77,"author":{"gitId":"fall9x"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":78,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"fall9x":80,"-":1}},{"path":"src/main/java/dude/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":" * A Launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"     * Launches the Dude bot application."},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":15}},{"path":"src/main/java/dude/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"    private Dude dude \u003d new Dude();"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(dude);"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":32}},{"path":"src/main/java/dude/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import dude.command.Command;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import dude.command.DeadlineCommand;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.command.EventCommand;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import dude.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import dude.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"import dude.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"import dude.command.TodoCommand;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"import dude.util.InvalidArgumentException;"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"import dude.util.InvalidCommandException;"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":" * The class that processes the logic behind the bot."},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"public class Parser {"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     * Returns a Command based on the user input."},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"     * If the user gives an invalid input, an exception is thrown."},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     * @param input The command given by the user."},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"     * @return Command to be invoked."},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"     * @throws InvalidArgumentException If there are no arguments."},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"     * @throws InvalidCommandException If the command is invalid."},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"    public static Command parse(String input) throws InvalidArgumentException, InvalidCommandException {"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"        String[] commands \u003d input.split(\" \", 2);"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"        Commands currentCommand;"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"            currentCommand \u003d Commands.valueOf(commands[0].toUpperCase());"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"            switch(currentCommand) {"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"            case BYE:"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"                return new ExitCommand(commands[0]);"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"            case LIST:"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"                return new ListCommand(commands[0]);"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"            case DONE:"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"                return new DoneCommand(commands[0], Integer.valueOf(commands[1]));"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"            case TODO:"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"                return new TodoCommand(commands[0], commands[1]);"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"            case EVENT:"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"                String[] arr \u003d commands[1].split(\"/at\");"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"                return new EventCommand(commands[0], arr[0], arr[1].trim());"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"            case DEADLINE:"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"                String[] arr2 \u003d commands[1].split(\"/by\");"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"                return new DeadlineCommand(commands[0], arr2[0], arr2[1].trim());"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"            case DELETE:"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"                return new DeleteCommand(commands[0], Integer.valueOf(commands[1]));"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"            case FIND:"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"                return new FindCommand(commands[0], commands[1].trim());"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"            default:"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"                assert false : currentCommand;"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"                throw new InvalidCommandException(\"Sorry, your command is not recognised!\");"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"            throw new InvalidArgumentException(\"Sorry, your argument cannot be empty!\");"},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"            throw new InvalidCommandException(\"Sorry, your command is not recognised!\");"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"}"},{"lineNumber":65,"author":{"gitId":"fall9x"},"content":""}],"authorContributionMap":{"fall9x":65}},{"path":"src/main/java/dude/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":" * The abstract task contains the action of the command and whether the command calls for an exit."},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"    protected static final int FALSE \u003d -1;"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"    protected boolean willExit;"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"    private String action;"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"     * Constructor for the Command class."},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"     * @param action Takes in the action the command is to perform."},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    public Command(String action) {"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"        this.action \u003d action;"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"        willExit \u003d false;"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException;"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    public boolean getExitStatus() {"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"        return willExit;"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":31}},{"path":"src/main/java/dude/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import java.time.DateTimeException;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.task.Deadline;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":" * The command creates a deadline and adds it to the tasklist when executed."},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"    private String description;"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    private String by;"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     * Constructor for the DeadlineCommand class."},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"     * @param action action the command is to perform."},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"     * @param by deadline of the task."},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    public DeadlineCommand(String action, String description, String by) {"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"        super(action);"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"        this.description \u003d description;"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"        this.by \u003d by;"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"     * Adds the task to the TaskList, stores the data and displays the resulting output."},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"     * @param tasks TaskList containing all the current tasks."},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"     * @param ui Ui class to display output."},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"     * @param storage Storage class to store tasks."},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"     * @throws CommandException"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"            StringBuilder uiOutput \u003d new StringBuilder();"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"            LocalDate date \u003d LocalDate.parse(by);"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"            Deadline current \u003d new Deadline(description, date);"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"            int findDuplicate \u003d tasks.detectDuplicates(current);"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"            if (findDuplicate !\u003d super.FALSE) {"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"                uiOutput.append(\"Duplicate task found at position \").append(findDuplicate).append(\"!\");"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"                ui.setMessage(uiOutput.toString());"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"                return;"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"            tasks.addTask(current);"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"            uiOutput.append(\"Got it bro, I\u0027ve added this task:\\n  \").append(current.toString() + \"\\n\").append("},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"                    \"Now you have \").append(tasks.getCount()).append(\" tasks in the list.\");"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"            ui.setMessage(uiOutput.toString());"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"            storage.write(tasks.getTasks());"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"        } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(e.getMessage());"},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(\"Sorry, Invalid date format!\");"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":64}},{"path":"src/main/java/dude/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":" * DeleteCommand deletes a task from the tasklist."},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"    private int index;"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"     * Constructor for DeleteCommand class."},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"     * @param action action the command is to perform."},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"     * @param index index of task to be deleted."},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    public DeleteCommand(String action, int index) {"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"        super(action);"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"        this.index \u003d index;"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"     * Adds the task to the TaskList, stores the data and displays the resulting output."},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"     * @param tasks TaskList containing all the current tasks."},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"     * @param ui Ui class to display output."},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"     * @param storage Storage class to store tasks."},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     * @throws CommandException"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"            StringBuilder uiOutput \u003d new StringBuilder();"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"            uiOutput.append(\"Understood. I\u0027ve removed this task:\\n  \").append("},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"                    tasks.getTask(index - 1).toString()).append(\"Now you have \").append("},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"                    tasks.getCount() - 1).append(\" tasks in the list.\");"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"            tasks.deleteTask(index - 1);"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"            ui.setMessage(uiOutput.toString());"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"            storage.write(tasks.getTasks());"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(e.getMessage());"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(\"Sorry! The index to be removed does not exist!\");"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":51}},{"path":"src/main/java/dude/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":" * The command changes the status of an incomplete task to complete."},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"public class DoneCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"    private int index;"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"     * Constructor for DoneCommand class."},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"     * @param action action the command is to perform."},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"     * @param index index of task to be marked as complete."},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    public DoneCommand(String action, int index) {"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"        super(action);"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"        this.index \u003d index;"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"     * Adds the task to the TaskList, stores the data and displays the resulting output."},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"     * @param tasks TaskList containing all the current tasks."},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"     * @param ui Ui class to display output."},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"     * @param storage Storage class to store tasks."},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     * @throws CommandException"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"            tasks.getTask(index - 1).markAsDone();"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"            StringBuilder uiOutput \u003d new StringBuilder();"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"            uiOutput.append(\"Solid bro!! I\u0027ve marked this task as done:\\n\").append("},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"                    tasks.getTask(index - 1).toString() + \"\\n\");"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"            ui.setMessage(uiOutput.toString());"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"            storage.write(tasks.getTasks());"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(e.getMessage());"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(\"Sorry! The task index you wanted to complete does not exist!\");"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":50}},{"path":"src/main/java/dude/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import java.time.DateTimeException;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.task.Event;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":" * The command creates an event and adds it to the tasklist when executed."},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"public class EventCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"    private String description;"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    private String at;"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     * Constructor for the EventCommand class."},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"     * @param action action the command is to perform."},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     * @param at commencement date of the task."},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"    public EventCommand(String action, String description, String at) {"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"        super(action);"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"        this.description \u003d description;"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"        this.at \u003d at;"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     * Adds the task to the TaskList, stores the data and displays the resulting output."},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"     * @param tasks TaskList containing all the current tasks."},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"     * @param ui Ui class to display output."},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"     * @param storage Storage class to store tasks."},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"     * @throws CommandException"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"            StringBuilder uiOutput \u003d new StringBuilder();"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"            LocalDate date \u003d LocalDate.parse(at);"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"            Event current \u003d new Event(description, date);"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"            int findDuplicate \u003d tasks.detectDuplicates(current);"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"            if (findDuplicate !\u003d super.FALSE) {"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"                uiOutput.append(\"Duplicate task found at position \").append(findDuplicate).append(\"!\");"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"                ui.setMessage(uiOutput.toString());"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"                return;"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"            tasks.addTask(current);"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"            uiOutput.append(\"Got it bro, I\u0027ve added this task:\\n  \").append(current.toString() + \"\\n\").append("},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"                    \"Now you have \").append(tasks.getCount()).append(\" tasks in the list.\");"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"            ui.setMessage(uiOutput.toString());"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"            storage.write(tasks.getTasks());"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"        } catch (IOException e) {"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(e.getMessage());"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(\"Sorry, Invalid date format!\");"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":63}},{"path":"src/main/java/dude/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":" * The command signals for the bot to terminate."},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"public class ExitCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"     * Constructor for ExitCommand class."},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"     * @param action action the command is to perform."},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    public ExitCommand(String action) {"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"        super(action);"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"     * Adds the task to the TaskList, stores the data and displays the resulting output."},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"     * @param tasks TaskList containing all the current tasks."},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"     * @param ui Ui class to display output."},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"     * @param storage Storage class to store tasks."},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"     * @throws CommandException"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"        willExit \u003d true;"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"        ui.sendOff();"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":35}},{"path":"src/main/java/dude/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.task.Task;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":" * The command gets the items in the tasklist that contains the keyword."},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"public class FindCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"    private String keyWord;"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"     * Constructor for FindCommand class."},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"     * @param action action the command is to perform."},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     * @param keyWord the keyword to find in the tasklist."},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"    public FindCommand(String action, String keyWord) {"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"        super(action);"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"        this.keyWord \u003d keyWord;"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"     * Adds the task to the TaskList, stores the data and displays the resulting output."},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"     * @param tasks TaskList containing all the current tasks."},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"     * @param ui Ui class to display output."},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     * @param storage Storage class to store tasks."},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"     * @throws CommandException"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"        ArrayList\u003cTask\u003e searchList \u003d tasks.search(keyWord);"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"        Command command \u003d new ListCommand(\"list\");"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"        command.execute(new TaskList(searchList), ui, storage);"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"        if (searchList.size() \u003d\u003d 0) {"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(\"The keyword you searched for does not result in any results.\");"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":45}},{"path":"src/main/java/dude/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":" * The command gets the ui class to list all of the current tasks."},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"     * Constructor for ListCommand class."},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"     * @param action action the command is to perform."},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    public ListCommand(String action) {"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"        super(action);"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"     * Adds the task to the TaskList, stores the data and displays the resulting output."},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"     * @param tasks TaskList containing all the current tasks."},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"     * @param ui Ui class to display output."},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"     * @param storage Storage class to store tasks."},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"     * @throws CommandException"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"        StringBuilder uiOutput \u003d new StringBuilder();"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"        uiOutput.append(\"Here are the tasks in your list:\\n\");"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"        for (int i \u003d 0; i \u003c tasks.getCount(); i++) {"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"            uiOutput.append(String.valueOf(i + 1) + \".\" + tasks.getTask(i).toString() + \"\\n\");"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"        ui.setMessage(uiOutput.toString());"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":39}},{"path":"src/main/java/dude/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.command;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.task.Todo;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.util.CommandException;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import dude.util.Storage;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import dude.util.TaskList;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":" * The command creates a todo task and adds it to the tasklist when executed."},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"public class TodoCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"    private String description;"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"     * Constructor for the TodoCommand class."},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"     * @param action action the command is to perform."},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    public TodoCommand(String action, String description) {"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"        super(action);"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"        this.description \u003d description;"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"     * Adds the task to the TaskList, stores the data and displays the resulting output."},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"     * @param tasks TaskList containing all the current tasks."},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"     * @param ui Ui class to display output."},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"     * @param storage Storage class to store tasks."},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     * @throws CommandException"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CommandException {"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"            StringBuilder uiOutput \u003d new StringBuilder();"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"            Todo current \u003d new Todo(description);"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"            int findDuplicate \u003d tasks.detectDuplicates(current);"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"            System.out.println(findDuplicate);"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"            if (findDuplicate !\u003d super.FALSE) {"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"                uiOutput.append(\"Duplicate task found at position \").append(findDuplicate).append(\"!\");"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"                ui.setMessage(uiOutput.toString());"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"                return;"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"            tasks.addTask(current);"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"            uiOutput.append(\"Got it bro, I\u0027ve added this task:\\n  \").append(current.toString() + \"\\n\").append("},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"                    \"Now you have \").append(tasks.getCount()).append(\" tasks in the list.\");"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"            ui.setMessage(uiOutput.toString());"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"            storage.write(tasks.getTasks());"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(e.getMessage());"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"        } catch (Exception e) {"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"            throw new CommandException(\"Sorry, ToDo does not accept this argument!\");"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":58}},{"path":"src/main/java/dude/task/DatedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.task;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":" * The class handles Tasks that contains a date parameter."},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"public class DatedTask extends Task {"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"    protected LocalDate date;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"     * Constructor for the DatedTask class."},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"     * @param date date attached to the task."},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    public DatedTask(String description, LocalDate date) {"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"        this.date \u003d date;"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     * Constructor for the DatedTask class."},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"     * @param isDone boolean value to denote if a task is completed."},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"     * @param date date attached to the task."},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    public DatedTask(String description, boolean isDone, LocalDate date) {"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"        super(description, isDone);"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"        this.date \u003d date;"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be written into the data file."},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"    public String toSave() {"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"        return super.toSave() + \" | \" + date;"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"     * Returns the date of the DatedTask."},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"     * @return String description."},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"    public LocalDate getDate() {"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"        return date;"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"     * Overrides equal to compare 2 Task objects."},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"     * @return If the two objects are equal."},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"    public boolean equals(Object o) {"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"            return true;"},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"fall9x"},"content":"        if (!(o instanceof DatedTask)) {"},{"lineNumber":66,"author":{"gitId":"fall9x"},"content":"            return false;"},{"lineNumber":67,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"fall9x"},"content":"        DatedTask task \u003d (DatedTask) o;"},{"lineNumber":69,"author":{"gitId":"fall9x"},"content":"        return super.equals(task) \u0026\u0026 task.getDate().equals(date);"},{"lineNumber":70,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":72,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be displayed to the user."},{"lineNumber":74,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":76,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"fall9x"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"fall9x"},"content":"        return super.toString() + \" (date: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"},{"lineNumber":80,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"fall9x"},"content":"}"},{"lineNumber":82,"author":{"gitId":"fall9x"},"content":""}],"authorContributionMap":{"fall9x":82}},{"path":"src/main/java/dude/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.task;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":" * The class handles tasks with deadlines to meet."},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"public class Deadline extends DatedTask {"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"     * Constructor for the Deadline class."},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"     * @param by date the task is to be completed by."},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"        super(description, by);"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"     * Another constructor for the Deadline class."},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"     * @param isDone boolean value to denote if a task is completed."},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     * @param by date the task is to be completed by."},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"        super(description, isDone, by);"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be written into the data file."},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"    public String toSave() {"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"        return \"D | \" + super.toSave();"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be displayed to the user."},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"        return \"[D]\" + super.toString();"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":50}},{"path":"src/main/java/dude/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.task;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":" * The class handles tasks that occurs on a specific date."},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"public class Event extends DatedTask {"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"     * Constructor for the Event class."},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"     * @param at date the task is to be attended on."},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"        super(description, at);"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"     * Constructor for the Event class."},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"     * @param isDone boolean value to denote if a task is completed."},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"     * @param at date the task is to be attended on."},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    public Event(String description, boolean isDone, LocalDate at) {"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"        super(description, isDone, at);"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be written into the data file."},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"    public String toSave() {"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"        return \"E | \" + super.toSave();"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be displayed to the user."},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"        return \"[E]\" + super.toString();"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":49}},{"path":"src/main/java/dude/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.task;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":" * The class that contains the key functionality of a task."},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"     * Constructor for the Task class."},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     * Another constructor for the Task class."},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"     * @param isDone boolean value to denote if a task is completed."},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"        this.description \u003d description;"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"     * Marks the task as done."},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"    public void markAsDone() {"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"        this.isDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"     * Marks the task as not done."},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"    public void unMarkAsDone() {"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"        this.isDone \u003d false;"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"     * Returns the description of the task."},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"     * @return String description."},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"    public String getDescription() {"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"        return description;"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"     * Returns the status icon of the task."},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"     * @return String status icon."},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"    public String getStatusIcon() {"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be written into the data file."},{"lineNumber":66,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":68,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"fall9x"},"content":"    public String toSave() {"},{"lineNumber":70,"author":{"gitId":"fall9x"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;"},{"lineNumber":71,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":73,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"fall9x"},"content":"     * Overrides equal to compare 2 Task objects."},{"lineNumber":75,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"fall9x"},"content":"     * @return If the two objects are equal."},{"lineNumber":77,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":79,"author":{"gitId":"fall9x"},"content":"    public boolean equals(Object o) {"},{"lineNumber":80,"author":{"gitId":"fall9x"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":81,"author":{"gitId":"fall9x"},"content":"            return true;"},{"lineNumber":82,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"fall9x"},"content":"        if (!(o instanceof Task)) {"},{"lineNumber":84,"author":{"gitId":"fall9x"},"content":"            return false;"},{"lineNumber":85,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"fall9x"},"content":"        Task task \u003d (Task) o;"},{"lineNumber":87,"author":{"gitId":"fall9x"},"content":"        return task.getDescription().trim().equals(description.trim());"},{"lineNumber":88,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":90,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be displayed to the user."},{"lineNumber":92,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":94,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":96,"author":{"gitId":"fall9x"},"content":"    public String toString() {"},{"lineNumber":97,"author":{"gitId":"fall9x"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":98,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":99}},{"path":"src/main/java/dude/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.task;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":" * Todo handles the tasks that only contains descriptions"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"     * Constructor for Todo class."},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"     * Another constructor for the Todo class."},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"     * @param description description of the task."},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"     * @param isDone boolean value to denote if a task is completed."},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"        super(description, isDone);"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be written into the data file."},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"    public String toSave() {"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"        return \"T | \" + super.toSave();"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"     * Returns a string representation of the task to be displayed to the user."},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"     * @return String formatted description."},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":46}},{"path":"src/main/java/dude/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.ui;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"    private Label dialog;"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"            fxmlLoader.load();"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"        displayPicture.setImage(img);"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"    private void flip() {"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"        Collections.reverse(tmp);"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"        DialogBox db \u003d new DialogBox(text, img);"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"        BackgroundFill backFill \u003d new BackgroundFill("},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"                Color.web(\"#16E081\"),"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"                new CornerRadii(20),"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"                new Insets(5, 5, 5, 5)"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"        );"},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"        Background background \u003d new Background(backFill);"},{"lineNumber":65,"author":{"gitId":"fall9x"},"content":"        db.setBackground(background);"},{"lineNumber":66,"author":{"gitId":"fall9x"},"content":"        return db;"},{"lineNumber":67,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":69,"author":{"gitId":"fall9x"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"fall9x"},"content":"        DialogBox db \u003d new DialogBox(text, img);"},{"lineNumber":71,"author":{"gitId":"fall9x"},"content":"        BackgroundFill backFill \u003d new BackgroundFill("},{"lineNumber":72,"author":{"gitId":"fall9x"},"content":"                Color.web(\"#c5dae3\"),"},{"lineNumber":73,"author":{"gitId":"fall9x"},"content":"                new CornerRadii(20),"},{"lineNumber":74,"author":{"gitId":"fall9x"},"content":"                new Insets(5, 5, 5, 5)"},{"lineNumber":75,"author":{"gitId":"fall9x"},"content":"        );"},{"lineNumber":76,"author":{"gitId":"fall9x"},"content":"        Background background \u003d new Background(backFill);"},{"lineNumber":77,"author":{"gitId":"fall9x"},"content":"        db.setBackground(background);"},{"lineNumber":78,"author":{"gitId":"fall9x"},"content":"        db.flip();"},{"lineNumber":79,"author":{"gitId":"fall9x"},"content":"        return db;"},{"lineNumber":80,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":82,"author":{"gitId":"fall9x"},"content":"    public static DialogBox getDukeErrorDialog(String text, Image img) {"},{"lineNumber":83,"author":{"gitId":"fall9x"},"content":"        DialogBox db \u003d new DialogBox(text, img);"},{"lineNumber":84,"author":{"gitId":"fall9x"},"content":"        BackgroundFill backFill \u003d new BackgroundFill("},{"lineNumber":85,"author":{"gitId":"fall9x"},"content":"                Color.web(\"#FA544B\"),"},{"lineNumber":86,"author":{"gitId":"fall9x"},"content":"                new CornerRadii(20),"},{"lineNumber":87,"author":{"gitId":"fall9x"},"content":"                new Insets(5, 5, 5, 5)"},{"lineNumber":88,"author":{"gitId":"fall9x"},"content":"        );"},{"lineNumber":89,"author":{"gitId":"fall9x"},"content":"        Background background \u003d new Background(backFill);"},{"lineNumber":90,"author":{"gitId":"fall9x"},"content":"        db.setBackground(background);"},{"lineNumber":91,"author":{"gitId":"fall9x"},"content":"        db.flip();"},{"lineNumber":92,"author":{"gitId":"fall9x"},"content":"        return db;"},{"lineNumber":93,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":94}},{"path":"src/main/java/dude/ui/DialogWrapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.ui;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":" * DialogWrapper class wraps the ui to be shown with the exit status."},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"public class DialogWrapper {"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"    private final String message;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"    private final boolean isExit;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"    private final boolean isError;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"     * Constructor for the DialogWrapper class."},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"     * @param message message for the user."},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"     * @param isExit is the program exiting."},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"    public DialogWrapper(String message, boolean isExit, boolean isError) {"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"        this.message \u003d message;"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"        this.isError \u003d isError;"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"    protected String getMessage() {"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"        return message;"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    protected boolean getExitStatus() {"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"        return isExit;"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"    protected boolean hasError() {"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"        return isError;"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":33}},{"path":"src/main/java/dude/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.ui;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import dude.Dude;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    private Dude dude;"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/right.png\"));"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/left.png\"));"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"    public void setDuke(Dude d) {"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"        dude \u003d d;"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"        DialogWrapper response \u003d dude.getResponse(input);"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"        if (response.getExitStatus()) {"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"            Platform.exit();"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"                    response.hasError() ? DialogBox.getDukeErrorDialog(response.getMessage(), dukeImage)"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"                            : DialogBox.getDukeDialog(response.getMessage(), dukeImage)"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"            );"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"            userInput.clear();"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":59}},{"path":"src/main/java/dude/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.ui;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":" * The class the handles all the on screen interaction with the user."},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"    private Scanner scanner;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"    private String message;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"     * Constructor for the Ui class."},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"     * Greeting to the user."},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    public void greet() {"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"        StringBuilder str \u003d new StringBuilder();"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"        str.append(\"Yo I\u0027m Dood!!\\nAnything I can do for you?\\n\").append(\"The commands available are:\\n\")"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"                .append(\"list     | Shows the list of tasks on the bot.\\n\")"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"                .append(\"bye      | Exits the program\\n\")"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"                .append(\"done     | Marks the Task as done. Format is \u0027done {task index}.\\n\")"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"                .append(\"todo     | Creates a ToDo task. Format is \u0027Todo {description}.\\n\")"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"                .append(\"event    | Creates an Event task. Format is \u0027event {description} /at {date in YYYY-MM-DD}.\\n\")"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"                .append(\"deadline | Creates a DeadLine task. Format is \u0027deadline {description} /by {date in YY-MM-DD}.\")"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"                .append(\"\\ndelete   | Deletes a Task. Format is \u0027 delete {task index}\");"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"        System.out.println(template(str.toString()));"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"    public void sendOff() {"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"        message \u003d \"See you again!!\";"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"    public String template(String reply) {"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"        return LINE + reply + \"\\n\" + LINE;"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"    public void showFileNotFound() {"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"        System.out.println(template(\"No existing user data file found. Welcome to the bot club:)\"));"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"    public void showLoadingError() {"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"        System.out.println(template(\"Your file has been corrupted :( Unfortunately the data cannot be used\"));"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"    public void showError(String message) {"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"        System.out.println(template(message));"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"    public void showLine() {"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"        System.out.println(LINE);"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"    public void showMessage() {"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"        System.out.println(template(message));"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"    public String readCommand() {"},{"lineNumber":65,"author":{"gitId":"fall9x"},"content":"        return scanner.nextLine();"},{"lineNumber":66,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":68,"author":{"gitId":"fall9x"},"content":"    public String getMessage() {"},{"lineNumber":69,"author":{"gitId":"fall9x"},"content":"        return message;"},{"lineNumber":70,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":72,"author":{"gitId":"fall9x"},"content":"    public void setMessage(String message) {"},{"lineNumber":73,"author":{"gitId":"fall9x"},"content":"        this.message \u003d message;"},{"lineNumber":74,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":75}},{"path":"src/main/java/dude/util/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.util;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":" * CommandException class to denote an issue with the command given by the user."},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"public class CommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"     * Constructor for the CommandException class."},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"     * @param message the error message."},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"    public CommandException(String message) {"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":14}},{"path":"src/main/java/dude/util/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.util;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":" * CorruptedClass class to denote an issue with the format of the data file."},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"public class CorruptedFileException extends Exception {"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"     * Constructor for the CorruptedFileException class."},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"     * @param message the error message."},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"    public CorruptedFileException(String message) {"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":14}},{"path":"src/main/java/dude/util/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.util;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":" * CommandException class to denote an issue with the arguments following the command."},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"public class InvalidArgumentException extends Exception {"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"     * Constructor for the InvalidArgumentException class."},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"     * @param message the error message."},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"    public InvalidArgumentException(String message) {"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":13}},{"path":"src/main/java/dude/util/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.util;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":" * InvalidCommandException class to denote an issue with the command given by the user."},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"     * Constructor for the InvalidCommandException class."},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"     * @param message the error message."},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"    public InvalidCommandException(String message) {"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":13}},{"path":"src/main/java/dude/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.util;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import java.time.DateTimeException;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"import java.util.function.Function;"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"import dude.task.Deadline;"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"import dude.task.Event;"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"import dude.task.Task;"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"import dude.task.Todo;"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":" * The class that handles the reading and writing of tasks."},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    private String filePath;"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"    private Function\u003cString, Boolean\u003e func \u003d x -\u003e x.equals(\"1\") ? true : false;"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":"    public Storage(String filePath) {"},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"     * Returns an ArrayList of Tasks from the data file."},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"     * @return ArrayList of Task from the data file."},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":"     * @throws FileNotFoundException file is not found."},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"     * @throws CorruptedFileException file has unknown formatting."},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"    public ArrayList\u003cTask\u003e read() throws FileNotFoundException, CorruptedFileException {"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"        Scanner scanner \u003d new Scanner(f);"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"        ArrayList\u003cString\u003e lineList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"        while (scanner.hasNextLine()) {"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":"            lineList.add(scanner.nextLine());"},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"            return lineConverter(lineList);"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"        } catch (CorruptedFileException e) {"},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"            throw new CorruptedFileException(\"Sorry, the input file is corrupted.\");"},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"     * Saves the Tasklist into the data file."},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"     * @param textToAdd list of Tasks that the user input."},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"     * @throws IOException unable to open the file in write."},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":"    public void write(List\u003cTask\u003e textToAdd) throws IOException {"},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"        File dataDir \u003d new File(f.toPath().getParent().toString());"},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"        if (!dataDir.exists()) {"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"            dataDir.mkdir();"},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);"},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"        fileWriter.write(taskConverter(textToAdd));"},{"lineNumber":65,"author":{"gitId":"fall9x"},"content":"        fileWriter.close();"},{"lineNumber":66,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":68,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"fall9x"},"content":"     * Converts an Ararylist of Strings into an Arraylist of Task."},{"lineNumber":70,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"fall9x"},"content":"     * @param lineList ArrayList of Strings."},{"lineNumber":72,"author":{"gitId":"fall9x"},"content":"     * @return ArrayList of Task."},{"lineNumber":73,"author":{"gitId":"fall9x"},"content":"     * @throws CorruptedFileException Invalid format read from the file."},{"lineNumber":74,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"fall9x"},"content":"    private ArrayList\u003cTask\u003e lineConverter(ArrayList\u003cString\u003e lineList) throws CorruptedFileException {"},{"lineNumber":76,"author":{"gitId":"fall9x"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":77,"author":{"gitId":"fall9x"},"content":"        for (String s : lineList) {"},{"lineNumber":78,"author":{"gitId":"fall9x"},"content":"            try {"},{"lineNumber":79,"author":{"gitId":"fall9x"},"content":"                String[] temp \u003d s.split(\" \\\\| \");"},{"lineNumber":80,"author":{"gitId":"fall9x"},"content":"                if (!temp[1].equals(\"1\") \u0026\u0026 !temp[1].equals(\"0\")) {"},{"lineNumber":81,"author":{"gitId":"fall9x"},"content":"                    throw new CorruptedFileException(\"Sorry, the input file is corrupted.\");"},{"lineNumber":82,"author":{"gitId":"fall9x"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"fall9x"},"content":"                assert temp.equals(\"1\") || temp.equals(\"0\") : \"temp should be equals to 0 or 1\";"},{"lineNumber":84,"author":{"gitId":"fall9x"},"content":"                if (temp[0].equals(\"T\")) {"},{"lineNumber":85,"author":{"gitId":"fall9x"},"content":"                    taskList.add(new Todo(temp[2].trim(), func.apply(temp[1])));"},{"lineNumber":86,"author":{"gitId":"fall9x"},"content":"                } else if (temp[0].equals(\"D\")) {"},{"lineNumber":87,"author":{"gitId":"fall9x"},"content":"                    taskList.add(new Deadline(temp[2].trim(), func.apply(temp[1]), LocalDate.parse(temp[3])));"},{"lineNumber":88,"author":{"gitId":"fall9x"},"content":"                } else if (temp[0].equals(\"E\")) {"},{"lineNumber":89,"author":{"gitId":"fall9x"},"content":"                    taskList.add(new Event(temp[2].trim(), func.apply(temp[1]), LocalDate.parse(temp[3])));"},{"lineNumber":90,"author":{"gitId":"fall9x"},"content":"                } else {"},{"lineNumber":91,"author":{"gitId":"fall9x"},"content":"                    throw new CorruptedFileException(\"Sorry, the input file is corrupted.\");"},{"lineNumber":92,"author":{"gitId":"fall9x"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"fall9x"},"content":"            } catch (DateTimeException e) {"},{"lineNumber":94,"author":{"gitId":"fall9x"},"content":"                throw new CorruptedFileException(\"Sorry, the input file is corrupted.\");"},{"lineNumber":95,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"fall9x"},"content":"        return taskList;"},{"lineNumber":98,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":100,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"fall9x"},"content":"     * Converts a TaskList into a String for saving."},{"lineNumber":102,"author":{"gitId":"fall9x"},"content":"     * @param taskList TaskList."},{"lineNumber":103,"author":{"gitId":"fall9x"},"content":"     * @return String representation of TaskList."},{"lineNumber":104,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"fall9x"},"content":"    private String taskConverter(List\u003cTask\u003e taskList) {"},{"lineNumber":106,"author":{"gitId":"fall9x"},"content":"        StringBuilder uiOutput \u003d new StringBuilder();"},{"lineNumber":107,"author":{"gitId":"fall9x"},"content":"        for (Task t : taskList) {"},{"lineNumber":108,"author":{"gitId":"fall9x"},"content":"            uiOutput.append(t.toSave()).append(\"\\n\");"},{"lineNumber":109,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"fall9x"},"content":"        return uiOutput.toString();"},{"lineNumber":111,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":112}},{"path":"src/main/java/dude/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"package dude.util;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"import dude.task.Task;"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":" * The class that handles all of the tasks while the program is running."},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":" */"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"    private static final int FALSE \u003d -1;"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"    public void addTask(Task task) {"},{"lineNumber":24,"author":{"gitId":"fall9x"},"content":"        tasks.add(task);"},{"lineNumber":25,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":27,"author":{"gitId":"fall9x"},"content":"    public Task getTask(int index) {"},{"lineNumber":28,"author":{"gitId":"fall9x"},"content":"        return tasks.get(index);"},{"lineNumber":29,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":31,"author":{"gitId":"fall9x"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":32,"author":{"gitId":"fall9x"},"content":"        return tasks;"},{"lineNumber":33,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":35,"author":{"gitId":"fall9x"},"content":"    public int getCount() {"},{"lineNumber":36,"author":{"gitId":"fall9x"},"content":"        return tasks.size();"},{"lineNumber":37,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":39,"author":{"gitId":"fall9x"},"content":"    public void deleteTask(int index) {"},{"lineNumber":40,"author":{"gitId":"fall9x"},"content":"        tasks.remove(index);"},{"lineNumber":41,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":43,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"fall9x"},"content":"     * Detest duplicates within the current TaskList."},{"lineNumber":45,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"fall9x"},"content":"     * @param task Takes in a task."},{"lineNumber":47,"author":{"gitId":"fall9x"},"content":"     * @return boolean value to denote if there is a duplicate."},{"lineNumber":48,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"fall9x"},"content":"    public int detectDuplicates(Task task) {"},{"lineNumber":50,"author":{"gitId":"fall9x"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":51,"author":{"gitId":"fall9x"},"content":"            if (task.equals(tasks.get(i))) {"},{"lineNumber":52,"author":{"gitId":"fall9x"},"content":"                return i + 1;"},{"lineNumber":53,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"fall9x"},"content":"        return FALSE;"},{"lineNumber":56,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":58,"author":{"gitId":"fall9x"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"fall9x"},"content":"     * Search for keywords within a TaskList."},{"lineNumber":60,"author":{"gitId":"fall9x"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"fall9x"},"content":"     * @param keywords takes in a String of keywords."},{"lineNumber":62,"author":{"gitId":"fall9x"},"content":"     * @return The tasks that match the keywords."},{"lineNumber":63,"author":{"gitId":"fall9x"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"fall9x"},"content":"    public ArrayList\u003cTask\u003e search(String keywords) {"},{"lineNumber":65,"author":{"gitId":"fall9x"},"content":"        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"fall9x"},"content":"        String[] keywordArray \u003d keywords.split(\" \");"},{"lineNumber":67,"author":{"gitId":"fall9x"},"content":"        boolean allMatch;"},{"lineNumber":68,"author":{"gitId":"fall9x"},"content":"        String curr;"},{"lineNumber":69,"author":{"gitId":"fall9x"},"content":"        for (Task task : tasks) {"},{"lineNumber":70,"author":{"gitId":"fall9x"},"content":"            allMatch \u003d true;"},{"lineNumber":71,"author":{"gitId":"fall9x"},"content":"            for (int i \u003d 0; i \u003c keywordArray.length; i++) {"},{"lineNumber":72,"author":{"gitId":"fall9x"},"content":"                curr \u003d keywordArray[i];"},{"lineNumber":73,"author":{"gitId":"fall9x"},"content":"                if (!task.getDescription().toLowerCase().contains(curr.toLowerCase())) {"},{"lineNumber":74,"author":{"gitId":"fall9x"},"content":"                    allMatch \u003d false;"},{"lineNumber":75,"author":{"gitId":"fall9x"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"fall9x"},"content":"            if (allMatch) {"},{"lineNumber":78,"author":{"gitId":"fall9x"},"content":"                matchList.add(task);"},{"lineNumber":79,"author":{"gitId":"fall9x"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"fall9x"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"fall9x"},"content":"        return matchList;"},{"lineNumber":82,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":83}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"150\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" lineSpacing\u003d\"1.0\" text\u003d\"Label\" maxWidth\u003d\"300\" minHeight\u003d\"-Infinity\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"            \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"            \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"        \u003c/Label\u003e"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    \u003cpadding\u003e"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"    \u003c/padding\u003e"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"fall9x":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"\u003c?import java.net.URL?\u003e"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dude.ui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"            \u003ccontent\u003e"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"fall9x"},"content":"            \u003c/content\u003e"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":19,"author":{"gitId":"fall9x"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"fall9x"},"content":"    \u003cstylesheets\u003e"},{"lineNumber":21,"author":{"gitId":"fall9x"},"content":"        \u003cURL value\u003d\"@style.css\" /\u003e"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":"    \u003c/stylesheets\u003e"},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"fall9x":23}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"import dude.task.Event;"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"    public void eventTest_creation_success() {"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"        Event event \u003d new Event(\"test\", true, LocalDate.parse(\"2020-10-12\"));"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"        assertEquals(\"[E][\\u2713] test (date: Oct 12 2020)\", event.toString());"},{"lineNumber":14,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":15}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"import dude.task.Todo;"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"    public void todoTest_creation_success() {"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"        Todo todo \u003d new Todo(\"test\");"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"        assertEquals(todo.toString(), \"[T][\\u2718] test\");"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":"}"}],"authorContributionMap":{"fall9x":13}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"T | 1 | read lecture notes"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":"T | 0 | buy new pens"}],"authorContributionMap":{"fall9x":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fall9x"},"content":"todo read lecture notes"},{"lineNumber":2,"author":{"gitId":"fall9x"},"content":"deadline read lecture notes /by Sunday 23rd 11pm"},{"lineNumber":3,"author":{"gitId":"fall9x"},"content":"event statistic lecture /at Monday 24th 4-6pm"},{"lineNumber":4,"author":{"gitId":"fall9x"},"content":"list"},{"lineNumber":5,"author":{"gitId":"fall9x"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"fall9x"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"fall9x"},"content":"list"},{"lineNumber":8,"author":{"gitId":"fall9x"},"content":"todo buy new pens"},{"lineNumber":9,"author":{"gitId":"fall9x"},"content":"list"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"fall9x"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"fall9x"},"content":"bye"}],"authorContributionMap":{"fall9x":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"fall9x"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Main.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"fall9x"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"fall9x"},"content":""},{"lineNumber":23,"author":{"gitId":"fall9x"},"content":"PAUSE"}],"authorContributionMap":{"-":18,"fall9x":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"fall9x"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Dude.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"fall9x":1}}]
