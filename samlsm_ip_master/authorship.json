[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    String toDoBy;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    Deadline(String description, String toDoBy) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        this.toDoBy \u003d toDoBy.stripLeading().stripTrailing();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public static Deadline createTask(String message) throws DukeException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String errMessage1 \u003d \" Oops!! You missed out some vital information/keyword... *woof*\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String errMessage2 \u003d \" Oops!! You gonna forget what this is about if you\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                \" dont give me a description... *woof*\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String errMessage3 \u003d \" Oops!! You did not state when you wanna finish this by...\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                \" Are you planning to procrastinate? *woof*\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String messageLowerCase \u003d message.toLowerCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            int indOfTime \u003d messageLowerCase.indexOf(\"/by\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String description \u003d message.substring(9, indOfTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String deadline \u003d message.substring(indOfTime + 3);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            if (description.isBlank() \u0026\u0026 deadline.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                String exMessage \u003d Print.printFormat(errMessage1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            }else if (deadline.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                String exMessage \u003d Print.printFormat(errMessage3);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            } else if (description.isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                String exMessage \u003d Print.printFormat(errMessage2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                return new Deadline(description, deadline);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String exMessage \u003d Print.printFormat(errMessage1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        return \"[D]\" + super.toString() + \" (FINISH by: \" + toDoBy + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "samlsm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samlsm": 44
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    private final List\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    private final String lines \u003d \".~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    private final static String ignoreCase \u003d \"(?i)\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    enum Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        LIST, DONE, BYE, TODO, DEADLINE, EVENT, DELETE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String welcome \u003d \" Hello! I\u0027m Yuki *Woof*\\n What can I do for you? *Woof woof*\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        Print.print(welcome);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public void goodBye() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String bye \u003d \" Bye. Hope to see you again soon! *Woof woof*\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        Print.print(bye);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public String printTotal() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        return \" Now you have \" + listOfTask.size() + \" tasks in the list. Keep going!!\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public void deleteTask(String message) throws DukeException{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            int ind \u003d Integer.parseInt(message.substring(6).stripLeading().stripTrailing()) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            Task t \u003d listOfTask.get(ind);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            listOfTask.remove(ind);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            Print.print(\" *WOOF* I have removed:\\n   \" + t + \"\\n\" + printTotal());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String errMessage \u003d Print.printFormat(\" *Woof!* This task does not exist!\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw new DukeException(errMessage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String errMessage \u003d Print.printFormat(\" *Woof!* Please enter an integer value! I can\u0027t really read...\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw new DukeException(errMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        listOfTask.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        Print.print(\" *WOOF* I have added:\\n   \" + t + \"\\n\" + printTotal());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public void checkAction(String message) throws DukeException{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        if (message.matches(ignoreCase + Command.DEADLINE.name() + \"(.*)\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            t \u003d Deadline.createTask(message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            addTask(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } else if (message.matches(ignoreCase + Command.EVENT.name() + \"(.*)\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            t \u003d Event.createTask(message);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            addTask(t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } else if (message.matches(ignoreCase + Command.TODO.name() + \"(.*)\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            t \u003d Todo.createTask(message);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            addTask(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } else if (message.matches(ignoreCase + Command.DELETE.name() + \"(.*)\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            deleteTask(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String errMessage \u003d Print.printFormat(\" I\u0027m sorry but i do not know what you want to do. *woof*\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw new DukeException(errMessage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public void markAsDone(int ind) throws DukeException{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            listOfTask.get(ind).markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            printTotal();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            int taskInd \u003d ind + 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String errMessage \u003d Print.printFormat(\" There\u0027s no task \" + taskInd + \" in your list *woof*\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw new DukeException(errMessage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public void printToDos() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        if (listOfTask.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            Print.print(\" You have no task to complete! *WOOF*\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            System.out.print(lines);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            System.out.println(\" Here are the tasks in your list *Woof*:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            listOfTask.forEach((task) -\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                int ind \u003d listOfTask.indexOf(task) + 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                System.out.println(\"   \" + ind + \".\" + task.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            System.out.println(lines);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                String query \u003d input.nextLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                if (query.matches(ignoreCase + Command.BYE.name())) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                    duke.goodBye();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                    input.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                } else if (query.matches(ignoreCase + Command.LIST.name())) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                    duke.printToDos();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                } else if (query.matches(ignoreCase + Command.DONE.name() +\"(.*)\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                    int taskInd \u003d Integer.parseInt(query.substring(5));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                    duke.markAsDone(taskInd - 1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                    duke.checkAction(query);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samlsm": 114,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samlsm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samlsm": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    String schedule;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    Event(String description, String schedule) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        this.schedule \u003d schedule.stripLeading().stripTrailing();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public static Event createTask(String message) throws DukeException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String errMessage1 \u003d \" Oops!! You missed out some vital information/keyword... *woof*\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String errMessage2 \u003d \" Oops!! Are you planning to ghost the event?\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                \" You didnt state the time of this event... *woof*\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String errMessage3 \u003d \" Oops!! You gonna forget what this is about if you\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                \" dont give me a description... *woof*\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String messageLowerCase \u003d message.toLowerCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            int indOfTime \u003d messageLowerCase.indexOf(\"/at\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String description \u003d message.substring(6, indOfTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String at \u003d message.substring(indOfTime + 3);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            if (description.isBlank() \u0026\u0026 at.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                String exMessage \u003d Print.printFormat(errMessage1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            } else if (at.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                String exMessage \u003d Print.printFormat(errMessage2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            } else if (description.isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                String exMessage \u003d Print.printFormat(errMessage3);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                return new Event(description, at);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String exMessage \u003d Print.printFormat(errMessage1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        return \"[E]\" + super.toString() + \" (Appear at: \" + schedule + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "samlsm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samlsm": 44
    }
  },
  {
    "path": "src/main/java/Print.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "public class Print {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    private static final String lines \u003d \".~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.\\n\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public static void print (String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        System.out.println(lines + message + lines);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public static String printFormat (String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        return lines + message + lines;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samlsm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samlsm": 10
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    private String lines \u003d \".~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.\\n\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    Task(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        this.description \u003d message.stripLeading().stripTrailing();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            Print.print(\" Good Job!!! You cleared this task:\\n   [\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                    + this.description + \"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            Print.print(\" You have already completed this task! *Woof woof*\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "samlsm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samlsm": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public static Todo createTask(String message) throws DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        String errMessage \u003d \" Oops!! You forgot to tell me what this task is about... *woof*\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String description \u003d message.substring(5);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                String exMessage \u003d Print.printFormat(errMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samlsm"
        },
        "content": "                return new Todo(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            String exMessage \u003d Print.printFormat(errMessage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samlsm"
        },
        "content": "            throw new DukeException(exMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samlsm"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samlsm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "samlsm": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "liSt"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": "todo buy Books"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samlsm"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samlsm"
        },
        "content": "deadLine        complete project     /by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samlsm"
        },
        "content": "deadLIne /by Tuesday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "samlsm"
        },
        "content": "deadLine"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "samlsm"
        },
        "content": "DEADLINE complete project"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "samlsm"
        },
        "content": "deadLine complete project /by Monday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "samlsm"
        },
        "content": "Event      tutorial           /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "samlsm"
        },
        "content": "Event /at Monday 2-4pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "samlsm"
        },
        "content": "EVENT meeting /at      Monday 3-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "samlsm"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "samlsm"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samlsm"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samlsm"
        },
        "content": "deaLine complete chapter 1 /by Monday"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samlsm"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samlsm"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "samlsm"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "samlsm"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "samlsm"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "samlsm"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "samlsm"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "samlsm": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "samlsm"
        },
        "content": "if ! ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "samlsm"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "samlsm"
        },
        "content": "  )"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "samlsm"
        },
        "content": "#java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "samlsm"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "samlsm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "samlsm": 7,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "samlsm"
        },
        "content": "../src/main/java/Print.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "samlsm"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "samlsm"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "samlsm"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "samlsm"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "samlsm"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "samlsm"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "samlsm": 7
    }
  }
]
