[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "D | 0 | return book | Oct 20 2020 8:20 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "T | 0 | unrelated stuff"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "T | 0 | clear trash"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 4
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to add a Task to the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Task to be added to the task list */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to add a Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param task The task to be added to the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Adds the Task to the task list, saves the task list and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displays a message indicating completion of the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The storage object that saves the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If task contains an invalid date and time format."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void execute(Tasklist tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            ui.display(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + \"  \" + task.toDisplayString() + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + \"Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (DateTimeException dateTimeException) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(\"Please enter a valid date and time in the format \u0027DD-MM-YYYY HHMM\u0027!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns false as it is not an ExitCommand."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 55
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command that can be executed by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Command() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public abstract void execute(Tasklist tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 14
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Task that is accompanied by a specific deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Date of the deadline of the Task */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Time of the deadline of the Task */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Task with a deadline which has not been marked as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param date Date of the deadline of the Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param time Time of the deadline of the Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Deadline(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Task with a deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param isDone Boolean value that indicates if the Task has been completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param date Date of the deadline of the Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param time Time of the deadline of the Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the hashcode of the Deadline."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return Hashcode of the Deadline."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return Objects.hash(date, time);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Deadline"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed on the UI."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Deadline to"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * be displayed on the UI."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"[D]\" + super.toDisplayString() + \" (by: \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Deadline"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed in the storage of the task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the String representation"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * of the Deadline to be displayed in the storage of the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"D\" + \" | \" + super.toSavedString() + \" | \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 85
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to delete a Task from the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** The index of the task to be deleted */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to delete a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param taskNumber The index of the task to be deleted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Deletes the task with the task number from the task list,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * saves the task list and displays a message indicating"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * completion of the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The Storage object that saves the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If task number entered is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void execute(Tasklist tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Task removedTask \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            ui.display(\"Noted. I\u0027ve removed this task:\\n\" + \"  \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + removedTask.toDisplayString() + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns false as it is not an ExitCommand."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 55
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to mark a Task in the task list as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** The index of the task to be marked as done */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to mark a Task as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param taskNumber The index of the task to be marked as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Marks the task with the task number as done, saves the task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * and displays a message indicating completion of the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The Storage object that saves the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If task number entered is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void execute(Tasklist tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Task completedTask \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            ui.display(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + completedTask.toDisplayString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns false as it is not an ExitCommand."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 53
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents the Duke bot, which has a task list, a storage space and a user interface."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Storage space to save and load task list */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** List of tasks saved by Duke */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Tasklist tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** User interface for Duke */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param filepath The path of the file where the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *                 list of tasks is stored in a .txt file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            ui.showError(dukeException.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Runs the Duke bot."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                Command command \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 57,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents an Exception that is made when executing Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates an Exception with a message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param message Message to be displayed on the UI in the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *                that an Exception is thrown."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 18
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents an Event that is accompanied by a specific date"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * and time of occurrence."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Date of the occurrence of the Event */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Time of the occurrence of the Event */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates an Event which has not been marked as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of the Event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param date Date of the occurrence of the Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param time Time of the occurrence of the Event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates an Event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of the Event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param isDone Boolean value that indicates if the Task has been completed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param date Date of the occurrence of the Event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param time Time of the occurrence of the Event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Event to be"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed on the UI."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Event to be"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed on the UI."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"[E]\" + super.toDisplayString() + \" (at: \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Event to be"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed in the storage of the task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Event to be"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed in the storage of the task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"E\" + \" | \" + super.toSavedString() + \" | \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 76
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to exit Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to exit Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Displays a goodbye message and exits Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The Storage object that saves the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void execute(Tasklist tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns true as it is an instance of an ExitCommand."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 38
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private String query;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public FindCommand(String query) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void execute(Tasklist tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        if (query.isBlank()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            ui.display(\"Please enter a valid query!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            ui.display(\"Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    + tasks.matchedTasksOnly(query));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 27
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Command to display all Tasks from the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Command to display all Tasks from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Displays all the tasks from the task list onto the user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param ui The user interface."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param storage The Storage object that saves the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If task number entered is invalid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void execute(Tasklist tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        ui.display(tasks.toDisplayString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns false as it is not an ExitCommand."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 38
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Parser responsible for parsing Strings"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * to generate tasks and commands for the Duke bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Format for date and time used when user inputs a task */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final DateTimeFormatter INPUT_DATE_TIME_FORMAT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Format for date and time used when Duke saves a task list */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private static final DateTimeFormatter SAVED_DATE_TIME_FORMAT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Parses a line read from the task list from the storage space"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * and generates a corresponding Task to be added to the live TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param fullTask The line from the .txt file to be parsed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The corresponding Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If the line contains an incorrect format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public static Task parseTask(String fullTask) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String[] splitTask \u003d fullTask.split(\" \\\\| \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String type \u003d splitTask[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String description \u003d splitTask[2];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        boolean isDone \u003d Integer.parseInt(splitTask[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return new Todo(description, isDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            LocalDateTime by \u003d LocalDateTime.parse(splitTask[3], SAVED_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return new Deadline(description, isDone, by.toLocalDate(), by.toLocalTime());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            LocalDateTime at \u003d LocalDateTime.parse(splitTask[3], SAVED_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return new Event(description, isDone, at.toLocalDate(), at.toLocalTime());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(\"Unable to read task.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Parses a line read from the user input and generates a"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * corresponding Command to be executed by Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param fullCommand The user input to be parsed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The corresponding Command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If the command type cannot be recognised or is in the wrong format"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public static Command parseCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String type \u003d splitCommand[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new AddCommand(new Todo(splitCommand[1]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new FindCommand(splitCommand[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                String[] splitDeadline \u003d splitCommand[1].split(\"/by\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                String deadlineDescription \u003d splitDeadline[0].trim();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                LocalDateTime by \u003d LocalDateTime.parse(splitDeadline[1].trim(), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new AddCommand(new Deadline(deadlineDescription, by.toLocalDate(), by.toLocalTime()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                String[] splitEvent \u003d splitCommand[1].split(\"/at\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                String eventDescription \u003d splitEvent[0].trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                LocalDateTime at \u003d LocalDateTime.parse(splitEvent[1].trim(), INPUT_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new AddCommand(new Event(eventDescription, at.toLocalDate(), at.toLocalTime()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new DoneCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                throw new DukeException(\"Unknown command type.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (DateTimeException dateTimeException) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(\"Please enter the date and time in the format \u0027DD-MM-YYYY HHMM\u0027!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (Exception exception) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(\"Unable to read command. Please enter it in the correct format!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 98
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Storage space responsible for saving the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * for future use, or loading the task list for current use."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Path to the .txt file that contains the list of tasks */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Storage object to store the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param filepath Path to the .txt file that contains the list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Loads the Tasklist from the Storage data for current use."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return Tasklist to be used currently."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If there is a problem faced with reading the .txt file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Tasklist load() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Tasklist tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filepath));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String nextLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            while (nextLine !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                Task nextTask \u003d Parser.parseTask(nextLine);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                tasks.add(nextTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                nextLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (FileNotFoundException fileNotFoundException) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "           throw new DukeException(\"Warning: Unable to find file containing task history. \" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    \"Please carry on if this is the first time using Duke.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(\"Warning: Unable to read task history.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Saves the data from current Tasklist into the Storage for future use."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param tasks Current Tasklist in use."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @throws DukeException If a problem was encountered when attempting to save the Tasklist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void save(Tasklist tasks) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            // Make data directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Path pathToDirectory \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            if (!pathToDirectory.toFile().exists()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                File data \u003d new File(\"data\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                data.mkdir();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String latestTaskListString \u003d tasks.toSavedString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            writer.write(latestTaskListString);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            throw new DukeException(\"Unable to save task list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 83
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a Task which can be added to or deleted from a task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * list, or marked as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Details of what has to be done in the Task */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Boolean value that indicates if the Task has been completed */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a Task which has not been marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param isDone Boolean value that indicates if the Task has been completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the state of completion of a Task as a status icon."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return A tick symbol if the Task is done, or an X otherwise."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the details of what has to be done in the Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return Details of what has to be done in the Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Marks the completion status of the Task as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Task to be displayed on the UI."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Task to be displayed on the UI."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the Task to be saved in"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * the storage of the task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the Task to be saved in the"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * storage of the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        int isDoneInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return isDoneInt + \" | \" + getDescription();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 83
    }
  },
  {
    "path": "src/main/java/duke/Tasklist.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a list of tasks. The Tasklist supports operations to add or delete tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * and to mark tasks as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Tasklist {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates an empty Tasklist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Tasklist() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Adds a Task to the Tasklist."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param task The task to be added to the Tasklist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the number of Tasks currently stored in the Tasklist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The number of Tasks currently stored in the Tasklist."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the Task with the specified index within the Tasklist."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param taskNumber The index of the Task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The Task with the specified index within the Tasklist."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Task get(int taskNumber) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Removes the Task with the specified index within the Tasklist."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param taskNumber The index of the Task to be removed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the list of all Tasks,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed on the UI."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the list of all Tasks to be"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * displayed on the UI."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return \"You have no tasks!\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String taskListString \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            while (taskNumber \u003c taskList.size() + 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                Task task \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                taskListString +\u003d taskNumber + \".\" + task.toDisplayString() + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                taskNumber++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            return taskListString.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the list of all Tasks"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * that match the query String, to be displayed on the UI."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param query The search query String."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the list of all Tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * that match the query String, to be displayed on the UI."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String matchedTasksOnly(String query) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String matchedTasks \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            if (task.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                matchedTasks +\u003d index + \".\" + task.toDisplayString() + \"\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return matchedTasks.trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the list of all Tasks,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be saved in the storage of the Tasklist."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the list of all Tasks to"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * be saved in the storage of the Tasklist."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String taskListString \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            while (taskNumber \u003c taskList.size() + 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                Task task \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                taskListString +\u003d task.toSavedString() + \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                taskNumber++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return taskListString;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 121
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a simple Task without a deadline or time of occurrence."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a simple Task which has not been marked as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the simple Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a simple Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param description Details of what has to be done in the simple Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param isDone Boolean value that indicates if the simple Task has been completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the simple Task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed on the UI."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the simple Task to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * be displayed on the UI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toDisplayString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"[T]\" + super.toDisplayString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Returns the String representation of the simple Task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * to be displayed in the storage of the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return String representation of the String representation"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * of the simple Task to be displayed in the storage of the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String toSavedString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return \"T\" + \" | \" + super.toSavedString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 52
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * Represents a user interface which displays messages to the user or"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " * receives user input commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /** Scanner object to scan for user input */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Creates a user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Displays the welcome message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Reads the user input from the user interface and generates a String."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @return The user input as a String."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Displays a message to the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param displayMessage The message to be displayed to the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void display(String displayMessage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        System.out.println(displayMessage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Displays an error message to the user when an Exception or Error is thrown."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * @param errorMessage The error message to be displayed to the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Displays a goodbye message to the user when user exits Duke."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     * Displays a line to the user to separate commands."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 69
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void parseTask_validDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String fullTask \u003d \"D | 0 | Sample Task | Oct 12 2020 8:00 PM\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task actualTask \u003d Parser.parseTask(fullTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task expectedTask \u003d new Deadline(\"Sample Task\", false,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                LocalDate.of(2020, 10, 12),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                LocalTime.of(20, 0));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        assertEquals(expectedTask.toDisplayString(), actualTask.toDisplayString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void parseTask_validEvent_success() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        String fullTask \u003d \"E | 1 | Sample Event | Oct 12 2020 8:00 PM\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task actualTask \u003d Parser.parseTask(fullTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task expectedTask \u003d new Event(\"Sample Event\", true,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                LocalDate.of(2020, 10, 12),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                LocalTime.of(20, 0));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        assertEquals(expectedTask.toDisplayString(), actualTask.toDisplayString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void parseCommand_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String fullCommand \u003d \"blah\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Command command \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            assertEquals(\"Unable to read command. Please enter it in the correct format!\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void parseCommand_invalidDeadlineFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            String fullCommand \u003d \"deadline Sample Task /by 121020202000\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            Command command \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "            assertEquals(\"Please enter the date and time in the format \u0027DD-MM-YYYY HHMM\u0027!\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 57
    }
  },
  {
    "path": "src/test/java/TasklistTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "public class TasklistTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void toDisplayString_emptyList_messageDisplayed() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Tasklist tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        assertEquals(\"You have no tasks!\", tasks.toDisplayString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    public void toDisplayString_filledList_tasksEnumerated() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Tasklist tasks \u003d new Tasklist();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        Task task1 \u003d new Todo(\"Sample Task\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        tasks.add(task1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "        assertEquals(\"1.[T][✘] Sample Task\", tasks.toDisplayString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josuaaah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 23
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "D | 1 | Sample Deadline Task | Jan 01 2020 12:00 am"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "T | 0 | Sample Todo Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "E | 1 | Sample Event | Jan 01 2020 12:00 am"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "todo Sample Todo Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "deadline Sample Deadline Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "deadline Sample Deadline Task /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "deadline Sample Deadline Task /by 010120200000"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "deadline Sample Deadline Task /by 01-01-2020 0000"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "event Sample Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "event Sample Event /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "event Sample Event /at 010120200000"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "event Sample Event /at 01-01-2020 0000"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "blah"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josuaaah"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "josuaaah": 1,
      "-": 37
    }
  }
]
