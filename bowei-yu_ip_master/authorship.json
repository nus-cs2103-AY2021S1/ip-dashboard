[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 10,
      "-": 44
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.manager.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents the Duke chat bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private void printGreeting() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private void printGoodbye() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Runs the Duke bot by printing the greeting message,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * instantiating a parser to handle user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * and printing the goodbye message upon exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        new Parser().handleUserInput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        printGoodbye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Main method that drives the running of the Duke bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 30,
      "-": 4
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents an exception thrown by Duke. The message corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * the problem encountered and how to mitigate it."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the message indicating the problem and its mitigation."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 21
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents an invalid command exception thrown by Duke,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * usually thrown when the command provided by the user is faulty."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * The message corresponds to the problem encountered and how to mitigate it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 13
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents an invalid description exception thrown by Duke,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * typically thrown when the description of a task is empty."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * The message corresponds to the problem encountered and how to mitigate it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class InvalidDescriptionException extends InvalidCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public InvalidDescriptionException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 13
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents an invalid number exception thrown by Duke,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * typically thrown when the number index provided is out of range."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * The message corresponds to the problem encountered and how to mitigate it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class InvalidNumberException extends InvalidCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public InvalidNumberException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 13
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents an invalid time exception thrown by Duke,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * typically thrown when the time provided for a task is empty."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * The message corresponds to the problem encountered and how to mitigate it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class InvalidTimeException extends InvalidCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public InvalidTimeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 13
    }
  },
  {
    "path": "src/main/java/manager/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents the set of commands recognised by the converter."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    DEADLINE, DELETE, DELETE_ALL, DONE, EVENT, FIND, LIST, TODO;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 8
    }
  },
  {
    "path": "src/main/java/manager/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents a parser that parses the user\u0027s input and"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * translate them into commands, to be passed to the converter."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * If a command is invalid, the InvalidCommandException is thrown and caught."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private final Ui converter \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Handles the user input by parsing them into commands"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * and sending them to the converter."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void handleUserInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.converter.getSavedTasks();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    this.converter.convertAction(Commands.LIST, 0, \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                } else if (input.equals(\"delete all\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    this.converter.convertAction(Commands.DELETE_ALL, 0, \"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    String toFind \u003d input.substring(\"find\".length()).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    this.converter.convertAction(Commands.FIND, 0, toFind);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                } else if (isNumberedCommand(input)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    if (words[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        int index \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        this.converter.convertAction(Commands.DONE, index, \"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    } else if (words[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        int index \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        this.converter.convertAction(Commands.DELETE, index, \"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        throw new InvalidCommandException(\"Command is invalid. Try again?\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    if (input.startsWith(\"deadline\") \u0026\u0026 input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        this.converter.passTask(this.converter.convertTask(Commands.DEADLINE, input));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    } else if (input.startsWith(\"event\") \u0026\u0026 input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        this.converter.passTask(this.converter.convertTask(Commands.EVENT, input));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        this.converter.passTask(this.converter.convertTask(Commands.TODO, input));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        throw new InvalidCommandException(\"Not sure what you mean. \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                                + \"Please ensure your command format is correct and try again.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                this.converter.storeTasks();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                this.converter.storeTasks();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private boolean isNumberedCommand(String input) throws InvalidNumberException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        boolean checkBackNumber \u003d words.length \u003d\u003d 2"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \u0026\u0026 words[1].chars().allMatch(Character::isDigit);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        if (checkBackNumber) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            int index \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            boolean isValidNumber \u003d index \u003c this.converter.getTotalTasks();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            if (!isValidNumber) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                throw new InvalidNumberException(\"The number entered is invalid. \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        + \"You have \" + this.converter.getTotalTasks() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 113
    }
  },
  {
    "path": "src/main/java/manager/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents a platform enabling storage, which stores"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * and retrieves the task list from the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private String pathname;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private File dataFile;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Initializes the database. If database file does not exist,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * creates a new directory consisting of that file and"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * returns the Storage object. Else, only returns the Storage object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return database created through Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public static Storage initializeDatabase() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return new Storage().initialize();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private Storage initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        String rootPath \u003d new File(System.getProperty(\"user.dir\"))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                .getParentFile()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                .getPath();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.pathname \u003d String.format(\"%s/data/database.txt\", rootPath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.dataFile \u003d new File(this.pathname);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.dataFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.dataFile.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println(\"File already exists.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Retrieves the task list from the database file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return task list retrieved"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public List\u003cTask\u003e retrieveTaskList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            File dataFile \u003d new File(this.pathname);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            Scanner sc \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                taskList.add(createSavedTask(sc.nextLine()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println(\"Database file does not exist.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        listSavedTasks(taskList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * List out the saved tasks from the specified task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param taskList as specified"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void listSavedTasks(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"Here are your saved tasks:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println((i + 1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Creates the saved task from the string input of a database"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param string input of task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return task created from input string"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Task createSavedTask(String string) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        String[] words \u003d string.split(\" \\\\| \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        String taskType \u003d words[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        boolean isDone \u003d words[1].equals(\"true\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        String description \u003d words[2];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            return new Todo(description, isDone);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            return new Deadline(description, words[3], isDone);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            return new Event(description, words[3], isDone);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Updates the database file to save task list for storage."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param taskList to be saved"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void updateDatabase(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            sb.append(task.databaseString() + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(this.pathname);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            fileWriter.write(sb.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println(\"Cannot update database file.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 120
    }
  },
  {
    "path": "src/main/java/manager/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents a task list. Performs actions on tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Prints out the tasks present in the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println((i + 1) + \".\" + this.taskList.get(i).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Adds the specified task into the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param task to be added"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        if (task !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.taskList.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println(task.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            printNumberOfTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Mark the task specified by the index as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param index of specified task to be marked done"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(this.taskList.get(index).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Deletes the task specified by the index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param index of specified task to be deleted"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task removedTask \u003d this.taskList.remove(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(removedTask.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        printNumberOfTasks();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Finds tasks with the given keyword."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param toFind keyword"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void findTasks(String toFind) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        int currentIndex \u003d 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            if (task.getDescription().contains(toFind)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                System.out.println(currentIndex + \".\" + task.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                currentIndex++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Deletes all existing tasks in the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void deleteAllTasks() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        if (this.taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.taskList.subList(0, this.taskList.size()).clear();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Obtains the total number of tasks in the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the number of tasks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Prints the total number of tasks in the task list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void printNumberOfTasks() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.out.println(\"Now you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Obtains the list of tasks."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the list of tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Sets the task list to the specified list of tasks."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param taskList specified to be set"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void setList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 114
    }
  },
  {
    "path": "src/main/java/manager/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents a platform that converts commands into tasks and actions."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Interacts with the parser by receiving commands,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * passes converted tasks and actions to the task list,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * sends the task list to the database for storage,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * and retrieves the task list from the database if needed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private final TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private final Storage database \u003d Storage.initializeDatabase();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Converts a command and input into the corresponding task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the task that is converted"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Task convertTask(Commands command, String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                String deadlineDesc \u003d input.substring(\"deadline\".length(), input.indexOf(\"/by\")).trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                String endTime \u003d input.substring(input.indexOf(\"/by\") + \"/by\".length()).trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                return new Deadline(deadlineDesc, endTime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                String eventDesc \u003d input.substring(\"event\".length(), input.indexOf(\"/at\")).trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                String time \u003d input.substring(input.indexOf(\"/at\") + \"/at\".length()).trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                return new Event(eventDesc, time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                String todoDesc \u003d input.substring(\"todo\".length()).trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                return new Todo(todoDesc);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException | InvalidTimeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Converts a command and index into the corresponding action."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void convertAction(Commands command, int index, String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.taskList.listTasks();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.taskList.markTaskAsDone(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.taskList.deleteTask(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        case DELETE_ALL:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.taskList.deleteAllTasks();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.taskList.findTasks(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Passes the task into the task list to be added."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void passTask(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.taskList.addTask(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Obtains the total number of tasks in the task list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the number of tasks in the task list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return this.taskList.getNumberOfTasks();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Stores the task list into the database."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void storeTasks() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.database.updateDatabase(this.taskList.getList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Retrieves the task list from the database."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void getSavedTasks() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.taskList.setList(this.database.retrieveTaskList());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 104
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents a deadline, consisting of a description and an end time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Throws InvalidDescriptionException or InvalidTimeException if"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * the description or end time provided is blank."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private final String endTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private LocalDateTime formattedDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private LocalDate formattedDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Creates a new deadline object with a given description and end time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param description provided for the deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param endTime provided for the deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @throws InvalidDescriptionException when description is empty"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @throws InvalidTimeException when end time is empty"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Deadline(String description, String endTime) throws InvalidDescriptionException, InvalidTimeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            throw new InvalidDescriptionException("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"Hey! Deadline description shouldn\u0027t be blank.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } else if (endTime.isBlank()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            throw new InvalidTimeException("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"Do try again by adding a time you need to get this done by.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            formatEndTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Creates a new deadline object given a description, deadline and its done status."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param description provided for the deadline"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param endTime provided for the deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param isDone provided for the deadline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Deadline(String description, String endTime, boolean isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        formatEndTime();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private void formatEndTime() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.formattedDateTime \u003d LocalDateTime.parse(this.endTime, formatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (DateTimeParseException e1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.formattedDateTime \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                this.formattedDate \u003d LocalDate.parse(this.endTime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            } catch (DateTimeParseException e2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                this.formattedDate \u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the string that represents the deadline."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the string consisting of the tag,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * done status, description and end time"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return this.formattedDateTime \u003d\u003d null"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                ? this.formattedDate \u003d\u003d null"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    ? \"[D]\" + super.toString() + \" (by: \" + this.endTime + \")\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    : \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        + this.formattedDate.format("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                                DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                : \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    + this.formattedDateTime.format("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the string that represents the deadline in a database."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the string consisting of the tag,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * done status, description and end time"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String databaseString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return \"D | \" + super.databaseString() + \" | \" + this.endTime;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 98
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents an event, consisting of a description and a time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Throws InvalidDescriptionException or InvalidTimeException if"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * the description or time provided is blank."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private LocalDateTime formattedDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private LocalDate formattedDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Creates a new event object with a given description and time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param description provided for the event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param time provided for the event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @throws InvalidDescriptionException when description is empty"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @throws InvalidTimeException when time is empty"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Event(String description, String time) throws InvalidDescriptionException, InvalidTimeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            throw new InvalidDescriptionException("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"Hey! Event description shouldn\u0027t be blank.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } else if (time.isBlank()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            throw new InvalidTimeException("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"Do try again by adding a time where the event takes place.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            formatTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Creates a new event object with a given description, time and done status."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param description provided for the event"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param time provided for the event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param isDone provided for the event"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Event(String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        formatTime();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private void formatTime() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.formattedDateTime \u003d LocalDateTime.parse(this.time, formatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (DateTimeParseException e1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            this.formattedDateTime \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                this.formattedDate \u003d LocalDate.parse(this.time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            } catch (DateTimeParseException e2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                this.formattedDate \u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the string that represents the event."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the string consisting of the tag,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * done status, description and time"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return this.formattedDateTime \u003d\u003d null"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                ? this.formattedDate \u003d\u003d null"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    ? \"[E]\" + super.toString() + \" (at: \" + this.time + \")\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    : \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        + this.formattedDate.format("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                                DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                : \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    + this.formattedDateTime.format("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"MMM d yyyy, hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the string that represents the event in a database."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the string consisting of the tag,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * done status, description and time"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String databaseString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return \"E | \" + super.databaseString() + \" | \" + this.time;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 98
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents an abstract task, consisting of a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Constructs a task given a description, setting default done status as false."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param description provided for the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Constructs a task given a description and done status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param description provided for the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param isDone provided for the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Obtains the description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the status icon that represents the done status of a task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the status icon, tick meaning done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * while cross meaning not done yet"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Marks the task as done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the string that represents the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the string consisting of the done status and description"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the string that represents the task in a database."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the string consisting of the done status and description"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String databaseString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        String doneStatus \u003d this.isDone ? \"true\" : \"false\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return doneStatus + \" | \" + this.description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 73
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package main.java.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Represents a todo, consisting of a description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " * Throws InvalidDescriptionException if the description provided is blank."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Creates a new todo object with a given description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param description provided for the todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @throws InvalidDescriptionException when description is empty"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Todo(String description) throws InvalidDescriptionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            throw new InvalidDescriptionException(\"Hey! \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    + \"Todo description shouldn\u0027t be blank.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Creates a new todo given a description and done status."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param description provided for the todo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @param isDone provided for the todo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the string that represents the todo."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the string consisting of the tag,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * done status and description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * Returns the string that represents the todo in a database."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * @return the string consisting of the tag,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     * done status and description"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public String databaseString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        return \"T | \" + super.databaseString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 53
    }
  },
  {
    "path": "src/test/java/exceptions/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void testGetMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(\"message\", new DukeException(\"message\").getMessage());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 15
    }
  },
  {
    "path": "src/test/java/exceptions/InvalidCommandExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class InvalidCommandExceptionTest extends DukeExceptionTest{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 6
    }
  },
  {
    "path": "src/test/java/exceptions/InvalidDescriptionExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class InvalidDescriptionExceptionTest extends InvalidCommandExceptionTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void invalidDescriptionException_blankTodoDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Todo(\"\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Todo(\" \"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Todo(\"        \"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void invalidDescriptionException_blankEventDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Event(\"\", \"next Monday\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Event(\" \", \"next Monday\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Event(\"        \", \"next Monday\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void invalidDescriptionException_blankDeadlineDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Deadline(\"\", \"next Monday\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Deadline(\" \", \"next Monday\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidDescriptionException.class,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Deadline(\"        \", \"next Monday\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 41
    }
  },
  {
    "path": "src/test/java/exceptions/InvalidNumberExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class InvalidNumberExceptionTest extends InvalidCommandExceptionTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 4
    }
  },
  {
    "path": "src/test/java/exceptions/InvalidTimeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class InvalidTimeExceptionTest extends InvalidCommandExceptionTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void invalidTimeException_blankEventTime_exceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidTimeException.class,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Event(\"event go to a spa\", \"\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidTimeException.class,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Event(\"event get out of a simulation\", \" \"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidTimeException.class,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Event(\"event explore the miniverse\", \"     \"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void invalidTimeException_blankDeadlineEndTime_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidTimeException.class,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Deadline(\"deadline change the car gears\", \"\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidTimeException.class,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Deadline(\"deadline get some death crystals\", \" \"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Assertions.assertThrows(InvalidTimeException.class,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                () -\u003e new Deadline(\"deadline obtain some mega seeds\", \"   \"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 32
    }
  },
  {
    "path": "src/test/java/manager/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.manager.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void testHandleUserInput() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        String input \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"todo disarm neutrino bomb \\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"done 1\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"event go on a fun adventure /at now \\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"delete 1\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"deadline try inception /by tomorrow 7am\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"list\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"hello cosmos!\\n\" + // gibberish"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"delete all\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        System.setOut(new PrintStream(output));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        parser.handleUserInput();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(\"Here are your saved tasks:\\r\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Got it. I\u0027ve added this task:\\r\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"[T][✘] disarm neutrino bomb\\r\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Now you have 1 tasks in the list.\\r\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Nice! I\u0027ve marked this task as done:\\r\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"[T][✓] disarm neutrino bomb\\r\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Got it. I\u0027ve added this task:\\r\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"[E][✘] go on a fun adventure (at: now)\\r\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Now you have 2 tasks in the list.\\r\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Noted. I\u0027ve removed this task:\\r\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"[T][✓] disarm neutrino bomb\\r\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Now you have 1 tasks in the list.\\r\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Got it. I\u0027ve added this task:\\r\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"[D][✘] try inception (by: tomorrow 7am)\\r\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Now you have 2 tasks in the list.\\r\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Here are the tasks in your list:\\r\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"1.[E][✘] go on a fun adventure (at: now)\\r\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"2.[D][✘] try inception (by: tomorrow 7am)\\r\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Not sure what you mean. \" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"Please ensure your command format is correct and try again.\\r\\n\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                output.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 59
    }
  },
  {
    "path": "src/test/java/manager/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.manager.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void testCreateSavedTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Storage database \u003d Storage.initializeDatabase();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task event \u003d database.createSavedTask(\"E | true | run in a stream | 2020-08-29 1000\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task todo \u003d database.createSavedTask(\"T | false | watch ball fondlers\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task deadline \u003d database.createSavedTask(\"D | true | fix the car | 2020-08-27 1800\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(\"[E][✓] run in a stream (at: Aug 29 2020, 10:00 AM)\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                event.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(\"[T][✘] watch ball fondlers\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                todo.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(\"[D][✓] fix the car (by: Aug 27 2020, 06:00 PM)\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                deadline.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 24
    }
  },
  {
    "path": "src/test/java/manager/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.manager.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void testGetNumberOfTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            taskList.addTask(new Todo(\"get schwifty\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            taskList.addTask(new Event(\"say goodbye to moonmen\", \"5000-12-30\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            taskList.addTask(new Deadline(\"not get a dragon\", \"forever\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException | InvalidTimeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(3, taskList.getNumberOfTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void testGetList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertTrue(new TaskList().getList() instanceof ArrayList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 35
    }
  },
  {
    "path": "src/test/java/manager/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package manager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.manager.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.manager.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void testConvertTask() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Ui converter \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task todo \u003d converter.convertTask(Commands.TODO, \"todo buy a hat\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task deadline \u003d converter.convertTask(Commands.DEADLINE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"deadline undo cronenberg world /by 2020-12-07\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task event \u003d converter.convertTask(Commands.EVENT,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"event destroy the galactic government /at 2020-11-08 1430\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(\"[T][✘] buy a hat\", todo.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(\"[D][✘] undo cronenberg world (by: Dec 7 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"[E][✘] destroy the galactic government \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                        \"(at: Nov 8 2020, 02:30 PM)\", event.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void testConvertAction() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Ui converter \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task todo \u003d converter.convertTask(Commands.TODO, \"todo grab a shovel\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task deadline \u003d converter.convertTask(Commands.DEADLINE,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"deadline clean up meeseeks\u0027 mess /by 2024-08-24 2000\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        Task event \u003d converter.convertTask(Commands.EVENT,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                \"event invent snake time travel /at 2051-11-07\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        converter.passTask(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        converter.passTask(deadline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        converter.passTask(event);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        converter.convertAction(Commands.LIST, 0, \"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        converter.convertAction(Commands.DONE, 2, \"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        converter.convertAction(Commands.DELETE, 1, \"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        converter.convertAction(Commands.LIST, 0, \"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        assertEquals(2, converter.getTotalTasks());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 50
    }
  },
  {
    "path": "src/test/java/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void deadline_normalDeadlineDescriptionAndTime_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            new Deadline(\"get rid of gooble boxes\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"next Thursday\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException | InvalidTimeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void deadline_blankDeadlineDescription_exceptionThrow() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            new Deadline(\" \", \"today\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException | InvalidTimeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            assertEquals(\"Hey! \" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"Deadline description shouldn\u0027t be blank.\", e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void deadline_blankDeadlineEndTime_exceptionThrow() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            new Deadline(\"go for family therapy\", \" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException | InvalidTimeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            assertEquals(\"Do try again by adding a time \" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"you need to get this done by.\", e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 43
    }
  },
  {
    "path": "src/test/java/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void event_normalEventDescriptionAndTime_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            new Event(\"chill with family vacation\", \"next Monday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException | InvalidTimeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void event_blankEventDescription_exceptionThrow() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            new Event(\" \", \"next Monday\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException | InvalidTimeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            assertEquals(\"Hey! \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"Event description shouldn\u0027t be blank.\", e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 31
    }
  },
  {
    "path": "src/test/java/tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.exceptions.InvalidDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import main.java.tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void todo_emptyTodoDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            new Todo(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            assertEquals(\"Hey! \" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"Todo description shouldn\u0027t be blank.\", e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void todo_blankTodoDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            new Todo(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            assertEquals(\"Hey! \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "                    \"Todo description shouldn\u0027t be blank.\", e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    public void todo_normalTodoDescription_success() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            new Todo(\"learn how to skate\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        } catch (InvalidDescriptionException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "deadline prepare for presentation /by today 7pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "todo go cycling"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "hello"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "deadline learn how to swim /by 2020-10-15"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "event watch horror movie with friends /at 12am"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "deadline /by today"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "event discover north pole /at 2020-09-20"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "deadline do homework /by Monday 6pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "done 17"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "deadline learn how to cook /by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "event /at Wednesday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "done hahaha"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "event go paragliding /at"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "find do"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "deadline fix the car /by 2020-08-27 1800"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "event run in a stream /at 2020-08-29 1000"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 30
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "deadline finish project /by thursday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "delete all"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d -Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "del ACTUAL2.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "java -classpath ..\\bin Duke \u003c input2.txt \u003e ACTUAL2.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bowei-yu"
        },
        "content": "FC ACTUAL2.TXT EXPECTED2.TXT"
      }
    ],
    "authorContributionMap": {
      "bowei-yu": 6,
      "-": 21
    }
  }
]
