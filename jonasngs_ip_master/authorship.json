[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + this.by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public static final String DIVIDER \u003d \"----------------------------------------\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        Duke session \u003d new Duke(); // start a new session with JonasBot"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        session.greet(); // greet the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        session.execute(); // execute the bot to perform intended functions"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        session.end(); // end the current session with JonasBot"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String text \u003d \"  ______  _____  __  ____     __     _______      \\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \" |__  __||  __ | | \\\\ |  |    /_ \\\\    |   ___|     \\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"    | |  | | | | |  \\\\|  |   //_\\\\ \\\\   |  |___          \\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \" _  | |  | | | | | |\\\\   |  / ____ \\\\  |____  |   \\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"| |_| |  | |_| | | | \\\\  | / /    \\\\ \\\\ _____| |         \\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"|_____|  |_____| |_|  \\\\_|/_/      \\\\_\\\\|______|       \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"                  _____   ______  ________                            \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"                  |  _ \\\\ |  _  | |__   __|                  \\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"                  | |_| || | | |    | |                      \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"                  |    / | | | |    | |         \\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"                  |  _ \\\\ | |_| |    | |       \\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"                  | |_| ||     |    | |         \\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"                  |_____/|_____|    |_|                 \\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String greeting \u003d \"  Hello! I am JonasBot! Nice to meet you :) \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                text +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"  \\n  I am a task manager bot that will keep track of all your tasks. \\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"  \\n  To view a list of all my commands, input \u0027/commands\u0027 \\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"  \\n  Now that you are familiar with the commands, how may I assist you today?\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(Duke.DIVIDER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(Duke.DIVIDER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String message \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String function \u003d message.split(\" \")[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        while (!message.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                System.out.println(Duke.DIVIDER);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                if (message.equals(\"/commands\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    commands();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else if (message.isEmpty()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    System.out.println(\"Please enter something!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else if (message.equals(\"list\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    retrieveList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else if (function.equals(\"done\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    completeTask(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else if (function.equals(\"todo\") || function.equals(\"deadline\") || function.equals(\"event\")){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    createTask(message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else if (function.equals(\"delete\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    deleteTask(message);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    handleFailedFunction();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            System.out.println(Duke.DIVIDER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            message \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            function \u003d message.split(\" \")[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void handleFailedFunction() throws InvalidFunctionException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String err \u003d \"Invalid Function! Input \u0027/commands\u0027 for a list of all my commands. \";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        throw new InvalidFunctionException(err);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void retrieveList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            System.out.println(\"Your list is empty. Add a new task!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            System.out.println(\"Here is a list of all your tasks:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                int index \u003d i + 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                System.out.println(\"\\t\" + String.format(\"%d. %s\", index, this.tasks.get(i)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void completeTask(String message) throws InvalidTaskException, InvalidFunctionException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            int index \u003d Integer.parseInt(message.split(\" \")[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            if (index \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"Invalid Task! The task does not exist, try again.\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"The task ID you provided is not valid. Input \u0027/commands\u0027 to view a list of my commands. \";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidFunctionException(err);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                if (this.tasks.get(index - 1).isDone) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    System.out.println(\"  This task has already been completed:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    this.tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    System.out.println(\"  Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                System.out.println(\"\\t\" + this.tasks.get(index - 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            String err \u003d \"No Task ID provided! Please input the ID of the task you wish to mark as completed.\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            throw new InvalidFunctionException(err);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            String err \u003d \"Your input is not a recognised command. You have to provide the ID of \" +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    \"the task you wish to mark as done. \\n\" + \"Input \u0027/commands\u0027 to view a list of my commands. \";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            throw new InvalidFunctionException(err);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void deleteTask(String message) throws InvalidTaskException, InvalidFunctionException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            int index \u003d Integer.parseInt(message.split(\" \")[1]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            if (index \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"Invalid Task! The task does not exist, try again.\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"The task ID you provided is not valid. Input \u0027/commands\u0027 to view a list of my commands. \";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidFunctionException(err);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                Task toRemove \u003d this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                System.out.println(\"  Found it! This task has been successfully deleted:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                System.out.println(\"\\t\" + toRemove);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                this.tasks.remove(index - 1);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                System.out.println(\"  You have \" + this.tasks.size() + \" tasks in your list now.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            String err \u003d \"No Task ID provided! Please input the ID of the task you wish to delete.\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            throw new InvalidFunctionException(err);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            String err \u003d \"Your input is not a recognised command. You have to provide the ID of \" +"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    \"the task you wish to delete. \\n\" + \"Input \u0027/commands\u0027 to view a list of my commands. \";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            throw new InvalidFunctionException(err);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void commands() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String commands \u003d \"  Below is a list of all the commands for my functions: \\n\" +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"  1. Create a new task: \\n\" +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"\\t  1.1 Todo: \u0027todo\u0027 {task description}. For eg, todo eat \\n\" +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"\\t  1.2 Deadline: \u0027deadline\u0027 {task description} \u0027/by\u0027 {due date}.\" +"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \" For eg, deadline return book /by Sunday \\n\" +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"\\t  1.3 Event: \u0027event\u0027 {task description} \u0027/at\u0027 {event time}.\" +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \" For eg, event project meeting /at Mon 2-4pm \\n\" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"  \\n  2. To display all tasks in your list: \u0027list\u0027 \\n\" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"  \\n  3. To mark a task as completed: \u0027done\u0027 {task ID}. For eg, \u0027done 2\u0027 \\n\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"  \\n  4. To delete a task: \u0027delete\u0027 {task ID}. For eg, \u0027delete 2\u0027 \\n\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                \"  \\n  5. To end this chat: \u0027bye\u0027 \\n\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(commands);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void createTask(String message) throws InvalidTaskException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String[] taskInfo \u003d retrieveTaskInfo(message);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(\"  Success! This \" + taskInfo[0] + \" task has been added:\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        if (taskInfo[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            Task toAdd \u003d new Todo(taskInfo[1]);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            this.tasks.add(toAdd);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            System.out.println(\"\\t\" + toAdd);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } else if (taskInfo[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            Task toAdd \u003d new Deadline(taskInfo[1], taskInfo[2]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            this.tasks.add(toAdd);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            System.out.println(\"\\t\" + toAdd);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } else if (taskInfo[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            Task toAdd \u003d new Event(taskInfo[1], taskInfo[2]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            this.tasks.add(toAdd);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            System.out.println(\"\\t\" + toAdd);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(\"  You have \" + this.tasks.size() + \" tasks in your list now.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public String[] retrieveTaskInfo(String message) throws InvalidTaskException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String[] taskInfo \u003d new String[3];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String taskType \u003d message.split(\" \")[0];"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            String[] task \u003d message.split(\"todo\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            if (task.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"Your todo task description is empty. The task cannot be created.\\n\" +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                        \"Type \u0027/commands\u0027 to view the correct command for task creation! \";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                description \u003d task[1];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            String[] task \u003d message.split(\"deadline\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            if (task.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"Your deadline task has missing arguments and has an incorrect format. \" +"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                        \"The task cannot be created.\\n\" +"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                        \"Type \u0027/commands\u0027 to view the correct command for task creation! \";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else if (!task[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"Your deadline task does not have the correct format. The task cannot be created.\\n\" +"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                        \"Type \u0027/commands\u0027 to view the correct command for task creation!\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String[] taskInputArray \u003d task[1].split(\"/by\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                if (taskInputArray.length \u003d\u003d 0 || taskInputArray[0].isBlank()) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    String err \u003d \"Your deadline task is missing a description. \" +"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                            \"The task cannot be created. Please try again!\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else if (taskInputArray.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    String err \u003d \"Your deadline task is missing a time stamp. \" +"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                            \"The task cannot be created. Please try again!\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    description \u003d taskInputArray[0];"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    time \u003d taskInputArray[1];"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            String[] task \u003d message.split(\"event\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            if (task.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"Your event task has missing arguments and has an incorrect format. \" +"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                        \"The task cannot be created.\\n\" +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                        \"Type \u0027/commands\u0027 to view the correct command for task creation! \";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else if (!task[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String err \u003d \"Your event task does not have the correct format. The task cannot be created.\\n\" +"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                        \"Type \u0027/commands\u0027 to view the correct command for task creation!\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                String[] taskInputArray \u003d task[1].split(\"/at\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                if (taskInputArray.length \u003d\u003d 0 || taskInputArray[0].isBlank()) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    String err \u003d \"Your event task is missing a description. \" +"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                            \"The task cannot be created. Please try again!\";"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else if (taskInputArray.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    String err \u003d \"Your event task is missing a time stamp. \" +"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                            \"The task cannot be created. Please try again!\";"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    throw new InvalidTaskException(err);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    description \u003d taskInputArray[0];"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                    time \u003d taskInputArray[1];"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        taskInfo[0] \u003d taskType;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        taskInfo[1] \u003d description;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        taskInfo[2] \u003d time;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        return taskInfo;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void end() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        String divider \u003d \"----------------------------------------\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(\"  GoodBye and I hope to see you soon! Have a fantastic day! \");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 260,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        super(\"Oh no! \" + message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + this.at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 14
    }
  },
  {
    "path": "src/main/java/InvalidFunctionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "public class InvalidFunctionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public InvalidFunctionException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 6
    }
  },
  {
    "path": "src/main/java/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "public class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public InvalidTaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonasngs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "todo do cs2103T project"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "deadline finish week 2 requirements /by Monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "event cs2103T lecture /at Fri 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "blah"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "deadline finish week 1 post lecture quiz /by Saturday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "todo read up on week 2 topics"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "deadline eat /by"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "deadline /by Sunday"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jonasngs": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "jonasngs": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonasngs"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "jonasngs": 2
    }
  }
]
