[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private String ddl;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Deadline(String name, String ddl) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.ddl \u003d ddl;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[D][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String time \u003d String.format(\" (by: %s)\", ddl);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName() + time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static String logo \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                      \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Hello! This is Duke.\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Bye. Duke is always there for you!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static void error() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Sorry, I do not know what that means :(\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static void response() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (Parser.isExit(line)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            else if (line.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            else if (Parser.isList(line)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                ListFunction.printList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            else if (Parser.isDone(line)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    int index \u003d Integer.parseInt(line.substring(5));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    ListFunction.setDone(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    error();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            else if (Parser.isDelete(line)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    int index \u003d Integer.parseInt(line.substring(7));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    ListFunction.delete(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    error();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    TaskType type \u003d Parser.taskType(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    if (type \u003d\u003d TaskType.TODO)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                        ListFunction.add(type, Parser.getName(line));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                        ListFunction.add(type, Parser.getName(line), Parser.getTime(line));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                catch (NullPointerException"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                        | ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                        | InvalidParameterException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                    error();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        response();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 74,
      "-": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Event(String name, String eventTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[E][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String time \u003d String.format(\" (at: %s)\", eventTime);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName() + time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 15
    }
  },
  {
    "path": "src/main/java/ListFunction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class ListFunction {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void add(TaskType type, String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        Todo todo \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added the task:\\n\" + todo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void add(TaskType type, String taskName, String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added the task:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskName, time);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            System.out.println(deadline.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            Event event \u003d new Event(taskName, time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            System.out.println(event.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void setDone(int index) throws InvalidParameterException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (index \u003e taskList.size() || index \u003c\u003d 0)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Out of bound\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList.get(index - 1).setDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Well done! I\u0027ve marked this as done:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(taskList.get(index - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void delete(int index) throws InvalidParameterException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (index \u003e taskList.size() || index \u003c\u003d 0)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new InvalidParameterException(\"Out of bound\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(taskList.get(index - 1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        int n \u003d taskList.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (n \u003d\u003d 0)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            System.out.println(\"There is no task in the list :)\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d n; i++)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                System.out.println(i + \". \" + taskList.get(i - 1).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 61
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "import java.security.InvalidParameterException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isList(String line) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.equals(\"list\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isExit(String line) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.toLowerCase().contains(\"bye\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isDone(String line) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.length() \u003e\u003d 4 \u0026\u0026 line.substring(0, 4).equals(\"done\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static boolean isDelete(String line) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return line.length() \u003e\u003d 6 \u0026\u0026 line.substring(0, 6).equals(\"delete\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static TaskType taskType(String line) throws InvalidParameterException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (line.length() \u003e 8"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            \u0026\u0026 line.substring(0, 8).equals(\"deadline\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            \u0026\u0026 line.contains(\" /by \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        else if (line.length() \u003e 5"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.substring(0, 5).equals(\"event\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                \u0026\u0026 line.contains(\" /at \")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.EVENT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        else if (line.length() \u003e 4 \u0026\u0026 line.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            return TaskType.TODO;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        else throw new InvalidParameterException(\"Invalid input\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String getName(String line) throws NullPointerException{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (taskType(line) \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            name \u003d line.substring(5);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        else if (taskType(line) \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            name \u003d line.split(\" /by \")[0].substring(9);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            name \u003d line.split(\" /at \")[0].substring(6);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw new NullPointerException(\"Null Object\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        else return name;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public static String getTime(String line) throws ArrayIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            if (taskType(line) \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return line.split(\" /by \")[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "                return line.split(\" /at \")[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 68
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return this.getName();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 23
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        String status \u003d String.format(\"[T][%s] \", (super.done ? \"✓\" : \"✗\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "        return status + this.getName();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "event borrow book /at Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaohuanqdcn"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "zhaohuanqdcn": 3,
      "-": 20
    }
  }
]
