[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    // arraylist to store all text entered by user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public static ArrayList\u003cTask\u003e stored \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // displayed once main is run, without input from user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        String greetings \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            \"What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.out.println(greetings);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // continuously scan for input from user until \"bye\" is invoked"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            String trimmedInput \u003d input.trim(); // get rid of trailing spaces"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                processInput(trimmedInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.print(ex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    // method to find \"/\" substring index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public static int findSlashIndex(String input, int startingIndex) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        for (int i \u003d startingIndex; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            if (input.charAt(i) \u003d\u003d 47) { // char index 47 is \"/\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // if no slashes found"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        throw new DukeException(\"Please indicate:\\n\u0027/by\u0027 - for Deadline, or\\n\u0027/at\u0027 - for Event.\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    // method to mark task as done"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public static void markTaskDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        int taskNo \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // verify task number exists, then mark as done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        if (taskNo - 1 \u003c stored.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            if (stored.get(taskNo - 1).isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                // task marked as done already"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                throw new DukeException(\"Task is already done! :)\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                stored.get(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.println(stored.get(taskNo - 1).toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // task number does not exist"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            throw new DukeException(\"Sorry, this task does not exist!\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    // method to delete task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public static void deleteTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        int taskNo \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // verify task number exists, then delete"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        if (taskNo - 1 \u003c stored.size()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            Task toDelete \u003d stored.get(taskNo - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            stored.remove(taskNo - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(toDelete.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"Now you have \" + stored.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // task number does not exist"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            throw new DukeException(\"Sorry, this task does not exist!\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    // method to process user input to identify commands"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public static void processInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // print goodbye message"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            String goodbye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(goodbye);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // exits program"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // display list of items to user when requested with \"list\" command"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else if (input.startsWith(\"list\") \u0026\u0026 input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            for (int i \u003d 1; i \u003c stored.size() + 1; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                String item \u003d i + \".\" + stored.get(i - 1).toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.println(item);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // don\u0027t add new task, get task number to mark as done"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                markTaskDone(input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.print(ex); // catch if task does not exist"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else if (input.startsWith(\"delete\")) { // delete task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // don\u0027t add new task, get task number to delete task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                deleteTask(input);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.print(ex); // catch if task does not exist"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // add item to tasks stored (To-Do/Deadline/Event) depending on command keyword"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            if (input.startsWith(\"todo\")) { // is To-Do task"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                if (input.length() \u003e 4 \u0026\u0026 !Character.isWhitespace(input.charAt(4))) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    // is not \"todo\" command (e.g. \"todoo\")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else if (input.substring(4).length() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        Todo newTodo \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        stored.add(newTodo);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        throw new DukeException(\"Invalid input - please check if there are missing info.\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) { // is Deadline task"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                if (input.length() \u003e 8 \u0026\u0026 !Character.isWhitespace(input.charAt(8))) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    // is not \"deadline\" command (e.g. \"deadlines\")"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else if (input.substring(8).length() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        int slashIndex \u003d findSlashIndex(input, 9);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(input.substring(9, slashIndex - 1), input.substring(slashIndex + 4));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        stored.add(newDeadline);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        throw new DukeException(\"Invalid input - please check if there are too many redundant spaces.\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } else if (input.startsWith(\"event\")) { // is Event task"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                if (input.length() \u003e 5 \u0026\u0026 !Character.isWhitespace(input.charAt(5))) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    // is not \"event\" command (e.g. \"events\")"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else if (input.substring(5).length() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        int slashIndex \u003d findSlashIndex(input, 6);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        Event newEvent \u003d new Event(input.substring(6, slashIndex - 1), input.substring(slashIndex + 4));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        stored.add(newEvent);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        throw new DukeException(\"Invalid input - please check if there are too many redundant spaces.\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } else { // command is invalid"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // inform user item has been added"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(stored.get(stored.size() - 1).toString());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"Now you have \" + stored.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 163,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    // default error message + particular error message"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(\"[!] OOPS!!! \" + message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2717\"); // return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "event"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todoo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "event aa"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "deadline aa"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 23
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 3,
      "-": 37
    }
  }
]
