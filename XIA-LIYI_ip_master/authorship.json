[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 23,
      "-": 44
    }
  },
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "T,0,ls"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "T,0,ls"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ",0,Hi"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 3
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String byDateString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private LocalDate byDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Deadline(String taskContent, String byDateString) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.byDateString \u003d byDateString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Deadline(String taskContent, LocalDate byDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.byDate \u003d byDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (byDateString !\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return byDateString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 35
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Duke is a small educational project which acts"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * based on user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * @author Xia Liyi."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        storage \u003d new Storage(\"F:/XIA-LIYI/ip/src/main/data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList \u003d new TaskList(storage.getTaskList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Command cmd \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String res \u003d cmd.run(taskList, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            if (cmd.isBye()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 35
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Event(String taskContent, String eventTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.eventTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.eventTime + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 23
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                DialogBox.getDukeDialog(\"Hi!\", dukeImage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 54
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.AddEventCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.AddToDoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Parser deals with making sense of the user command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_ADD \u003d \"add\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static boolean isToDo(String commandType) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return commandType.equals(COMMAND_TODO);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static boolean isDeadline(String commandType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return commandType.equals(COMMAND_DEADLINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static boolean isEvent(String commandType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return commandType.equals(COMMAND_EVENT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String commandType \u003d inputArr[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String commandContent;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (commandType.equals(COMMAND_BYE)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else if (commandType.equals(COMMAND_LIST)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        assert inputArr.length \u003d\u003d 2 : \"No Available Condition for Operation!\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        commandContent \u003d inputArr[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (commandType.equals(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return new DoneCommand(commandContent);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else if (commandType.equals(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return new FindCommand(commandContent);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else if (commandType.equals(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return new DeleteCommand(commandContent);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else if (commandType.equals(COMMAND_TODO)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return new AddToDoCommand(commandContent);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else if (commandType.equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return new AddEventCommand(commandContent);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else if (commandType.equals(COMMAND_DEADLINE)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return new AddDeadlineCommand(commandContent);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return new AddCommand(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 74
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Storage deals with loading tasks from the file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * and saving tasks in the file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Storage(String path) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            this.file \u003d file;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            this.path \u003d path;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                this.file \u003d file;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                this.path \u003d path;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                System.out.println(\"Failed to create\" + this.path);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * This method wites all of tasks onto the disk."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void write(ArrayList\u003c? extends Task\u003e tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            FileWriter writer \u003d new FileWriter(path, false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String taskInfo \u003d task.getType() + \",\" + (task.isDone() ? 1 : 0)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        + \",\" + task.getContent();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                if (task.getDate() !\u003d \"\") {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    taskInfo \u003d taskInfo + \",\" + task.getDate();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                taskInfo \u003d taskInfo + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                writer.write(taskInfo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            System.out.println(\"Failed to write into \" + this.path);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * This method fetches all of tasks stored in disk."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * @return an ArrayList consisting of all of tasks stored in the duke.txt."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String taskContent \u003d sc.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String[] taskInfo \u003d taskContent.split(\",\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                if (taskInfo[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    ToDo task \u003d new ToDo(taskInfo[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    if (taskInfo[2].equals(\"1\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                } else if (taskInfo[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    Event task \u003d new Event(taskInfo[2], taskInfo[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                } else if (taskInfo[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    Deadline task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        LocalDate taskDeadline \u003d LocalDate.parse(taskInfo[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task \u003d new Deadline(taskInfo[2], taskDeadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task \u003d new Deadline(taskInfo[2], taskInfo[3]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            System.out.println(\"Failed to load\" + this.path);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 101
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String taskContent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Task(String taskContent) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskContent \u003d taskContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void test() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (taskContent.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.taskContent;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return \"[\" + \"\\u2713\" + \"] \" + this.taskContent;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return \"[\" + \"\\u2718\" + \"] \" + this.taskContent;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 40
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * TaskList contains the task list e.g.,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * it has operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public TaskList find(String condition) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            if (task.getContent().contains(condition)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                newTaskList.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return new TaskList(newTaskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 49
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ToDo(String taskContent) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 17
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Ui deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static void showLine(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String bye() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"See you again!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String addTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String getTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String res \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        for (Task task: taskList.getList()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            res +\u003d (num + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String doneTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String deleteTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + task.toString()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 38
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String commandContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public AddCommand(String commandContent) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.commandContent \u003d commandContent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        newTask \u003d new Task(commandContent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.addTask(newTask, taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String commandContent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public AddDeadlineCommand(String commandContent) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.commandContent \u003d commandContent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        int index \u003d commandContent.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String taskContent \u003d commandContent.substring(0, index - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String dateString \u003d commandContent.substring(index + 4);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            LocalDate taskDeadline \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            newTask \u003d new Deadline(taskContent, taskDeadline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            newTask \u003d new Deadline(taskContent, dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.addTask(newTask, taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String commandContent;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public AddEventCommand(String commandContent) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.commandContent \u003d commandContent;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        int index \u003d commandContent.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String taskContent \u003d commandContent.substring(0, index - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String taskTime \u003d commandContent.substring(index + 4);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        newTask \u003d new Event(taskContent, taskTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.addTask(newTask, taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String commandContent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public AddToDoCommand(String commandContent) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.commandContent \u003d commandContent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        newTask \u003d new ToDo(commandContent);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.addTask(newTask, taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        storage.write(taskList.getList());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.bye();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public abstract String run(TaskList taskList, Storage storage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 13
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public DeleteCommand(String taskIndex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskIndex \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Task currentTask \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.deleteTask(currentTask, taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public DoneCommand(String taskIndex) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskIndex \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Task currentTask \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        currentTask.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.doneTask(currentTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String findCondition;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public FindCommand(String findCondition) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.findCondition \u003d findCondition;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.getTasks(taskList.find(findCondition));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 17
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.getTasks(taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public DukeException(String errMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String ERROR_MSG \u003d \"Sorry! The input is not valid.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(ERROR_MSG);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public InvalidInputException(String errMsg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 11
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 19
    }
  },
  {
    "path": "src/test/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task toDo \u003d new ToDo(\"Read Book\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task event \u003d new Event(\"Project Meeting\", \"today\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task deadline \u003d new Deadline(\"Return Book\", \"2020-09-01\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void ToDoTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        assertEquals(\"Read Book\", toDo.getTask());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void EventTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        assertEquals(\"today\", event.getDate());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void DeadlineTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        assertEquals(\"Sep 9, 2020\", deadline.getDate());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 1,
      "-": 20
    }
  }
]
