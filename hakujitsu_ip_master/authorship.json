[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Deadline(String name, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        String catLogo \u003d \"        /\\\\_____/\\\\\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"       /  o   o  \\\\\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"      ( \u003d\u003d  ^  \u003d\u003d )\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"       )         (\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"      (           )\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"     ( (  )   (  ) )\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                \"    (__(__)___(__)__)\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(catLogo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m NEKOBOT!!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    What can I do for you :\u003e\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        DukeLogic commandHandler \u003d new DukeLogic();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        while(!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            commandHandler.executeCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Bye~ Hope to see you again soon ;w;\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 30,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(\"Oh noes! \" + errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 5
    }
  },
  {
    "path": "src/main/java/DukeLogic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class DukeLogic {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public DukeLogic(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public void executeCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            if(command.equals(\"list\")){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                printTaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            } else if (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                completeTask(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\")){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                deleteTask(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            } else if (validAddTaskCommand(command)){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                addTask(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                throw new UnknownCommandException(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    Oh noes! I\u0027m not sure what that means ;A;\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (IncompleteTaskException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    Oh dear! Your task description seems to be incomplete :\u003c\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (InvalidTaskException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    Oh noes! I don\u0027t think you specified a valid task index :\u003c\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private void printTaskList(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list!!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        for(Task task: this.taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    \" + index + \". \" + task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private void completeTask(String command) throws InvalidTaskException  {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        if (command.length() \u003c 5) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"No task index specified\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            int index \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            if(index \u003e this.taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                throw new InvalidTaskException(\"Invalid task index specified\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            Task task \u003d this.taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"     Yay! I\u0027ve marked this task as done :3\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"Invalid task index specified\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private void deleteTask(String command) throws InvalidTaskException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        if (command.length() \u003c 7) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"No task index specified\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            int index \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            if(index \u003e this.taskList.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                throw new InvalidTaskException(\"Invalid task index specified\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            Task task \u003d this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"     Got it! I\u0027ll remove this task :\u003e\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"     Only \" + this.taskList.size() + \" tasks left!!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            throw new InvalidTaskException(\"Invalid task index specified\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private boolean validAddTaskCommand(String command){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return command.split(\" \")[0].equals(\"todo\") || command.split(\" \")[0].equals(\"deadline\") ||"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                command.split(\" \")[0].equals(\"event\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    private void addTask(String command) throws IncompleteTaskException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        String typeOfTask \u003d command.split(\" \")[0];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        switch (typeOfTask) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                if (command.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    throw new IncompleteTaskException(\"Incomplete Todo description\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                this.taskList.add(new Todo(command.substring(5)));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                if (!command.contains(\"/at\") || (command.indexOf(\"event \") + 6 \u003e command.indexOf(\" /at\"))) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    throw new IncompleteTaskException(\"Incomplete Event description\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                String taskName \u003d command.substring(command.indexOf(\"event \") + 6, command.indexOf(\" /at\"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                String taskDate \u003d command.substring(command.indexOf(\"/at \") + 4);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                this.taskList.add(new Event(taskName, taskDate));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                if (!command.contains(\"/by\") || (command.indexOf(\"deadline \") + 9 \u003e command.indexOf(\" /by\"))) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                    throw new IncompleteTaskException(\"Incomplete Deadline description\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                String taskName \u003d command.substring(command.indexOf(\"deadline \") + 9, command.indexOf(\" /by\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                String taskDate \u003d command.substring(command.indexOf(\"/by \") + 4);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                this.taskList.add(new Deadline(taskName, taskDate));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Okies! I\u0027ve added this task~\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"       \" + this.taskList.get(this.taskList.size() - 1));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"     Now you have \" + this.taskList.size() + \" tasks in the list uwu\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 133
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Event(String name, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 12
    }
  },
  {
    "path": "src/main/java/IncompleteTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class IncompleteTaskException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public IncompleteTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public InvalidTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected boolean completionStatus;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.completionStatus \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Task markAsDone(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        this.completionStatus \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return (completionStatus ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.taskName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 9
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    public UnknownCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "hewwo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "todo exercise"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "deadline /by 10 Aug"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "deadline finish nekobot /by 20 Aug"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "event /at tonight"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "event sleep /at tonight"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "delete 9"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 23
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hakujitsu"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hakujitsu": 1,
      "-": 37
    }
  }
]
