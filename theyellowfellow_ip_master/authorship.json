[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"# Duke.TaskList.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.TaskList.Duke.java` file, right-click it, and choose `Run Duke.TaskList.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"theyellowfellow":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"theyellowfellow"},"content":"    mainClassName \u003d \"GUI.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"theyellowfellow"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"theyellowfellow":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":"Duke is a desktop dog to help you manage tasks in the form of todos, deadlines and events. It is optimised for use via Command Line Interface (CLI). If you can type fast, Duke can help you record your tasks faster than with a traditional GUI."},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"![Image of Duke](Ui.png)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"1. [Accessing the User Guide from the App](#opening-the-user-guide-ug)"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"2. [Viewing help](#viewing-help-help)"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"3. [Add a new Todo](#add-a-new-todo-todo)"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"4. [Add a new Event](#add-a-new-event-at)"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"5. [Add a new Deadline](#add-a-new-deadline-by)"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"6. [List out current tasks](#list-out-current-tasks-list)"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"7. [Search for task](#search-for-a-task-using-a-keyword-find)"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"8. [Delete a task](#delete-a-task-by-index-delete)"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"9. [Mark a task as done](#mark-a-task-as-done-by-index-done)"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"10. [Update a task](#update-a-task-by-index-update)"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"11. [Save and close the app](#save-list-and-close-the-app-bye)"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"### Opening the User Guide: `UG`"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"Opens the User Guide in your default Web Browser."},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"Format: `/UG`"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"* Any text before and after the command is ignored."},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"### Viewing help: `help`"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"Displays features and the commands needed to use them."},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":"  "},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":"Format: `/help`"},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":"* Instructions will be displayed in the following format"},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"  * `GENERAL DESCRIPTION: USER_INPUT`."},{"lineNumber":41,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  "},{"lineNumber":43,"author":{"gitId":"theyellowfellow"},"content":"### Add a new ToDo: `todo`"},{"lineNumber":44,"author":{"gitId":"theyellowfellow"},"content":"Adds a new ToDo task to the list."},{"lineNumber":45,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":46,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":47,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":48,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":49,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":50,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":51,"author":{"gitId":"theyellowfellow"},"content":"  "},{"lineNumber":52,"author":{"gitId":"theyellowfellow"},"content":"Format: `/todo TASK`"},{"lineNumber":53,"author":{"gitId":"theyellowfellow"},"content":"* Adds a ToDo with TASK as the text."},{"lineNumber":54,"author":{"gitId":"theyellowfellow"},"content":"* The ToDo will be marked as undone (`[Not barked yet]`)."},{"lineNumber":55,"author":{"gitId":"theyellowfellow"},"content":"* TASK cannot be empty."},{"lineNumber":56,"author":{"gitId":"theyellowfellow"},"content":"* Text before the \"/\" will be ignored."},{"lineNumber":57,"author":{"gitId":"theyellowfellow"},"content":"* Will be displayed as `TASK`."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"theyellowfellow"},"content":"Examples:"},{"lineNumber":60,"author":{"gitId":"theyellowfellow"},"content":"* `/todo Implement better GUI for CS2103t iP`"},{"lineNumber":61,"author":{"gitId":"theyellowfellow"},"content":"* `/todo Head to the gym`"},{"lineNumber":62,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"theyellowfellow"},"content":"### Add a new Event: `at`"},{"lineNumber":65,"author":{"gitId":"theyellowfellow"},"content":"Adds a new Event task to the list."},{"lineNumber":66,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":67,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":68,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":69,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":70,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":71,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":72,"author":{"gitId":"theyellowfellow"},"content":"  "},{"lineNumber":73,"author":{"gitId":"theyellowfellow"},"content":"Format:`TASK /at START_DATETIME END_DATETIME`"},{"lineNumber":74,"author":{"gitId":"theyellowfellow"},"content":"* Adds a Event with TASK as text, and START_DATETIME and END_DATETIME as the start and end of said event."},{"lineNumber":75,"author":{"gitId":"theyellowfellow"},"content":"* The Event ToDo will be marked as undone (`[Not barked yet]`)"},{"lineNumber":76,"author":{"gitId":"theyellowfellow"},"content":"* TASK cannot be empty."},{"lineNumber":77,"author":{"gitId":"theyellowfellow"},"content":"* START_DATETIME and END_DATETIME have to be in the format **`yyyy-MM-dd HHmm`** where HHmm refers to time in **24-hour** format."},{"lineNumber":78,"author":{"gitId":"theyellowfellow"},"content":"* Will be displayed as `TASK (at: START_DATETIME to END_DATETIME)` with START_DATETIME and END_DATETIME in the format of `dd-MM-yyyy HHmm`."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"theyellowfellow"},"content":"Examples:"},{"lineNumber":81,"author":{"gitId":"theyellowfellow"},"content":"* `Night cycling /at 2020-09-19 0200 2020-09-19 0800`"},{"lineNumber":82,"author":{"gitId":"theyellowfellow"},"content":"* `Arts Council meeting /at 2020-09-15 2100 2020-09-16 0030`"},{"lineNumber":83,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"theyellowfellow"},"content":"### Add a new Deadline: `by`"},{"lineNumber":86,"author":{"gitId":"theyellowfellow"},"content":"Adds a new Deadline task to the list."},{"lineNumber":87,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":88,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":89,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":90,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":91,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":92,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"theyellowfellow"},"content":"Format: `TASK /by DUE_DATETIME`"},{"lineNumber":95,"author":{"gitId":"theyellowfellow"},"content":"* Adds a Deadline with TASK as the text, and DUE_DATETIME as the due date of the task."},{"lineNumber":96,"author":{"gitId":"theyellowfellow"},"content":"* The Deadline will be marked as undone (`[Not barked yet]`)."},{"lineNumber":97,"author":{"gitId":"theyellowfellow"},"content":"* TASK cannot be empty."},{"lineNumber":98,"author":{"gitId":"theyellowfellow"},"content":"* DUE_DATETIME has to be in the format **`yyyy-MM-dd HHmm`** where HHmm refers to time in **24-hour** format."},{"lineNumber":99,"author":{"gitId":"theyellowfellow"},"content":"* Will be displayed as `TASK (by DUE_DATETIME)`, with DUE_DATETIME in the format of `DAY dd-MM-yyyy HHmm`."},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"theyellowfellow"},"content":"Examples:"},{"lineNumber":102,"author":{"gitId":"theyellowfellow"},"content":"* `Finish User Guide /by 2020-18-09 2230`"},{"lineNumber":103,"author":{"gitId":"theyellowfellow"},"content":"* `Write essay /by 2020-12-09 2359`"},{"lineNumber":104,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"theyellowfellow"},"content":"### List out current tasks: `list`"},{"lineNumber":107,"author":{"gitId":"theyellowfellow"},"content":"Lists out tasks currently in the app."},{"lineNumber":108,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":109,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":110,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":111,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":112,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":113,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":114,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":115,"author":{"gitId":"theyellowfellow"},"content":"Format: `/list`"},{"lineNumber":116,"author":{"gitId":"theyellowfellow"},"content":"* DONE_STATUS refers to whether a task is done (`Barked`) or undone (`Not barked yet`)."},{"lineNumber":117,"author":{"gitId":"theyellowfellow"},"content":"* Todos will be displayed as `INDEX [T] [DONE_STATUS] TASK`."},{"lineNumber":118,"author":{"gitId":"theyellowfellow"},"content":"* Events will be displayed as `INDEX [E] [DONE_STATUS] TASK (at: START_DATETIME to END_DATETIME)`."},{"lineNumber":119,"author":{"gitId":"theyellowfellow"},"content":"* Deadlines will be displayed as `INDEX [D] [DONE_STATUS] TASK (by: DUE_DATETIME)`."},{"lineNumber":120,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":121,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":122,"author":{"gitId":"theyellowfellow"},"content":"### Search for a Task using a keyword: `find`"},{"lineNumber":123,"author":{"gitId":"theyellowfellow"},"content":"Displayes all tasks containing a specific keyword."},{"lineNumber":124,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":125,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":126,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":127,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":128,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":129,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":130,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":131,"author":{"gitId":"theyellowfellow"},"content":"Format: `/find KEYWORD`"},{"lineNumber":132,"author":{"gitId":"theyellowfellow"},"content":"* Searches lists of tasks and displays any task that contains KEYWORD."},{"lineNumber":133,"author":{"gitId":"theyellowfellow"},"content":"* KEYWORD cannot be empty."},{"lineNumber":134,"author":{"gitId":"theyellowfellow"},"content":"* KEYWORD is not case-specific."},{"lineNumber":135,"author":{"gitId":"theyellowfellow"},"content":"* \" \" can be a KEYWORD."},{"lineNumber":136,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":137,"author":{"gitId":"theyellowfellow"},"content":"Examples:"},{"lineNumber":138,"author":{"gitId":"theyellowfellow"},"content":"* `/find submit`"},{"lineNumber":139,"author":{"gitId":"theyellowfellow"},"content":"* `/find Arts`"},{"lineNumber":140,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":141,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":142,"author":{"gitId":"theyellowfellow"},"content":"### Delete a Task by index: `delete`"},{"lineNumber":143,"author":{"gitId":"theyellowfellow"},"content":"Deletes a task by its number within the list."},{"lineNumber":144,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":145,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":146,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":147,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":148,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":149,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":150,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":151,"author":{"gitId":"theyellowfellow"},"content":"Format: `/delete INDEX`"},{"lineNumber":152,"author":{"gitId":"theyellowfellow"},"content":"* Deletes a task by its number within the list."},{"lineNumber":153,"author":{"gitId":"theyellowfellow"},"content":"* INDEX has to be the number of an existing task."},{"lineNumber":154,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":155,"author":{"gitId":"theyellowfellow"},"content":"Examples:"},{"lineNumber":156,"author":{"gitId":"theyellowfellow"},"content":"* `/delete 1` - this would delete the first task on the list."},{"lineNumber":157,"author":{"gitId":"theyellowfellow"},"content":"* `/delete 3` - this would delete the third task on the list."},{"lineNumber":158,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":159,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":160,"author":{"gitId":"theyellowfellow"},"content":"### Mark a task as done by index: `done`"},{"lineNumber":161,"author":{"gitId":"theyellowfellow"},"content":"Marks a task as done by its number within the list."},{"lineNumber":162,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":163,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":164,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":165,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":166,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":167,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":168,"author":{"gitId":"theyellowfellow"},"content":"  "},{"lineNumber":169,"author":{"gitId":"theyellowfellow"},"content":"Format: `/done INDEX`"},{"lineNumber":170,"author":{"gitId":"theyellowfellow"},"content":"* Marks a task as done (`[Barked]`) by its number within the list."},{"lineNumber":171,"author":{"gitId":"theyellowfellow"},"content":"* INDEX has to be the number of an existing task."},{"lineNumber":172,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":173,"author":{"gitId":"theyellowfellow"},"content":"Examples:"},{"lineNumber":174,"author":{"gitId":"theyellowfellow"},"content":"* `/done 1` - this would mark the first task on the list as done."},{"lineNumber":175,"author":{"gitId":"theyellowfellow"},"content":"* `/done 3` - this would mark the third task on the list as done."},{"lineNumber":176,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":177,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":178,"author":{"gitId":"theyellowfellow"},"content":"### Update a task by index: `update`"},{"lineNumber":179,"author":{"gitId":"theyellowfellow"},"content":"Updates the display text of a task within the list."},{"lineNumber":180,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":181,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":182,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":183,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":184,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":185,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":186,"author":{"gitId":"theyellowfellow"},"content":"  "},{"lineNumber":187,"author":{"gitId":"theyellowfellow"},"content":"Format: `/update INDEX NEW_TEXT`"},{"lineNumber":188,"author":{"gitId":"theyellowfellow"},"content":"* Updates task INDEX on the list to display NEW_TEXT."},{"lineNumber":189,"author":{"gitId":"theyellowfellow"},"content":"* Does not change Task type or status."},{"lineNumber":190,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":191,"author":{"gitId":"theyellowfellow"},"content":"Examples:"},{"lineNumber":192,"author":{"gitId":"theyellowfellow"},"content":"* `/update 1 Submit photos to National Geographic`"},{"lineNumber":193,"author":{"gitId":"theyellowfellow"},"content":"* `/udpate 3 Do CS2103t Continuous Integration`"},{"lineNumber":194,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"},{"lineNumber":195,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":196,"author":{"gitId":"theyellowfellow"},"content":"### Save list and close the app: `bye`"},{"lineNumber":197,"author":{"gitId":"theyellowfellow"},"content":"Closes the app and saves the list."},{"lineNumber":198,"author":{"gitId":"theyellowfellow"},"content":"\u003cdetails\u003e"},{"lineNumber":199,"author":{"gitId":"theyellowfellow"},"content":"  \u003csummary\u003e"},{"lineNumber":200,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":201,"author":{"gitId":"theyellowfellow"},"content":"    Usage"},{"lineNumber":202,"author":{"gitId":"theyellowfellow"},"content":"    "},{"lineNumber":203,"author":{"gitId":"theyellowfellow"},"content":"  \u003c/summary\u003e"},{"lineNumber":204,"author":{"gitId":"theyellowfellow"},"content":"  "},{"lineNumber":205,"author":{"gitId":"theyellowfellow"},"content":"Format: `/bye`"},{"lineNumber":206,"author":{"gitId":"theyellowfellow"},"content":"* Closes the app and saves the list in the save directory as the app."},{"lineNumber":207,"author":{"gitId":"theyellowfellow"},"content":"* If closed without this command, changes to the list will **not** be saved."},{"lineNumber":208,"author":{"gitId":"theyellowfellow"},"content":"* Any words before and after the command is ignored."},{"lineNumber":209,"author":{"gitId":"theyellowfellow"},"content":"\u003c/details\u003e"}],"authorContributionMap":{"theyellowfellow":197,"-":12}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import Duke.UI.UI;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import Duke.commands.Parser;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"     * Gets a response from Duke given the"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"     * @param input"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"     * @return"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"    public String getResponse(String input) {"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"        if (input.equals(\"/bye\")) {"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"            return \"Bark bark! (Goodbye!)\";"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"            return Parser.parseAndAddToList(input);"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"        } catch (DukeExceptions e) {"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"            return e.getMessage();"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"    public static String getGreeting() {"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"        return UI.getMessage(\"WELCOME_MSG\") + \"\\n\";"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"theyellowfellow":25,"-":2}},{"path":"src/main/java/Duke/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"public class DukeExceptions extends Exception {"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"    public DukeExceptions(String message) {"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":7}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.tasks.Task;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"    private static File tmpFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"List.txt\");"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"    private static FileWriter writer;"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"    private static ArrayList\u003cTask\u003e taskList;"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"     * Creates a new File called List.txt in the same directory as the jar file"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"    public static void createNewFile() {"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"            if (!tmpFile.exists()) {"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"                tmpFile.createNewFile();"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"        } catch (IOException e) {"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"     * Returns the tmpFile"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"     * @return"},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"    public static File getTmpFile() {"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":"        return tmpFile;"},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":"     * Saves the list of thingsOnList to the file"},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":"    public static void writeToFile() {"},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"theyellowfellow"},"content":"            taskList \u003d TaskList.getThingsOnList();"},{"lineNumber":42,"author":{"gitId":"theyellowfellow"},"content":"            writer \u003d new FileWriter(tmpFile);"},{"lineNumber":43,"author":{"gitId":"theyellowfellow"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":44,"author":{"gitId":"theyellowfellow"},"content":"                writer.write(taskList.get(i).getFullText() + \"\\n\");"},{"lineNumber":45,"author":{"gitId":"theyellowfellow"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"theyellowfellow"},"content":"            writer.close();"},{"lineNumber":47,"author":{"gitId":"theyellowfellow"},"content":"            System.out.println(\"List Saved!\");"},{"lineNumber":48,"author":{"gitId":"theyellowfellow"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"theyellowfellow"},"content":"            System.out.println(\"Sorry, I couldn\u0027t save that list before closing.\");"},{"lineNumber":50,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":52}},{"path":"src/main/java/Duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke.TaskList;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import Duke.DukeExceptions;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.tasks.ToDos;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.tasks.Deadline;"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"import java.awt.Desktop;"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"import java.net.URI;"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"import java.net.URISyntaxException;"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"    private static ArrayList\u003cTask\u003e thingsOnList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"     * Returns size of current list of tasks."},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"     * @return size of current list of tasks."},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"    public static int getThingsOnListSize() {"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"        return thingsOnList.size();"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"     * Adds a task to list."},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"     * @param task"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"    private static String addToList(Task task) {"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"        thingsOnList.add(task);"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":"        return \"Bark. Bork: bark bark woof. (Roger. I\u0027ve added this task:\\n\" +"},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"                getLastTask() + \"\\n\" +"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":"                \"Now you have \" + getThingsOnListSize() + \" tasks in the list.)\";"},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":"     * Deletes the xth task from the list."},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"     * @param cmd String that determines which task to delete"},{"lineNumber":41,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"theyellowfellow"},"content":"    public static String deleteFromList(String cmd) throws DukeExceptions {"},{"lineNumber":43,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"theyellowfellow"},"content":"            int x \u003d Integer.parseInt(cmd.substring(\"/delete\".length() + 1));"},{"lineNumber":45,"author":{"gitId":"theyellowfellow"},"content":"            String delString \u003d \"Bark bark: bork bark. (Removing task: \" + thingsOnList.get(x - 1) + \".\";"},{"lineNumber":46,"author":{"gitId":"theyellowfellow"},"content":"            thingsOnList.remove(x - 1);"},{"lineNumber":47,"author":{"gitId":"theyellowfellow"},"content":"            return delString;"},{"lineNumber":48,"author":{"gitId":"theyellowfellow"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions(\"Woof? (This task doesn\u0027t exist?)\");"},{"lineNumber":50,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":53,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"theyellowfellow"},"content":"     * Retrieves a help statement to guide users on the types of commands"},{"lineNumber":55,"author":{"gitId":"theyellowfellow"},"content":"     * @return String containing all the commands"},{"lineNumber":56,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"theyellowfellow"},"content":"    public static String getHelp() {"},{"lineNumber":58,"author":{"gitId":"theyellowfellow"},"content":"        String newLine \u003d System.getProperty(\"line.separator\");"},{"lineNumber":59,"author":{"gitId":"theyellowfellow"},"content":"        return \"Commands:\" + newLine + \"ACCESS USER GUIDE: /UG\" + newLine + \"ADD NEW TODO: /todo *Thing to do*\" +"},{"lineNumber":60,"author":{"gitId":"theyellowfellow"},"content":"                newLine + \"ADD NEW EVENT: *task* /at  *(start in yyyy-MM-dd HHmm) (end in yyyy-MM-dd HHmm)*\""},{"lineNumber":61,"author":{"gitId":"theyellowfellow"},"content":"                + newLine + \"ADD NEW DEADLINE: *task* /by *deadline in yyyy-MM-dd HHmm*\" + newLine +"},{"lineNumber":62,"author":{"gitId":"theyellowfellow"},"content":"                \"DISPLAY LIST: /list\" + newLine + \"SEARCH FOR A KEYWORD: \" + \"/find *text to search for*\" +"},{"lineNumber":63,"author":{"gitId":"theyellowfellow"},"content":"                newLine + \"DELETE A TASK: /delete *index of task to delete*\" + newLine +"},{"lineNumber":64,"author":{"gitId":"theyellowfellow"},"content":"                \"MARK A TASK AS DONE: /done *index of task finished\" + newLine + \"UPDATE A TASK: \" +"},{"lineNumber":65,"author":{"gitId":"theyellowfellow"},"content":"                \"/update *index of task to update* *updated content of task*\" + newLine + \"SAVE AND CLOSE: /bye\";"},{"lineNumber":66,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":68,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"theyellowfellow"},"content":"     * Adds a task of type ToDo given the input"},{"lineNumber":70,"author":{"gitId":"theyellowfellow"},"content":"     * @param input content of todo"},{"lineNumber":71,"author":{"gitId":"theyellowfellow"},"content":"     * @return acknowledgement that todo has been added"},{"lineNumber":72,"author":{"gitId":"theyellowfellow"},"content":"     * @throws DukeExceptions"},{"lineNumber":73,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"theyellowfellow"},"content":"    public static String addToDo(String input) throws DukeExceptions {"},{"lineNumber":75,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"theyellowfellow"},"content":"            return addToList(new ToDos(input));"},{"lineNumber":77,"author":{"gitId":"theyellowfellow"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions("},{"lineNumber":79,"author":{"gitId":"theyellowfellow"},"content":"                    \"Bark (Please make sure format of Date/Time is yyyy-MM-dd HHmm)\");"},{"lineNumber":80,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":83,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"theyellowfellow"},"content":"     * Adds a task of type Event"},{"lineNumber":85,"author":{"gitId":"theyellowfellow"},"content":"     * @param input content of event"},{"lineNumber":86,"author":{"gitId":"theyellowfellow"},"content":"     * @return acknowledgement that event has been added"},{"lineNumber":87,"author":{"gitId":"theyellowfellow"},"content":"     * @throws DukeExceptions"},{"lineNumber":88,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"theyellowfellow"},"content":"    public static String addEvent(String input) throws DukeExceptions {"},{"lineNumber":90,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":91,"author":{"gitId":"theyellowfellow"},"content":"            return addToList(new Event(input));"},{"lineNumber":92,"author":{"gitId":"theyellowfellow"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"},{"lineNumber":93,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions("},{"lineNumber":94,"author":{"gitId":"theyellowfellow"},"content":"                    \"Bark (Please make sure format of Date/Time is yyyy-MM-dd HHmm)\");"},{"lineNumber":95,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":98,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"theyellowfellow"},"content":"     * Adds a task of type Deadline"},{"lineNumber":100,"author":{"gitId":"theyellowfellow"},"content":"     * @param input content of deadline"},{"lineNumber":101,"author":{"gitId":"theyellowfellow"},"content":"     * @return acknowledgement that deadline has been added"},{"lineNumber":102,"author":{"gitId":"theyellowfellow"},"content":"     * @throws DukeExceptions"},{"lineNumber":103,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"theyellowfellow"},"content":"    public static String addDeadline(String input) throws DukeExceptions {"},{"lineNumber":105,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":106,"author":{"gitId":"theyellowfellow"},"content":"            return addToList(new Deadline(input));"},{"lineNumber":107,"author":{"gitId":"theyellowfellow"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"},{"lineNumber":108,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions("},{"lineNumber":109,"author":{"gitId":"theyellowfellow"},"content":"                    \"Bark (Please make sure format of Date/Time is yyyy-MM-dd HHmm)\");"},{"lineNumber":110,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":113,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"theyellowfellow"},"content":"     * Gets the last task from the list."},{"lineNumber":115,"author":{"gitId":"theyellowfellow"},"content":"     * @return last task on list."},{"lineNumber":116,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"theyellowfellow"},"content":"    public static Task getLastTask() {"},{"lineNumber":118,"author":{"gitId":"theyellowfellow"},"content":"        return thingsOnList.get(thingsOnList.size() - 1);"},{"lineNumber":119,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":121,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"theyellowfellow"},"content":"     * Returns an ArrayList of the list."},{"lineNumber":123,"author":{"gitId":"theyellowfellow"},"content":"     * @return ArrayList of tasks on the list."},{"lineNumber":124,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"theyellowfellow"},"content":"    public static ArrayList\u003cTask\u003e getThingsOnList() {"},{"lineNumber":126,"author":{"gitId":"theyellowfellow"},"content":"        return thingsOnList;"},{"lineNumber":127,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":129,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"theyellowfellow"},"content":"     * Marks task x as done."},{"lineNumber":131,"author":{"gitId":"theyellowfellow"},"content":"     * @param cmd the task to be marked as done."},{"lineNumber":132,"author":{"gitId":"theyellowfellow"},"content":"     * @return acknowledgement that the task has been completed"},{"lineNumber":133,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"theyellowfellow"},"content":"    public static String markDone(String cmd) throws DukeExceptions {"},{"lineNumber":135,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":136,"author":{"gitId":"theyellowfellow"},"content":"            int x \u003d Integer.parseInt(cmd.substring(6));"},{"lineNumber":137,"author":{"gitId":"theyellowfellow"},"content":"            thingsOnList.get(x - 1).markAsDone();"},{"lineNumber":138,"author":{"gitId":"theyellowfellow"},"content":"            return getListView() + \"BARK BARK!!! (Task \" + x + \" marked as done!!!)\";"},{"lineNumber":139,"author":{"gitId":"theyellowfellow"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":140,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions(\"Woof? (This task doesn\u0027t exist?)\");"},{"lineNumber":141,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":144,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"theyellowfellow"},"content":"     * updates the text of a given task"},{"lineNumber":146,"author":{"gitId":"theyellowfellow"},"content":"     * @param cmd contains both the index of the task to update, as well as the update text"},{"lineNumber":147,"author":{"gitId":"theyellowfellow"},"content":"     * @return acknowledgement that"},{"lineNumber":148,"author":{"gitId":"theyellowfellow"},"content":"     * @throws DukeExceptions"},{"lineNumber":149,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"theyellowfellow"},"content":"    public static String update(String cmd) throws DukeExceptions {"},{"lineNumber":151,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":152,"author":{"gitId":"theyellowfellow"},"content":"            String withoutCommand \u003d cmd.substring(\"update\".length() + 2);"},{"lineNumber":153,"author":{"gitId":"theyellowfellow"},"content":"            int spaceIndex \u003d withoutCommand.indexOf(\" \");"},{"lineNumber":154,"author":{"gitId":"theyellowfellow"},"content":"            int x \u003d Integer.parseInt(withoutCommand.substring(0, spaceIndex));"},{"lineNumber":155,"author":{"gitId":"theyellowfellow"},"content":"            String newTask \u003d withoutCommand.substring(spaceIndex + 1);"},{"lineNumber":156,"author":{"gitId":"theyellowfellow"},"content":"            thingsOnList.get(x - 1).update(newTask);"},{"lineNumber":157,"author":{"gitId":"theyellowfellow"},"content":"            return \"Bark bark: (bark) (Message \" + x + \" updated to: \" + newTask + \")\";"},{"lineNumber":158,"author":{"gitId":"theyellowfellow"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":159,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions(\"Woof? (This task doesn\u0027t exist?)\");"},{"lineNumber":160,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":163,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"theyellowfellow"},"content":"     * Converts list into a string representation"},{"lineNumber":165,"author":{"gitId":"theyellowfellow"},"content":"     * @return String form of the list of thingsOnList."},{"lineNumber":166,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"theyellowfellow"},"content":"    public static String getListView() {"},{"lineNumber":168,"author":{"gitId":"theyellowfellow"},"content":"        String list \u003d \"\";"},{"lineNumber":169,"author":{"gitId":"theyellowfellow"},"content":"        if (thingsOnList.size() \u003d\u003d 0) {"},{"lineNumber":170,"author":{"gitId":"theyellowfellow"},"content":"            list \u003d \"Bark bark. (No tasks right now.)\";"},{"lineNumber":171,"author":{"gitId":"theyellowfellow"},"content":"        } else {"},{"lineNumber":172,"author":{"gitId":"theyellowfellow"},"content":"            list +\u003d \"BARK WOOF: (You have these tasks currently: )\\n\";"},{"lineNumber":173,"author":{"gitId":"theyellowfellow"},"content":"            for (int i \u003d 0; i \u003c thingsOnList.size(); i++) {"},{"lineNumber":174,"author":{"gitId":"theyellowfellow"},"content":"                list +\u003d (i + 1) + \". \" + thingsOnList.get(i) + \"\\n\";"},{"lineNumber":175,"author":{"gitId":"theyellowfellow"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"theyellowfellow"},"content":"        return list;"},{"lineNumber":178,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":180,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"theyellowfellow"},"content":"     * Opens the github readme on the default browser"},{"lineNumber":182,"author":{"gitId":"theyellowfellow"},"content":"     * @return Message depending on success or failure of opening the site."},{"lineNumber":183,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"theyellowfellow"},"content":"    public static String getUG() {"},{"lineNumber":185,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":186,"author":{"gitId":"theyellowfellow"},"content":"            String UG \u003d \"https://theyellowfellow.github.io/ip/\";"},{"lineNumber":187,"author":{"gitId":"theyellowfellow"},"content":"            if (System.getProperty(\"os.name\").contains(\"Windows\")) {"},{"lineNumber":188,"author":{"gitId":"theyellowfellow"},"content":"                Desktop desktop \u003d java.awt.Desktop.getDesktop();"},{"lineNumber":189,"author":{"gitId":"theyellowfellow"},"content":"                URI userGuideSite \u003d new URI(UG);"},{"lineNumber":190,"author":{"gitId":"theyellowfellow"},"content":"                desktop.browse(userGuideSite);"},{"lineNumber":191,"author":{"gitId":"theyellowfellow"},"content":"            } else {"},{"lineNumber":192,"author":{"gitId":"theyellowfellow"},"content":"                Runtime runtime \u003d Runtime.getRuntime();"},{"lineNumber":193,"author":{"gitId":"theyellowfellow"},"content":"                runtime.exec(\"xdg-open \" + UG);"},{"lineNumber":194,"author":{"gitId":"theyellowfellow"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"theyellowfellow"},"content":"        } catch (IOException | URISyntaxException e) {"},{"lineNumber":196,"author":{"gitId":"theyellowfellow"},"content":"            return \"Bark. (Sorry, we couldn\u0027t open the website.)\";"},{"lineNumber":197,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"theyellowfellow"},"content":"        return \"Bark bark!! (User Guide opened!!)\";"},{"lineNumber":199,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":201,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"theyellowfellow"},"content":"     * Searches the list for the key word, and prints a new list containing tasks with the key word."},{"lineNumber":203,"author":{"gitId":"theyellowfellow"},"content":"     * @param input Contains key word for the search"},{"lineNumber":204,"author":{"gitId":"theyellowfellow"},"content":"     * @return Tasks which match the keyword"},{"lineNumber":205,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"theyellowfellow"},"content":"    public static String find (String input) throws DukeExceptions {"},{"lineNumber":207,"author":{"gitId":"theyellowfellow"},"content":"        String keyWord;"},{"lineNumber":208,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":209,"author":{"gitId":"theyellowfellow"},"content":"            keyWord \u003d input.substring(\"/find \".length());"},{"lineNumber":210,"author":{"gitId":"theyellowfellow"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":211,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions(\"Error: Input a keyword.\");"},{"lineNumber":212,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"theyellowfellow"},"content":"        boolean found \u003d false;"},{"lineNumber":214,"author":{"gitId":"theyellowfellow"},"content":"        String foundText \u003d \"Woof bark: (Here are the tasks that match your key word: )\";"},{"lineNumber":215,"author":{"gitId":"theyellowfellow"},"content":"        System.out.println(\"Woof bark: (Here are the tasks that match your key word: )\");"},{"lineNumber":216,"author":{"gitId":"theyellowfellow"},"content":"        for (int i \u003d 0; i \u003c thingsOnList.size(); i++) {"},{"lineNumber":217,"author":{"gitId":"theyellowfellow"},"content":"            if (thingsOnList.get(i).toString().toLowerCase().contains(keyWord.toLowerCase())) {"},{"lineNumber":218,"author":{"gitId":"theyellowfellow"},"content":"                foundText +\u003d \"\\n\" + ((i + 1) + \". \"  + thingsOnList.get(i));"},{"lineNumber":219,"author":{"gitId":"theyellowfellow"},"content":"                found \u003d true;"},{"lineNumber":220,"author":{"gitId":"theyellowfellow"},"content":"            }"},{"lineNumber":221,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"theyellowfellow"},"content":"        if (!found) {"},{"lineNumber":223,"author":{"gitId":"theyellowfellow"},"content":"            return \"Bark bark :\u003c (There were no tasks that matched :\u003c)\";"},{"lineNumber":224,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"theyellowfellow"},"content":"        return foundText;"},{"lineNumber":226,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":227}},{"path":"src/main/java/Duke/TaskList/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke.TaskList.tasks;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"    private LocalDateTime due;"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"    private DateTimeFormatter inFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"    private DateTimeFormatter outFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"    public Deadline(String string) throws DateTimeParseException {"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"        super(string.substring(0, string.indexOf(\"/\") - 1), string, string.indexOf(\"/\"));"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"        this.due \u003d LocalDateTime.parse(string.substring(string.indexOf(\"/\") + 4), inFormat);"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + due.getDayOfWeek() + \" \" + due.format(outFormat) + \")\";"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"    public void update(String newTask) {"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"        task \u003d newTask;"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"        fullText \u003d newTask + fullText.substring(commandIndex);"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":25}},{"path":"src/main/java/Duke/TaskList/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke.TaskList.tasks;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"    private LocalDateTime start;"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"    private LocalDateTime end;"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"    private DateTimeFormatter inFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"    private DateTimeFormatter outFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"    public Event(String string) throws DateTimeParseException, StringIndexOutOfBoundsException {"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"        super(string.substring(0, string.indexOf(\"/\") - 1), string, string.indexOf(\"/\"));"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"        this.start \u003d LocalDateTime.parse(string.substring(string.indexOf(\"/\") + 4, string.indexOf(\"/\") + 19), inFormat);"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"        this.end \u003d LocalDateTime.parse(string.substring(string.indexOf(\"/\") + 20, string.indexOf(\"/\") + 35), inFormat);"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + start.format(outFormat) + \" to \" + end.format(outFormat) + \")\";"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"    public void update(String newTask) {"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"        task \u003d newTask;"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"        fullText \u003d newTask + fullText.substring(commandIndex);"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":27}},{"path":"src/main/java/Duke/TaskList/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke.TaskList.tasks;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"    protected String task;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"    private boolean done \u003d false;"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"    protected String fullText;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"    protected int commandIndex;"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"    public Task (String task, String fullText, int commandIndex) {"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"        this.task \u003d task;"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"        this.commandIndex \u003d commandIndex;"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"        this.fullText \u003d fullText + \"cone\"; // the last 4 letters say done if a task is done, and cone if its not"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"     * Obtains fullText."},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"     * @return Raw text input combined with a status flag (completed or not) at the end."},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"    public String getFullText() {"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"        return fullText;"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"     * Marks the task as done."},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    public void markAsDone() {"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"        done \u003d true;"},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"        fullText \u003d fullText.substring(0, fullText.length() - 4) + \"done\";"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"     * String representation of the task, based on type and done-ness."},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":"     * @return"},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":"        return done ? \"[Barked] \" + task : \"[Not barked yet] \" + task;"},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":"    public abstract void update(String newTask);"},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":40}},{"path":"src/main/java/Duke/TaskList/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke.TaskList.tasks;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"public class ToDos extends Task {"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"    public ToDos(String string) {"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"        super(string.substring(5), string, 5);"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"        return \"[T] \" + super.toString();"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"    public void update(String newTask) {"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"        fullText \u003d fullText.substring(0, commandIndex) + newTask;"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"        task \u003d newTask;"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":16}},{"path":"src/main/java/Duke/UI/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke.UI;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"public class UI {"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"    private static boolean isStillGoing \u003d true;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"    private enum Messages {"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"        WRONG_INPUT(\"Bark bark? (This doesn\u0027t make sense?)\"),"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"        MISSING_INPUT(\"Bork bark?? Bark bark woof. (What does this command mean?? Try again with todo *task*, \" +"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"                \"*task* /at *start date/time* *end date/time*, or *task* by *deadline.)\"),"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"        DONE_ERROR(\"Bork. (Sorry, can\u0027t be done.)\"),"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"        BYE(\"bye\"),"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"        LIST(\"list\"),"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"        DONE(\"done\"),"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"        DELETE(\"delete\"),"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"        FIND(\"find\"),"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"        GOODBYE_MSG(\"BARK! (Come back soon!)\"),"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"        WELCOME_MSG(\"BARK BARK WOOF! (Welcome! Tell me your tasks and I\u0027ll help you keep track of them!)\");"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"        private final String value;"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"        Messages(String value) {"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"            this.value \u003d value;"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"        public String toString() {"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"            return value;"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"     * Stops the programme from running."},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":"    public static void stop() {"},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"        isStillGoing \u003d false;"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":"     * Retrieves messages of the title cmd."},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":"     * @param cmd"},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"     * @return String value stored in Messages.cmd.toString()"},{"lineNumber":41,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"theyellowfellow"},"content":"    public static String getMessage(String cmd) {"},{"lineNumber":43,"author":{"gitId":"theyellowfellow"},"content":"        return Messages.valueOf(cmd).toString();"},{"lineNumber":44,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":45}},{"path":"src/main/java/Duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package Duke.commands;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import Duke.DukeExceptions;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import Duke.Storage;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import Duke.UI.UI;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"import java.io.FileReader;"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"import java.io.BufferedReader;"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":" * Helps to parse through both user inputs and the save file."},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":" */"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"    private static FileReader taskReader;"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"     * Reads save file and fills up the list"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"     * with the old save file\u0027s tasks, including"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"     * status."},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"     * @param tmpFile file containing the saved tasks"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"     * @throws DukeExceptions"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    public static void readSave(File tmpFile) throws DukeExceptions {"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"            taskReader \u003d new FileReader(tmpFile);"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"            BufferedReader bufferedTaskReader \u003d new BufferedReader(taskReader);"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"            String lineWithStatus;"},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"            String status;"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"            String line;"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":"            while ((lineWithStatus \u003d bufferedTaskReader.readLine()) !\u003d null) {"},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"                line \u003d lineWithStatus.substring(0, lineWithStatus.length() - 4);"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":"                status \u003d lineWithStatus.substring(lineWithStatus.length() - 4);"},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":"                parseAndAddToList(line);"},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":"                if (status.equals(\"done\")) {"},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":"                    TaskList.markDone(\"/done \" + TaskList.getThingsOnListSize());"},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"theyellowfellow"},"content":"        } catch ( IOException e) {"},{"lineNumber":42,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions(e.getMessage());"},{"lineNumber":43,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":46,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"theyellowfellow"},"content":"     * Parses through input text to check for Duke.TaskList.Duke.commands"},{"lineNumber":48,"author":{"gitId":"theyellowfellow"},"content":"     * then adds a type of Task to the ArrayList of tasks."},{"lineNumber":49,"author":{"gitId":"theyellowfellow"},"content":"     * @param input User-input string."},{"lineNumber":50,"author":{"gitId":"theyellowfellow"},"content":"     * @throws DukeExceptions"},{"lineNumber":51,"author":{"gitId":"theyellowfellow"},"content":"     * @return Returns an appropriate response to the input"},{"lineNumber":52,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"theyellowfellow"},"content":"    public static String parseAndAddToList(String input) throws DukeExceptions {"},{"lineNumber":54,"author":{"gitId":"theyellowfellow"},"content":"        String command;"},{"lineNumber":55,"author":{"gitId":"theyellowfellow"},"content":"        int cmdIndex \u003d input.indexOf(\"/\");"},{"lineNumber":56,"author":{"gitId":"theyellowfellow"},"content":"        if (cmdIndex \u003d\u003d -1) {"},{"lineNumber":57,"author":{"gitId":"theyellowfellow"},"content":"            throw new DukeExceptions(\"Bark bark bark! (Please use me with proper commands!)\");"},{"lineNumber":58,"author":{"gitId":"theyellowfellow"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"theyellowfellow"},"content":"            command \u003d input.substring(cmdIndex + 1);"},{"lineNumber":60,"author":{"gitId":"theyellowfellow"},"content":"            command \u003d !command.contains(\" \") ? command : command.substring(0, command.indexOf(\" \"));"},{"lineNumber":61,"author":{"gitId":"theyellowfellow"},"content":"            switch (command) {"},{"lineNumber":62,"author":{"gitId":"theyellowfellow"},"content":"                case \"list\":"},{"lineNumber":63,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.getListView();"},{"lineNumber":64,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":65,"author":{"gitId":"theyellowfellow"},"content":"                case \"delete\":"},{"lineNumber":66,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.deleteFromList(input);"},{"lineNumber":67,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":68,"author":{"gitId":"theyellowfellow"},"content":"                case \"done\":"},{"lineNumber":69,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.markDone(input);"},{"lineNumber":70,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":71,"author":{"gitId":"theyellowfellow"},"content":"                case \"update\":"},{"lineNumber":72,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.update(input);"},{"lineNumber":73,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":74,"author":{"gitId":"theyellowfellow"},"content":"                case \"find\":"},{"lineNumber":75,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.find(input);"},{"lineNumber":76,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":77,"author":{"gitId":"theyellowfellow"},"content":"                case \"todo\":"},{"lineNumber":78,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.addToDo(input.substring(cmdIndex));"},{"lineNumber":79,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":80,"author":{"gitId":"theyellowfellow"},"content":"                case \"at\":"},{"lineNumber":81,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.addEvent(input);"},{"lineNumber":82,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":83,"author":{"gitId":"theyellowfellow"},"content":"                case \"help\":"},{"lineNumber":84,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.getHelp();"},{"lineNumber":85,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":86,"author":{"gitId":"theyellowfellow"},"content":"                case \"by\":"},{"lineNumber":87,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.addDeadline(input);"},{"lineNumber":88,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":89,"author":{"gitId":"theyellowfellow"},"content":"                case \"UG\":"},{"lineNumber":90,"author":{"gitId":"theyellowfellow"},"content":"                    return TaskList.getUG();"},{"lineNumber":91,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":92,"author":{"gitId":"theyellowfellow"},"content":"                case \"bye\":"},{"lineNumber":93,"author":{"gitId":"theyellowfellow"},"content":"                    UI.stop();"},{"lineNumber":94,"author":{"gitId":"theyellowfellow"},"content":"                    Storage.writeToFile();"},{"lineNumber":95,"author":{"gitId":"theyellowfellow"},"content":"                    System.exit(0);"},{"lineNumber":96,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":97,"author":{"gitId":"theyellowfellow"},"content":"                default:"},{"lineNumber":98,"author":{"gitId":"theyellowfellow"},"content":"                    throw new DukeExceptions(\"Bark bark bark! (Please use me with proper commands!)\");"},{"lineNumber":99,"author":{"gitId":"theyellowfellow"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":102}},{"path":"src/main/java/GUI/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package GUI;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":" */"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"public class DukeDialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"    private DukeDialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":42,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"theyellowfellow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"theyellowfellow"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"theyellowfellow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"theyellowfellow"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"theyellowfellow"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"theyellowfellow"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":52,"author":{"gitId":"theyellowfellow"},"content":"    public static DukeDialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"theyellowfellow"},"content":"        var db \u003d new DukeDialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"theyellowfellow"},"content":"        db.flip();"},{"lineNumber":55,"author":{"gitId":"theyellowfellow"},"content":"        return db;"},{"lineNumber":56,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":57}},{"path":"src/main/java/GUI/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package GUI;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":9}},{"path":"src/main/java/GUI/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package GUI;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"import Duke.Duke;"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":" */"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"        assert duke !\u003d null;"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":33}},{"path":"src/main/java/GUI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package GUI;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import Duke.Duke;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import Duke.Storage;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.TaskList;"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import Duke.UI.UI;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"import Duke.DukeExceptions;"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"import Duke.commands.Parser;"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"import javafx.event.EventHandler;"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"import javafx.fxml.FXML;"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.control.Button;"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.control.TextArea;"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.input.KeyCode;"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.input.KeyEvent;"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":" */"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"    private VBox dialogContainer;"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"    private TextArea userInput;"},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"    private Button sendButton;"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"    private Duke duke;"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":"    private String greeting \u003d Duke.getGreeting();"},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"theyellowfellow"},"content":"    public void initialize() {"},{"lineNumber":42,"author":{"gitId":"theyellowfellow"},"content":"        Storage.createNewFile();"},{"lineNumber":43,"author":{"gitId":"theyellowfellow"},"content":"        userInput.setOnKeyPressed(new EventHandler\u003cKeyEvent\u003e() {"},{"lineNumber":44,"author":{"gitId":"theyellowfellow"},"content":"            @Override"},{"lineNumber":45,"author":{"gitId":"theyellowfellow"},"content":"            public void handle(KeyEvent keyEvent) {"},{"lineNumber":46,"author":{"gitId":"theyellowfellow"},"content":"                if (keyEvent.getCode() \u003d\u003d KeyCode.ENTER) {"},{"lineNumber":47,"author":{"gitId":"theyellowfellow"},"content":"                    String text \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"theyellowfellow"},"content":"                    userInput.setText(text.substring(0, text.length() - 1));"},{"lineNumber":49,"author":{"gitId":"theyellowfellow"},"content":"                    handleUserInput();"},{"lineNumber":50,"author":{"gitId":"theyellowfellow"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"theyellowfellow"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"theyellowfellow"},"content":"        });"},{"lineNumber":53,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"theyellowfellow"},"content":"            Parser.readSave(Storage.getTmpFile());"},{"lineNumber":55,"author":{"gitId":"theyellowfellow"},"content":"        } catch (DukeExceptions e) {"},{"lineNumber":56,"author":{"gitId":"theyellowfellow"},"content":"            dialogContainer.getChildren().add(DukeDialogBox.getDukeDialog(e.getMessage(), dukeImage));"},{"lineNumber":57,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"theyellowfellow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":59,"author":{"gitId":"theyellowfellow"},"content":"        dialogContainer.getChildren().add(DukeDialogBox.getDukeDialog(greeting + \"\\n\" + TaskList.getListView(), dukeImage));"},{"lineNumber":60,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":62,"author":{"gitId":"theyellowfellow"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":63,"author":{"gitId":"theyellowfellow"},"content":"        duke \u003d d;"},{"lineNumber":64,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":66,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"theyellowfellow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":68,"author":{"gitId":"theyellowfellow"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":69,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":71,"author":{"gitId":"theyellowfellow"},"content":"    private void handleUserInput() {"},{"lineNumber":72,"author":{"gitId":"theyellowfellow"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":73,"author":{"gitId":"theyellowfellow"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":74,"author":{"gitId":"theyellowfellow"},"content":"        UserDialogBox userDialog \u003d UserDialogBox.getUserDialog(input);"},{"lineNumber":75,"author":{"gitId":"theyellowfellow"},"content":"        userDialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":76,"author":{"gitId":"theyellowfellow"},"content":"        DukeDialogBox dukeDialog \u003d DukeDialogBox.getDukeDialog(response, dukeImage);"},{"lineNumber":77,"author":{"gitId":"theyellowfellow"},"content":"        dukeDialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":78,"author":{"gitId":"theyellowfellow"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":79,"author":{"gitId":"theyellowfellow"},"content":"                userDialog,"},{"lineNumber":80,"author":{"gitId":"theyellowfellow"},"content":"                dukeDialog"},{"lineNumber":81,"author":{"gitId":"theyellowfellow"},"content":"        );"},{"lineNumber":82,"author":{"gitId":"theyellowfellow"},"content":"        userInput.clear();"},{"lineNumber":83,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":84}},{"path":"src/main/java/GUI/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package GUI;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":" */"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"public class UserDialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"    private UserDialogBox(String text) {"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":28,"author":{"gitId":"theyellowfellow"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":29,"author":{"gitId":"theyellowfellow"},"content":"            fxmlLoader.load();"},{"lineNumber":30,"author":{"gitId":"theyellowfellow"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"theyellowfellow"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"theyellowfellow"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":34,"author":{"gitId":"theyellowfellow"},"content":"        dialog.setText(text);"},{"lineNumber":35,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":37,"author":{"gitId":"theyellowfellow"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"theyellowfellow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":39,"author":{"gitId":"theyellowfellow"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"theyellowfellow"},"content":"    private void flip() {"},{"lineNumber":41,"author":{"gitId":"theyellowfellow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":42,"author":{"gitId":"theyellowfellow"},"content":"        Collections.reverse(tmp);"},{"lineNumber":43,"author":{"gitId":"theyellowfellow"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":44,"author":{"gitId":"theyellowfellow"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":45,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":47,"author":{"gitId":"theyellowfellow"},"content":"    public static UserDialogBox getUserDialog(String text) {"},{"lineNumber":48,"author":{"gitId":"theyellowfellow"},"content":"        return new UserDialogBox(text);"},{"lineNumber":49,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":50}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"         \u003copaqueInsets\u003e"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"            \u003cInsets /\u003e"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"         \u003c/opaqueInsets\u003e"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"         \u003cpadding\u003e"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"            \u003cInsets left\u003d\"10.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"         \u003c/padding\u003e"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"         \u003cfont\u003e"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"    \u003cpadding\u003e"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"    \u003c/padding\u003e"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"theyellowfellow":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.Cursor?\u003e"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"GUI.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"671.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"128.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"         \u003ccursor\u003e"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"            \u003cCursor fx:constant\u003d\"DEFAULT\" /\u003e"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"         \u003c/cursor\u003e\u003c/Button\u003e"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"        \u003cTextArea fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" prefHeight\u003d\"128.0\" prefWidth\u003d\"424.0\" promptText\u003d\"Type /help for help\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"         \u003cfont\u003e"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"            \u003cFont name\u003d\"System Italic\" size\u003d\"16.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"theyellowfellow"},"content":"         \u003c/font\u003e\u003c/TextArea\u003e"},{"lineNumber":21,"author":{"gitId":"theyellowfellow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"672.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"            \u003ccontent\u003e"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"672.0\" prefWidth\u003d\"499.0\" style\u003d\"-fx-background-color: pink;\" /\u003e"},{"lineNumber":24,"author":{"gitId":"theyellowfellow"},"content":"            \u003c/content\u003e"},{"lineNumber":25,"author":{"gitId":"theyellowfellow"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":26,"author":{"gitId":"theyellowfellow"},"content":"    \u003c/children\u003e"},{"lineNumber":27,"author":{"gitId":"theyellowfellow"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"theyellowfellow":27}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"            \u003cfont\u003e"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"                \u003cFont size\u003d\"14.0\"/\u003e"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"            \u003c/font\u003e"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"        \u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"theyellowfellow"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"theyellowfellow"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"theyellowfellow":19}},{"path":"src/test/main/java/TaskList/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package main.java.TaskList.tasks;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import Duke.TaskList.tasks.ToDos;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"public class TaskTest {"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"    public void enumTest(){"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"        ToDos testTask \u003d new ToDos(\"todo hello\");"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"        assertEquals(testTask.toString(), \"[T] [Not barked yet] hello\");"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":14}},{"path":"src/test/main/java/UI/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"package main.java.UI;"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"import Duke.UI.UI;"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":6,"author":{"gitId":"theyellowfellow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"theyellowfellow"},"content":""},{"lineNumber":8,"author":{"gitId":"theyellowfellow"},"content":"public class UITest {"},{"lineNumber":9,"author":{"gitId":"theyellowfellow"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"    public void enumTest(){"},{"lineNumber":11,"author":{"gitId":"theyellowfellow"},"content":"        assertEquals(UI.getMessage(\"GOODBYE_MSG\"), \"BARK BARK WOOF! (Welcome! Tell me your tasks and I\u0027ll he\" +"},{"lineNumber":12,"author":{"gitId":"theyellowfellow"},"content":"                \"lp you keep track of them!)\");"},{"lineNumber":13,"author":{"gitId":"theyellowfellow"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"theyellowfellow"},"content":"}"}],"authorContributionMap":{"theyellowfellow":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"theyellowfellow"},"content":"todo test input.txt"},{"lineNumber":2,"author":{"gitId":"theyellowfellow"},"content":"test input.txt /by 10am"},{"lineNumber":3,"author":{"gitId":"theyellowfellow"},"content":"test input.txt /at 4-6pm"},{"lineNumber":4,"author":{"gitId":"theyellowfellow"},"content":"line"},{"lineNumber":5,"author":{"gitId":"theyellowfellow"},"content":"hehehehe"}],"authorContributionMap":{"theyellowfellow":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"theyellowfellow"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.TaskList.Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"theyellowfellow"},"content":"REM run the program, feed Duke.TaskList.Duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"theyellowfellow"},"content":"java -classpath ..\\bin main.Duke.TaskList.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"theyellowfellow":3,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"theyellowfellow"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.TaskList.Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"theyellowfellow"},"content":"# run the program, feed Duke.TaskList.Duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"theyellowfellow"},"content":"java -classpath ../bin Duke.TaskList.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"theyellowfellow":3,"-":35}}]
