[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 17,
      "-": 44
    }
  },
  {
    "path": "datamerchandises.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "dog"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "cat"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### Task manager"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Duke is a ChatBot with a task manager. It allows users to add and delete tasks, mark tasks as done and search for tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### 1. `list` - List out tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "List out all the tasks in user\u0027s taskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Here are the tasks in your list:`  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`1.[T][✘] read book`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### 2. `todo \u003cdescription\u003e` - Add todo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Add a todo to the user\u0027s taskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`todo read book`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Got it. I\u0027ve added this task:`  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`[T][✘] read book`  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Now you have 1 task in your list`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### 3. `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e` - Add deadline"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Add a task with a deadline to the user\u0027s taskList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`deadline return book /by 2020-12-29`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Got it. I\u0027ve added this task:`  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`[D][✘] return book (by: Dec 29 2020)`  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Now you have 1 task in your list`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### 4. `event \u003cdescription\u003e /at \u003cyyyy-mm-dd\u003e` - Add event"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Add an event to the user\u0027s taskList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`event go bookstore /at 2020-12-30`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Got it. I\u0027ve added this task:`  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`[E][✘] go bookstore (at: Dec 30 2020)`  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Now you have 1 task in your list`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### 5. `done \u003ctask ID\u003e` - Mark tasks as done"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Mark the task which corresponds to the ID as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`[T][✓] read book`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### 6. `delete \u003ctask ID\u003e` - Delete tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Delete the task which corresponds to the ID from user\u0027s taskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Noted. I\u0027ve removed this task:`  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`[T][✓] read book`  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Now you have 1 task in your list`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### 7. `find \u003ckeyword\u003e` - Find tasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Search for tasks which matches the keyword in user\u0027s taskList."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`Here are the matching tasks in your list:`  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`[T][✓] read book`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "### 8. `bye` - Exit Duke"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Exits the program and closes the window."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "`bye`"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 97,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 69
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Duke program is a chat bot which will keep track of"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * tasks from the user input and store the them in a list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * @author yuxuan."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * @version v0.4."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * @since 2020-08-15."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private MerchandiseList merchandises;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param filePath The path of the file which stores the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            merchandises \u003d new MerchandiseList(storage.loadMerchandises());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(\"File can\u0027t be loaded.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            merchandises \u003d new MerchandiseList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String welcomeMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            c.execute(tasks, ui, storage, merchandises);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            response \u003d ui.showResponse();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 51,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 7
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final Duke duke \u003d new Duke(\"data\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().displayWelcomeMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 34
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final Image userImage \u003d new Image("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            this.getClass().getResourceAsStream(\"/images/Sadaharu.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final Image dukeImage \u003d new Image("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            this.getClass().getResourceAsStream(\"/images/Elizabeth.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String s \u003d duke.welcomeMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                DialogBox.getDukeDialog(s, dukeImage));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 62
    }
  },
  {
    "path": "src/main/java/duke/MerchandiseList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.merchandise.Merchandise;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class MerchandiseList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final ArrayList\u003cMerchandise\u003e merchandises;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public MerchandiseList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.merchandises \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public MerchandiseList(ArrayList\u003cMerchandise\u003e merchandises) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.merchandises \u003d merchandises;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ArrayList\u003cMerchandise\u003e getMerchandises() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.merchandises;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void addMerchandise(Merchandise merchandise) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        merchandises.add(merchandise);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void deleteMerchandise(Merchandise merchandise) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        merchandises.remove(merchandise);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String printCollection() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String collection \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        for (int i \u003d 0; i \u003c merchandises.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            collection +\u003d merchandises.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return collection;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 37
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.AddItemCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.NoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.command.ViewMerchandiseCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Parser class will deal with making sense of the user command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Reads the input to determine which type of command Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * should execute to reply the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param input The user input entered in the command line."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return The Command to be executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @throws DukeException if the input is formatted wrongly."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String[] inputArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String inputCommand \u003d inputArray[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String inputDetails;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String[] taskDetails;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String taskName, taskTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        switch (inputCommand) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (inputArray.length \u003d\u003d 1 || inputArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Which task do you want to mark as done?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            inputDetails \u003d inputArray[1].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new DoneCommand(inputDetails);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (inputArray.length \u003d\u003d 1 || inputArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Which task do you want to delete?\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            inputDetails \u003d inputArray[1].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new DeleteCommand(inputDetails);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (inputArray.length \u003d\u003d 1 || inputArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Which task do you want to find?\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            inputDetails \u003d inputArray[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new FindCommand(inputDetails);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (inputArray.length \u003d\u003d 1 || inputArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            inputDetails \u003d inputArray[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            taskName \u003d inputDetails;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            taskTime \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new AddCommand(TaskType.TODO, taskName, taskTime);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (inputArray.length \u003d\u003d 1 || inputArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            inputDetails \u003d inputArray[1].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            taskDetails \u003d inputDetails.split(\" /by \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (taskDetails.length !\u003d 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Please use the format: deadline (name) /by \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        + \"(yyyy-mm-dd)\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            taskName \u003d taskDetails[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            taskTime \u003d taskDetails[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new AddCommand(TaskType.DEADLINE, taskName, taskTime);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (inputArray.length \u003d\u003d 1 || inputArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            inputDetails \u003d inputArray[1].trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            taskDetails \u003d inputDetails.split(\" /at \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (taskDetails.length !\u003d 2) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                throw new DukeException(\"Please use the format: event (name) /at \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        + \"(yyyy-mm-dd)\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            taskName \u003d taskDetails[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            taskTime \u003d taskDetails[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new AddCommand(TaskType.EVENT, taskName, taskTime);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"view\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new ViewMerchandiseCommand(input);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        case \"addItem\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new AddItemCommand(input);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return new NoCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 98
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.merchandise.Merchandise;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Storage class will deal with loading tasks from the file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * and saving tasks in the file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a Storage object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param filePath A String representation of the filepath"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Loads the file which is stored in the hard disk and"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * retrieves the information from the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return An arraylist which contains the Tasks stored in the file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @throws DukeException if an IO error occurred and createNewFile() throws IOException."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            File file \u003d new File(filePath + \"/tasks.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return readTasksFile(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            throw new DukeException(\"IOException\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ArrayList\u003cTask\u003e readTasksFile(File file) throws FileNotFoundException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String[] taskDetails \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String taskType \u003d taskDetails[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String isTaskDone \u003d taskDetails[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String taskName \u003d taskDetails[2];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String taskTime;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                tasks.add(new ToDo(taskName));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                taskTime \u003d taskDetails[3];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                tasks.add(new Deadline(taskName, LocalDate.parse(taskTime)));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                taskTime \u003d taskDetails[3];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                tasks.add(new Event(taskName, LocalDate.parse(taskTime)));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                taskType \u003d \"unknown\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (isTaskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                tasks.get(tasks.size() - 1).setAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            assert taskType !\u003d \"unknown\" : \"Task type was not saved properly\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            assert isTaskDone.equals(\"0\") || isTaskDone.equals(\"1\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                    : \"IsDone was not saved properly\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (isTaskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                tasks.get(tasks.size() - 1).setAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Updates the data file to store all the Tasks in the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param tasks An arraylist which contains information for all the Tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @throws IOException if the file in filePath does not exist or cannot be opened."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void updateTasksFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath + \"/tasks.txt\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        PrintWriter printLine \u003d new PrintWriter(writer);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String taskDetails;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String isTaskDone \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                taskDetails \u003d \"T | \" + isTaskDone + \" | \" + task.getName();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                taskDetails \u003d \"D | \" + isTaskDone + \" | \" + task.getName() + \" | \""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        + ((Deadline) task).getBy().toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                taskDetails \u003d \"E | \" + isTaskDone + \" | \" + task.getName() + \" | \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        + ((Event) task).getAt().toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                taskDetails \u003d \"no details\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            assert !taskDetails.equals(\"no details\") : \"Unable to update data file\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            printLine.printf(\"%s\\n\", taskDetails);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        printLine.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ArrayList\u003cMerchandise\u003e loadMerchandises() throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            File file \u003d new File(filePath + \"/merchandises.txt\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return readMerchandisesFile(file);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            throw new DukeException(\"IOException\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ArrayList\u003cMerchandise\u003e readMerchandisesFile(File file) throws FileNotFoundException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ArrayList\u003cMerchandise\u003e merchandises \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String itemName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            merchandises.add(new Merchandise(itemName));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return merchandises;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void updateMerchandisesFile(ArrayList\u003cMerchandise\u003e merchandises) throws IOException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath + \"/merchandises.txt\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        PrintWriter printLine \u003d new PrintWriter(writer);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        for (Merchandise merchandise : merchandises) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String merchandiseDetails \u003d merchandise.getItemName();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            printLine.printf(\"%s\\n\", merchandiseDetails);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        printLine.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 150
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The TaskList class contains the task list and has operations"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * to modify the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a TaskList object with a new list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a TaskList object with an existing list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param taskArrayList An arraylist which is used to store Tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.tasks \u003d taskArrayList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the list in the TaskList object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return An arraylist containing all the Tasks stored in the TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Adds a new Task to the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param task A Task which contains the name and details of a task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Modifies a specific task stored in the list using the done()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * method of the Task object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param number The number of the task to be marked as done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void markTaskAsDone(int number) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        tasks.get(number).setAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Removes a specific task stored in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param number The number of the task to be deleted from the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void deleteTask(int number) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        tasks.remove(number);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 66
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Ui class will deal with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Welcomes the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"Welcome to Duke!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void setResponse(String response) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.response \u003d response;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String showResponse() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 23
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**The AddCommand class will add a Task of type TaskType to the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * list of tasks in TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final TaskType type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for an AddCommand object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param type A TaskType which represents the type of Task to be added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name A String representation of the name of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param time A String representation of the time associated with the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public AddCommand(TaskType type, String name, String time) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String response \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                task \u003d new ToDo(name);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                LocalDate by \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                task \u003d new Deadline(name, by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else if (type \u003d\u003d TaskType.EVENT) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                LocalDate at \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                task \u003d new Event(name, at);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                task \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            assert task !\u003d null: \"Task should never be null\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            storage.updateTasksFile(tasks.getTasks());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            response +\u003d task + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (tasks.getTasks().size() \u003e 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                response +\u003d \"Now you have \" + tasks.getTasks().size() + \" tasks in your list.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                response +\u003d \"Now you have 1 task in your list.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(response);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(error.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (DateTimeException error) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(\"Please provide a valid date and time\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 71
    }
  },
  {
    "path": "src/main/java/duke/command/AddItemCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.merchandise.Merchandise;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class AddItemCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public AddItemCommand(String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String[] inputArray \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (inputArray.length \u003d\u003d 1 || inputArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            throw new DukeException(\"Please provide a name for the item you want to add.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String merchandise \u003d inputArray[1].trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        merchandises.addMerchandise(new Merchandise(merchandise));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String response \u003d merchandise"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + \" is now in your collection of (merchandise)!\\n\"; //eg. stamps"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ui.setResponse(response);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            storage.updateMerchandisesFile(merchandises.getMerchandises());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(error.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 37
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                 MerchandiseList merchandises) throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String itemToDelete;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public DeleteCommand(String itemToDelete) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.itemToDelete \u003d itemToDelete;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String response \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            int itemNumber \u003d Integer.parseInt(itemToDelete) - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            response +\u003d tasks.getTasks().get(itemNumber) + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks.deleteTask(itemNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            storage.updateTasksFile(tasks.getTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (tasks.getTasks().size() \u003e 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                response +\u003d \"Now you have \" + tasks.getTasks().size() + \" tasks in your list.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                response +\u003d \"Now you have \" + tasks.getTasks().size() + \" task in your list.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(response);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(error.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(\"Please provide a valid task number to delete.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(\"This task is not in your list!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String itemToMarkAsDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public DoneCommand(String itemToMarkAsDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.itemToMarkAsDone \u003d itemToMarkAsDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            int itemNumber \u003d Integer.parseInt(itemToMarkAsDone) - 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String response \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            tasks.markTaskAsDone(itemNumber);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            response +\u003d tasks.getTasks().get(itemNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            storage.updateTasksFile(tasks.getTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(response);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(error.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(\"Please provide a valid task number to mark as done.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(\"This task is not in your list!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ui.setResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 14
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            if (task.getName().contains(keyword)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(\"There is no task which matches this keyword\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String response \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                response +\u003d task + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(response);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (tasks.getTasks().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(\"There are no tasks in your list\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            String response \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.getTasks().size() + 1; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                response +\u003d i + \". \" + tasks.getTasks().get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            ui.setResponse(response);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 22
    }
  },
  {
    "path": "src/main/java/duke/command/NoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class NoCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ui.setResponse(\"I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 14
    }
  },
  {
    "path": "src/main/java/duke/command/ViewMerchandiseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.MerchandiseList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ViewMerchandiseCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ViewMerchandiseCommand(String userInput) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                        MerchandiseList merchandises) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        String response \u003d \"This is your collection of (merchandise):\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        response +\u003d merchandises.printCollection();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ui.setResponse(response);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 23
    }
  },
  {
    "path": "src/main/java/duke/merchandise/Merchandise.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.merchandise;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Merchandise {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    private final String itemName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Merchandise(String itemName) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.itemName \u003d itemName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String getItemName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.itemName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return this.itemName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Deadline class contains the name, completion status"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * and deadline of a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param by The deadline of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Deadline(String name, LocalDate by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the deadline of a Deadline object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A LocalDate which represents the deadline of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public LocalDate getBy() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a string representation of a Deadline object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which contains the name, completion"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * status and deadline of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Event class contains the name, completion status"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * and duration of a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for an Event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name The name of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param at The time which the event is held at."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Event(String name, LocalDate at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the duration of an Event object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A LocalDate which represents the duration of the event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public LocalDate getAt() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a string representation of an Event object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which contains the name, completion"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * status and the duration of the event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The Task class contains the name and completion"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * status of a task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected final String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor for a Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Changes the completion status of the task to done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the name of the Task object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which represents the name of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns the completion status of the Task object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A boolean which is true if the task is done, false otherwise."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a string representation of a Task object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which contains the name and completion"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * status of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return \"[\\u2713] \" + name;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            return \"[\\u2718] \" + name;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 60
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * The ToDo class contains the name and completion status"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " * of a task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Constructor of a ToDo object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * Returns a string representation of a ToDo object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * @return A String which contains the name and completion"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     * status of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 28
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 14
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Deadline task \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-08-29\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[D][\\u2718] return book (by: Aug 29 2020)\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        task.setAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[D][\\u2713] return book (by: Aug 29 2020)\", task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 18
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        Event task \u003d new Event(\"borrow book\", LocalDate.parse(\"2020-09-24\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[E][\\u2718] borrow book (at: Sep 24 2020)\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        task.setAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[E][\\u2713] borrow book (at: Sep 24 2020)\", task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 18
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        ToDo task \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[T][\\u2718] read book\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        task.setAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "        assertEquals(\"[T][\\u2713] read book\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuxuanxc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yuxuanxc": 1,
      "-": 20
    }
  }
]
