[
  {
    "path": "CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Display | Name | Github Profile | Homepage"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "---|:---:|:---:|:---:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "![](https://avatars1.githubusercontent.com/u/44816346?s\u003d460\u0026v\u003d4) | Yap Jie Xiang | [Github](https://github.com/akgrenSoar) | [Homepage](https://github.com/akgrenSoar)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 1,
      "-": 7
    }
  },
  {
    "path": "save.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "T,true,manaajlsfke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "E,true,shopping,22082020 0900,23102021 1800"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 2
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import cmd.CDuke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * The main entry point for Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        CDuke CDuke \u003d new CDuke();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        CDuke.run();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 9,
      "-": 4
    }
  },
  {
    "path": "src/main/java/cmd/CDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "package cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * Command line application for Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "public class CDuke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private static final String LOGO \u003d \"\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            + \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private static final String GREETING \u003d \"Hello! I\u0027m Duke\\nLet\u0027s have a conversation!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private static final String ENDING_GREETING \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private static final Pattern INPUT_PATTERN \u003d Pattern.compile(\"^\\\\s*(\\\\S+)\\\\s*(.*)$\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private final List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private final Scanner scanner;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public CDuke() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * Store task list on disk"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @throws IOException if the named file exists but is a directory rather than a regular file, does not exist but"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * cannot be created, or cannot be opened for any other reason"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private void saveTaskList(String filePath) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        // TODO: Make sure directory exists"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        // Open file for write/overwrite"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            fileWriter.write(task.toCSV() + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        fileWriter.flush();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * Main logic for Duke commandline"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        System.out.println(GREETING);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            // Prompt for input"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            Matcher matcher \u003d INPUT_PATTERN.matcher(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            // No input received, skip"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            if (!matcher.matches()) continue;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            // Look up command and execute"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            CommandType type \u003d CommandType.get(matcher.group(1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            Consumer\u003cList\u003cTask\u003e\u003e exec \u003d type.generate(matcher.group(2));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            exec.accept(taskList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            // Save on disk"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                this.saveTaskList(\"save.txt\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                System.out.println(\"Internal Error: Failed to save file list\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            // Exit CDuke"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            if (type.equals(CommandType.BYE)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        System.out.println(ENDING_GREETING);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 92
    }
  },
  {
    "path": "src/main/java/cmd/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "package cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * Enum containing all valid command lines for CDuke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * Also contains code for execution of those commands"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        public Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            // Nothing to do"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            return (taskList) -\u003e {};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    },"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        public Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            return (taskList) -\u003e { // Print all tasks in taskList"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                int i \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                for (Task item : taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(++i + \". \" + item.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    },"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        public Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            return (taskList) -\u003e { // Mark task as done"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(commandParam.trim()) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    Task task \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    task.setCompleted(true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"\\t# Done: \" + task.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"Format Error: done {index}\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"Index Error: done {index}\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    },"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        public Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            return (taskList) -\u003e { // Remove task from taskList"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(commandParam.trim()) - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    Task task \u003d taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"\\t- Delete: \" + task.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"Format Error: delete {index}\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"Index Error: delete {index}\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            };"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    },"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        public Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            return (taskList) -\u003e { // Add todoTask to taskList"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                if (!commandParam.isBlank()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    Task task \u003d new ToDo(commandParam.trim());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    taskList.add(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"\\t+ Add ToDo: \" + task.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"Format Error: ToDo {description}\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            };"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    },"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        public Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            return (taskList) -\u003e { // Add deadline to taskList"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                Pattern p \u003d Pattern.compile(\"^(.+)\\\\/by(.+)$\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                Matcher m \u003d p.matcher(commandParam);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                if (m.matches() \u0026\u0026 !m.group(1).isBlank() \u0026\u0026 !m.group(2).isBlank()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                        Task task \u003d new Deadline(m.group(1).trim(), DukeDateTime.generate(m.group(2).trim()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                        taskList.add(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                        System.out.println(\"\\t+ Add Deadline: \" + task.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                        System.out.println(\"Date Error: Deadline {description} /by {ddMMyyyy HHmm}\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"Format Error: Deadline {description} /by {ddMMyyyy HHmm}\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            };"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    },"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        public Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            return (taskList) -\u003e { // Add event to taskList"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                Pattern p \u003d Pattern.compile(\"^(.+)\\\\/from(.+)\\\\/till(.+)$\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                Matcher m \u003d p.matcher(commandParam);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                if (m.matches() \u0026\u0026 !m.group(1).isBlank() \u0026\u0026 !m.group(2).isBlank()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                        Task task \u003d new Event(m.group(1).trim(), DukeDateTime.generate(m.group(2).trim()), DukeDateTime.generate(m.group(3).trim()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                        taskList.add(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                        System.out.println(\"\\t+ Add Event: \" + task.toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                        System.out.println(\"Date Error: Event {description} /from {ddMMyyyy HHmm} /till {ddMMyyyy HHmm}\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                    System.out.println(\"Format Error: Event {description} /from {ddMMyyyy HHmm} /till {ddMMyyyy HHmm}\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            };"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    },"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    UNDEFINED {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        public Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            return (taskList) -\u003e { // Unknown input"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                System.out.println(\"Unknown Command!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            };"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    };"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * Generate the command based on given secondary parameters"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @param commandParam Command parameters (If required)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @return Consumer which executes the command on given taskList"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public abstract Consumer\u003cList\u003cTask\u003e\u003e generate(String commandParam);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * Convert a CDuke command (String) to its corresponding CommandType"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @param commandName The CDukeCmd command"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @return The corresponding CommandType"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public static CommandType get(String commandName) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        String s \u003d commandName.toUpperCase();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        for (CommandType commandType : CommandType.values()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "            if (s.equals(commandType.toString())) return commandType;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return CommandType.UNDEFINED;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 158
    }
  },
  {
    "path": "src/main/java/task/CSVable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "public interface CSVable\u003cT\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    String toCSV();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    T fromCSV(String csv);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 6
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * A Deadline is a Task with a deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private final DukeDateTime deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Deadline(String description, DukeDateTime deadline) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Deadline(boolean completed, String description, DukeDateTime deadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        super(completed, description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.deadline.get();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline.pretty() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toCSV() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return \"D,\" + super.toCSV() + \",\" + deadline;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Task fromCSV(String csv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        Scanner scanner \u003d new Scanner(csv);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"([^,]+?),\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return new Deadline("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                scanner.nextBoolean(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                scanner.next(pattern),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                DukeDateTime.generate(scanner.next(pattern))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 48
    }
  },
  {
    "path": "src/main/java/task/DukeDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * The DukeDateTime class keeps track of a LocalDateTime"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "public class DukeDateTime implements Comparable\u003cDukeDateTime\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private final LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private DukeDateTime(LocalDateTime localDate) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.localDateTime \u003d localDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public LocalDateTime get() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.localDateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * Generate a DukeDate representing a specified datetime"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * e.g. \"01112020 1800\" means \"01 Nov 2020 06:00pm\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @param dateTime The dateTime in the format \"ddMMyyyy HHmm\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @return A DukeDateTime representing the specified dateTime"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @throws DateTimeParseException If the dateTime does not follow the specified format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public static DukeDateTime generate(String dateTime) throws DateTimeParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        // Build a localDateTime"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(dateTime, FORMATTER);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return new DukeDateTime(localDateTime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * Get a pretty print of DukeDate"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * Format is \"dd MMM yyyy KK:mma\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * (e.g. 18 May 2020 08:20pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @return The date represented by DukeDate"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String pretty() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy KK:mma\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.localDateTime.format(formatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * Converts DukeDateTime to its String representation"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * The String representation can be fed to DukeDateTime.generate"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * to reobtain the original DukeDateTime"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     * @return The String representation of this object"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.localDateTime.format(FORMATTER);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public int compareTo(DukeDateTime o) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.localDateTime.compareTo(o.get());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 66
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * An Event is a Task with startTime, and endTime"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private final DukeDateTime eventStart;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private final DukeDateTime eventEnd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Event(String description, DukeDateTime eventStart, DukeDateTime eventEnd) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.eventStart \u003d eventStart;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.eventEnd \u003d eventEnd;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Event(boolean completed, String description, DukeDateTime eventStart, DukeDateTime eventEnd) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        super(completed, description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.eventStart \u003d eventStart;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.eventEnd \u003d eventEnd;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public LocalDateTime getStart() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.eventStart.get();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public LocalDateTime getEnd() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.eventEnd.get();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return \"[E]\" + super.toString() + \" (from: \" + eventStart.pretty() + \" till: \" + eventEnd.pretty() + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toCSV() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return \"E,\" + super.toCSV() + \",\" + eventStart + \",\" + eventEnd;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Task fromCSV(String csv) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        Scanner scanner \u003d new Scanner(csv);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"([^,]+?),\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return new Event("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                scanner.nextBoolean(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                scanner.next(pattern),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                DukeDateTime.generate(scanner.next(pattern)),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "                DukeDateTime.generate(scanner.next(pattern))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 57
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * A task is a is an item that has a description and is completable"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "public abstract class Task implements CSVable\u003cTask\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private static final String SYMBOL_DONE \u003d \"✓\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private static final String SYMBOL_UNDONE \u003d \"✗\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private boolean completed;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Task(boolean completed, String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    private String isCompletedSymbol() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.completed ? SYMBOL_DONE : SYMBOL_UNDONE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.completed;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public void setCompleted(boolean completed) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return \"[\" + isCompletedSymbol() + \"] \" + description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toCSV() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return \"\" + this.isCompleted() + \u0027,\u0027 + this.description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public abstract Task fromCSV(String csv);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 56
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " * Todo is a Task with no defined datetime"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public ToDo(boolean completed, String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        super(completed, description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public String toCSV() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return \"T,\" + super.toCSV();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    public Task fromCSV(String csv) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        Scanner scanner \u003d new Scanner(csv);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(\"([^,]+?),\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "        return new ToDo(scanner.nextBoolean(), scanner.next(pattern));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "delete"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "done me too"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "delete me too"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "deadline nope"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "deadline wrong/athaha"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "event nope"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "event wrong/bywahaha"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "todo readbook"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "deadline return book /by 06062020 2359"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "event project meeting /from 06082020 1400 /till 06082020 1600"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "deadline drink coffee/by07062020 2359"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "event drink tea/from07082020 1600/till07082020 1800"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "todo say goodbye"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 38
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\task\\*.java ..\\src\\main\\java\\cmd\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akgrenSoar"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java ../src/main/java/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "akgrenSoar": 1,
      "-": 37
    }
  }
]
