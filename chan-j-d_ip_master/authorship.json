[
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected String deadLine;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String SPLITTER \u003d \" /by \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public Deadlines(String taskDescription) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        super(taskDescription.split(SPLITTER)[0]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        deadLine \u003d taskDescription.split(SPLITTER)[1];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), deadLine);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chan-j-d": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String LINE_BREAK \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String PRESPACING \u003d \"     \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String OPENING_MESSAGE \u003d \"Hello! I\u0027m Duke\\n\" + PRESPACING + \"What can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String CLOSING_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String MARKED_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String REMOVED_MESSAGE \u003d \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String LIST_HEADER \u003d \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String CLOSING_STRING \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String LIST_STRING \u003d \"list\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String DONE_STRING \u003d \"done\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String DELETE_STRING \u003d \"delete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String TO_DO \u003d \"todo\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final List\u003cString\u003e validTaskTypes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        validTaskTypes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        validTaskTypes.add(TO_DO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        validTaskTypes.add(DEADLINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        validTaskTypes.add(EVENT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final List\u003cTask\u003e taskRecords \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        System.out.println(getOpeningText());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        String userInput \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        while (!userInput.equals(CLOSING_STRING)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            String firstWord \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                if (userInput.equals(CLOSING_STRING)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                    System.out.println(getClosingText());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                } else if (userInput.equals(LIST_STRING)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                    System.out.println(processString(getListString()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                } else if (firstWord.equals(DONE_STRING)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                    System.out.println(registerTaskDone(userInput));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                } else if (firstWord.equals(DELETE_STRING)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                    System.out.println(registerDeleteTask(userInput));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                    System.out.println(addTask(userInput));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                System.out.println(processErrorString(e));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String registerDeleteTask(String userInput) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        String[] details \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            throw new DukeException(\"Please specify a task to delete!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            taskNumber \u003d Integer.parseInt(details[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            throw new DukeException(\"Invalid number input!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        if (taskNumber \u003e taskRecords.size()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            throw new DukeException(\"No such task!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        Task taskRemoved \u003d taskRecords.remove(taskNumber - 1);;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return processString(REMOVED_MESSAGE + \u0027\\n\u0027 +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                PRESPACING + \"   \" + taskRemoved + \u0027\\n\u0027 +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                PRESPACING + createTaskNumberCountMessage(taskRecords.size()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String processErrorString(DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        String message \u003d e.getMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return processString(message);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String registerTaskDone(String userInput) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        String[] details \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            throw new DukeException(\"Please specify a task to complete!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            taskNumber \u003d Integer.parseInt(details[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            throw new DukeException(\"Invalid number input!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        if (taskNumber \u003e taskRecords.size()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            throw new DukeException(\"No such task!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        Task taskDone \u003d taskRecords.get(taskNumber - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        taskDone.markDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return processString(MARKED_MESSAGE + \u0027\\n\u0027 + PRESPACING + \"   \" + taskDone);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String getListString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        builder.append(LIST_HEADER);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        for (Task task : taskRecords) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            builder.append(\u0027\\n\u0027 + PRESPACING);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            builder.append(count++ + \".\" + task.toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String addTask(String taskDescription) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        String[] details \u003d taskDescription.split(\" \", 2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        if (details.length \u003d\u003d 1 \u0026\u0026 validTaskTypes.contains(details[0])) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            throw new DukeException(\"The description of a \" + details[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        Task addedTask;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        switch(details[0]) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            case TO_DO:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                addedTask \u003d new ToDos(details[1]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                addedTask \u003d new Deadlines(details[1]);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                addedTask \u003d new Events(details[1]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                throw new DukeException(\"Not a valid command!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        taskRecords.add(addedTask);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return processString("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                ADDED_MESSAGE + \u0027\\n\u0027 +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                        PRESPACING + \"   \" + addedTask + \u0027\\n\u0027 +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "                        PRESPACING + createTaskNumberCountMessage(taskRecords.size())"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        );"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String createTaskNumberCountMessage(int count) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return \"Now you have \" + count + \" tasks in the list.\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String processString(String string) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return LINE_BREAK  + PRESPACING + string + \u0027\\n\u0027 + LINE_BREAK;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String getOpeningText() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return processString(OPENING_MESSAGE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static String getClosingText() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return processString(CLOSING_MESSAGE);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chan-j-d": 165,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public DukeException(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        super(\"☹ OOPS!!! \" + description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chan-j-d": 7
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected static final String SPLITTER \u003d \" /at \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public Events(String taskDescription) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        super(taskDescription.split(SPLITTER)[0]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        timing \u003d taskDescription.split(SPLITTER)[1];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), timing);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chan-j-d": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chan-j-d": 26
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public ToDos(String taskDescription) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chan-j-d": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chan-j-d": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chan-j-d"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chan-j-d": 1,
      "-": 20
    }
  }
]
