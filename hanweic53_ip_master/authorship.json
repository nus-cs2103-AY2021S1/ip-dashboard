[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D | 1 | return book | 03/10/2020, 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 1 | graduation ceremony | 10/10/2020, 1830"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 0 | final exams | 19/11/2020, 1500"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 4
    }
  },
  {
    "path": "data/dukeTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D | 1 | return book | 03/10/2020, 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 1 | graduation ceremony | 10/10/2020, 1830"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "E | 0 | final exams | 19/11/2020, 1500"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Duke(String folderPath, String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.storage \u003d new Storage(folderPath, filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            this.taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            this.taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        new Duke(\"data\",\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 45,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String commandWord;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public AddCommand(String commandWord, String taskName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    taskList.addTodo(taskName, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    taskList.addDeadline(taskName, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    taskList.addEvent(taskName, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Please enter dates in this format: dd/MM/yyyy timeIn24Hr\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    \"\\nE.g. 01/12/2020 2359\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Invalid description!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 47
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        taskList.deleteTask(index, storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage)  {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        taskList.setDoneTask(index, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ExitCommand() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ListCommand() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.listTasks();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 20
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public UnknownCommand() { }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 21
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 9
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        switch (inputArr[0]) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new ListCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new DoneCommand(Integer.parseInt(inputArr[1]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    command \u003d new DeleteCommand(Integer.parseInt(inputArr[1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    throw new DukeException(\"Invalid format!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    throw new DukeException(\"Please include item number!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    command \u003d new AddCommand(\"todo\", input.substring(5));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    command \u003d new AddCommand(\"deadline\", input.substring(9));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    command \u003d new AddCommand(\"event\", input.substring(6));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    throw new DukeException(\"Please include description!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hanweic53": 65
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final File folder;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Storage(String folderPath, String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (!this.folder.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                boolean isFolderCreated \u003d this.folder.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isFolderCreated) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist. New folder was created!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist but new folder was not created.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (!this.file.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                boolean isFileCreated \u003d this.file.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isFileCreated) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"File did not exist. New file was created!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    System.out.println(\"Folder did not exist but new file was not created.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String[] taskArray;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                taskArray \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String taskType \u003d taskArray[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String isDone \u003d taskArray[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                String taskName \u003d taskArray[2];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Deadline(taskName,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                                LocalDateTime.parse(taskArray[3].replace(\", \" , \"T\"),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                                        DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\")));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        task \u003d new Event(taskName,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                                LocalDateTime.parse(taskArray[3].replace(\", \", \"T\"),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                                        DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\")));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    assert task !\u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    task.markDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"File is empty when loading\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        fw.write(textToAppend + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void rewriteFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                fw.write(task.toText() + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                appendToFile(task.toText());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private void printFileContents() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Scanner s \u003d null; // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            s \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 120
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"D\" + \" | \" + completionStatus + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HHmm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"[D]\" + this.getStatusIcon() + \" \" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"E\" + \" | \" + completionStatus + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, HHmm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"[E]\" + this.getStatusIcon() + \" \" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 26
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " * contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            System.out.println(i + 1 + \". \" + task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private void printTotalNumberOfTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        int numTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (numTasks \u003c 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            System.out.println(\"Now you have \" + numTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void setDoneTask(int index, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d tasks.get(index - 1); // index - 1 to match the index in ArrayList"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \"\\n\\t\" + task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void deleteTask(int index, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            Task task \u003d tasks.get(index - 1); // index -1 to match the index in ArrayList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            tasks.remove(index - 1); // index - 1 to match the index in ArrayList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve deleted this task:\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    \"\\n\\t\" + task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Missing or invalid item number!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void addTodo(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Ui.printAddSuccess(task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void addDeadline(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] taskArray \u003d taskName.split(\" /by \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        taskName \u003d taskArray[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String timeBy \u003d taskArray[1].replace(\u0027 \u0027, \u0027T\u0027);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d new Deadline(taskName, LocalDateTime.parse(timeBy, formatter));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Ui.printAddSuccess(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void addEvent(String taskName, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            throw new DukeException(\"Description cannot be only empty spaces!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String[] taskArray \u003d taskName.split(\" /at \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        taskName \u003d taskArray[0];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String timeAt \u003d taskArray[1].replace(\u0027 \u0027, \u0027T\u0027);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\u0027T\u0027HHmm\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Task task \u003d new Event(taskName, LocalDateTime.parse(timeAt, formatter));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Ui.printAddSuccess(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        printTotalNumberOfTasks();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        storage.appendToFile(task.toText());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 111
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String completionStatus \u003d \"0\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            completionStatus \u003d \"1\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"T\" + \" | \" + completionStatus + \" | \" + this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return \"[T]\" + this.getStatusIcon() + \" \" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 22
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public Ui() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.print(\"Hello, I am\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"___________________________________________________\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \"\\nDuke: What can i do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public static void printAddSuccess(Task taskAdded) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \"\\n\\t\" + taskAdded);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 45
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Storage storage \u003d new Storage(\"data\" ,\"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void executeTest(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(\"todo\", \" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \"homework /by 01/40/2020 1900\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Please enter dates in this format: dd/MM/yyyy timeIn24Hr\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    \"\\nE.g. 01/12/2020 2359\", e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"deadline\", \"NotMakingSense\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Invalid description!\", e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Description cannot be only empty spaces!\", e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \"eat /at 01/40/2020 1900\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Please enter dates in this format: dd/MM/yyyy timeIn24Hr\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                    \"\\nE.g. 01/12/2020 2359\", e.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        addCommand \u003d new AddCommand(\"event\", \"NotMakingSense\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Invalid description!\", e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"todo\", \"sample\").isExit());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"deadline\", \"sample \" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \"/by 20/10/2020 1900\").isExit());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new AddCommand(\"event\", \"sample \" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "                \"/at 20/10/2020 1900\").isExit());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hanweic53": 106
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Storage storage \u003d new Storage(\"data\", \"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            taskList \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(7);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            deleteCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "            assertEquals(\"Missing or invalid item number!\", e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertFalse(new DeleteCommand(10).isExit());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 39
    }
  },
  {
    "path": "src/test/java/duke/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "        assertTrue(new ExitCommand().isExit());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "Hello World"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "todo CS2103T post-lecture quiz"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "deadline CS2103T ip /by Thursday 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "event CS2103T Week 2 /at Friday 12am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.exception.DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hanweic53"
        },
        "content": "D:\\CS2103T\\ip\\src\\main\\java\\duke.task.Todo.java"
      }
    ],
    "authorContributionMap": {
      "hanweic53": 6
    }
  }
]
