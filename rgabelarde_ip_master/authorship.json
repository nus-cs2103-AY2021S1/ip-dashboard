[
  {
    "path": "src/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"D | \" + getStatusIcon() + \" | \" + description + \" | \" + by + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 26
    }
  },
  {
    "path": "src/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    enum type {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        TODO{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        DEADLINE{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        EVENT{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"event\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        DELETE{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                return \"delete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        },"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    private static void printBorder() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static File taskList \u003d new File(\"tasklist.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if(taskList.exists()){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                FileReader fr \u003d new FileReader(taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    String[] task \u003d line.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    rewriteList(task, tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    System.out.println(\"\\nYou have a saved list! Here: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    printList(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    fr.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                taskList.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch(IOException e){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        String input \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                printBorder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    System.out.println((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    Save();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    printBorder();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! What task did you complete?\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                printBorder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                if (input.contains(type.TODO.toString()) || input.contains(type.DEADLINE.toString()) || input.contains(type.EVENT.toString()) || input.contains(type.DELETE.toString())) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    if (input.contains(type.TODO.toString())) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            Todo t \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            tasks.add(t);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            Save();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            System.out.println(t);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            throw new DukeException(\" ☹ Insufficient details! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    } else if (input.contains(type.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            String[] s \u003d input.split(\"/by \", 2);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            String[] s2 \u003d s[1].split(\"-\", 3);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            LocalDate by \u003d LocalDate.parse(s2[2] + \"-\" + s2[1] + \"-\" + s2[0]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            String[] desc \u003d s[0].split(\" \", 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            if (!desc[1].isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                Deadline dl \u003d new Deadline(desc[1], by);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                tasks.add(dl);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                Save();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(dl);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                throw new DukeException(\" ☹ Insufficient details! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            throw new DukeException(\" ☹ Date wrongly entered, please format date in dd-MM-yyyy!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    } else if (input.contains(type.EVENT.toString())) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            String[] s \u003d input.split(\"/at \", 2);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            String[] s2 \u003d s[1].split(\"-\", 3);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            LocalDate at \u003d LocalDate.parse(s2[2] + \"-\" + s2[1] + \"-\" + s2[0]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            String[] desc \u003d s[0].split(\" \", 2);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            if (!desc[1].isEmpty()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                Event e \u003d new Event(desc[1], at);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                tasks.add(e);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                Save();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                System.out.println(e);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                                throw new DukeException(\" ☹ Insufficient details! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            throw new DukeException(\" ☹ Date wrongly entered, please format date in dd-MM-yyyy!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    } else if (input.contains(type.DELETE.toString())) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            int index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            Task t \u003d tasks.get(index);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            tasks.remove(index);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            Save();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + t);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        } catch (Exception e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                            throw new DukeException(\"Please provide the index of the task you would like to remove.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                        throw new DukeException(\"failed to provide task info sufficiently\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            input \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static void Save() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            FileWriter newList \u003d new FileWriter(taskList);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                newList.write(t.saveText());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            newList.flush();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            newList.close();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static void rewriteList(String[] s, ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        boolean isDone \u003d s[2].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        switch (s[0]) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Todo t \u003d new Todo(s[2], isDone);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate by \u003d LocalDate.parse(s[3]);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Deadline dl \u003d new Deadline(s[2], isDone, by);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(dl);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                LocalDate at \u003d LocalDate.parse(s[3]);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                Event e \u003d new Event(s[2], isDone, at);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                tasks.add(e);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e al){"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        for(int i \u003d 0; i \u003c al.size(); i++){"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "            System.out.println((i + 1) + \". \" + al.get(i));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 200,
      "-": 3
    }
  },
  {
    "path": "src/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 5
    }
  },
  {
    "path": "src/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"E | \" + getStatusIcon() + \" | \" + description + \" | \" + at + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 26
    }
  },
  {
    "path": "src/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return(isDone ? \"\\u2713\" : \"\\u2718\"); //returns tick or X symbol accordingly"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    abstract public String saveText();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 24
    }
  },
  {
    "path": "src/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public Todo(String description, boolean isDone){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String saveText(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"T | \" + getStatusIcon() + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "deadline return book /by 02-12-2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "event project meeting /at 12-09-2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rgabelarde"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "rgabelarde": 1,
      "-": 37
    }
  }
]
