[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Driver class for chat bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "            storage.loadTasks(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "                String fullCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "                c.execute(storage, tasks, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Driver method for chat bot."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "        new Duke().start();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "kswk": 52
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Parse user inputs and translate them into commands to be executed by the chat bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int SLASH_INDEX \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Parses the user input to determine what command the user intended to run."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param input String representing user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return A Command object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws DukeEmptyArgumentException If argument of done and delete commands are empty."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static Command parse(String input)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String command \u003d input.strip();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String[] commandWordArray \u003d command.split(SPACE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (command.equals(BYE)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new ByeCommand(command, true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (command.equals(LIST)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (commandWordArray[0].equals(DONE)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (command.substring(commandWordArray[0].length())"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    .isBlank()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "                throw new DukeEmptyArgumentException(DONE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new DoneCommand(commandWordArray[0],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    commandWordArray[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (commandWordArray[0].equals(DELETE)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (command.substring(commandWordArray[0].length())"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    .isBlank()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "                throw new DukeEmptyArgumentException(DELETE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new DeleteCommand(commandWordArray[0],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    commandWordArray[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (commandWordArray[0].equals(TODO)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "                || commandWordArray[0].equals(DEADLINE)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "                || commandWordArray[0].equals(EVENT)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (command.substring(commandWordArray[0].length())"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    .isBlank()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "                throw new DukeEmptyDescriptionException(DONE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new AddCommand(commandWordArray[0],"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    command.substring(commandWordArray[0].length()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            + SLASH_INDEX));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (commandWordArray[0].equals(FIND)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (command.substring(commandWordArray[0].length())"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    .isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "                throw new DukeEmptyArgumentException(DONE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return new FindCommand(commandWordArray[0],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    commandWordArray[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return new UnknownCommand(command);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 77
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Loads the tasks.csv file and saves the tasks.csv file upon booting up"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": " * of bot and shutting down of the bot respectively."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Searches for tasks.csv file and loads it into the TaskList of bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * If tasks.csv file does not exist, do nothing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object to be updated by existing tasks.csv file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws IOException If loading of file fails."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static void loadTasks(TaskList tasks)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Path filePath \u003d Paths.get(currDir,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \"data\", \"tasks.csv\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "        BufferedReader br \u003d Files.newBufferedReader(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        br.readLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String line \u003d br.readLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String[] taskEntry \u003d line.split(\",\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String type \u003d taskEntry[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String done \u003d taskEntry[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "            String description \u003d taskEntry[2];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "                Task task \u003d new Todo(description,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        done.equals(\"1\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "                String date \u003d taskEntry[3];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "                Task task \u003d new Deadline(description,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        done.equals(\"1\"), date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "                String date \u003d taskEntry[3];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "                Task task \u003d new Event(description,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        done.equals(\"1\"), date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "            line \u003d br.readLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Saves tasks in TaskList object of the bot into existing tasks.csv file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * If tasks.csv does not exist, create one and save the tasks in it."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object of the chat bot with tasks to be saved onto"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *              tasks.csv file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @throws IOException If saving of file fails."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public static void saveTasks(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "        String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Path folderPath \u003d Paths.get(currDir, \"data\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (!Files.exists(folderPath)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "            Files.createDirectories(folderPath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Path filePath \u003d Paths.get(currDir,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \"data\", \"tasks.csv\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": "        File file \u003d filePath.toFile();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kswk"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kswk"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kswk"
        },
        "content": "        bw.write(\"Task,Done?,Description,Date\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kswk"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kswk"
        },
        "content": "            bw.write(tasks.getTask(i).write());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kswk"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 86
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": " * A list in charge of storing tasks created by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int TASK_LIMIT \u003d 100;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private final List\u003cTask\u003e taskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \u003d new ArrayList\u003c\u003e(TASK_LIMIT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Adds task into TaskList object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param task A Task object created by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Deletes task from TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param index Integer index of task that user wants to remove."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets size of TaskList object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return Integer representing size of TaskList object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets Task object from TaskList object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param index Integer index of Task that user wants to get from TaskList object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 50
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": " * In charge of interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String BORDER"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "            \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the greeting message to the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(BORDER"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\nHi, my name is Duke.\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\nWhat can I do for you today?\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the farewell message to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printFarewell() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"Thanks for chatting with me, \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"see you soon!\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + BORDER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the tasks that the user have made so far from the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object of the chat bot."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"Here are the tasks\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \" in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out to the user to indicate an empty list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printNoTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"Oops! Your list is empty!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the message to inform user that tasks have"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * been saved onto tasks.csv file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printSave() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"List saved to hard disk \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"at data/tasks.csv\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the task that user has added into"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * TaskList object and also the number of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * currently in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param task Task object user added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param taskNumber Integer number representing number of"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *                   Task objects in the TaskList object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printAdded(Task task, int taskNumber) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"\u003e\" + \"added: \" + task + \"\u003c\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"You now have \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + taskNumber"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the task that user deleted and also the number of tasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * currently in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param task Task object user deleted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param taskNumber Integer number represent number of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *                   Task objects remaining in the TaskList object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printDeleted(Task task, int taskNumber) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"I have deleted this task: \\n\" + task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"You now have \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + taskNumber"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the task that user has marked as done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object of the chat bot."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param taskNumber Integer number representing the index of the task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *                   that was marked as done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printDone(TaskList tasks, int taskNumber) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"I have marked this task as done: \\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out the tasks that user wants to find."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param tasks TaskList object of the chat bot."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printFind(TaskList tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Prints out to the user that no tasks corresponding"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * to the keyword was found."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param match"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void printNoMatch(String match) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"Sorry! No matches found for \" + match + \".\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 113
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a command to add a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String description of task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public AddCommand(String command, String extra) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, extra);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeInvalidDateException,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Task taskToBeAdded \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "            taskToBeAdded \u003d new Todo(extra);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "                taskToBeAdded \u003d new Deadline("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        extra.substring(0, extra.indexOf(\"/\") - 1),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        extra.substring(extra.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "                taskToBeAdded \u003d new Event("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        extra.substring(0, extra.indexOf(\"/\") - 1),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        extra.substring(extra.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidDateException(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidArgumentException(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "        tasks.addTask(taskToBeAdded);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ui.printAdded(taskToBeAdded, tasks.getSize());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof AddCommand;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a command to shut down chat bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isExit Boolean indicating if chat bot should shut down."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public ByeCommand(String command, boolean isExit) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ui.printSave();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ui.printFarewell();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof ByeCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 32
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String extra;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected static final int PARSE_INDEX \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected static final int TASK_INDEX \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor without additional arguments."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        extra \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with additional String argument."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String parsed by Parser object representing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *              extra argument for command string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Command(String command, String extra) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.extra \u003d extra;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with addition boolean argument."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isExit Boolean to decide whether to shut down chat bot."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Command(String command, boolean isExit) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets the boolean object to decide if bot should be shut down."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return Boolean object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public abstract void execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws IOException, DukeEmptyArgumentException,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidCommandException, DukeInvalidDateException,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidArgumentException, DukeInvalidTaskException, DukeEmptyDescriptionException;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 64
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Representing a command to delete task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String parsed by Parser object representing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *              argument for delete command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DeleteCommand(String command, String extra) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, extra);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeInvalidArgumentException,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidTaskException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "            int taskNum \u003d Integer.parseInt(extra)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    - PARSE_INDEX;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "            ui.printDeleted(tasks.getTask(taskNum),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    tasks.getSize() - TASK_INDEX);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "            tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidArgumentException(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof DeleteCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.*;;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents command to mark task as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String parsed by Parser object representing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     *              argument for done command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DoneCommand(String command, String extra) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, extra);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeInvalidArgumentException,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "            DukeInvalidTaskException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "            int taskNum \u003d Integer.parseInt(extra)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    - PARSE_INDEX;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "            tasks.getTask(taskNum).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "            ui.printDone(tasks, taskNum);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidArgumentException(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof DoneCommand;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 41
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a command to find mathcing keywords in list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param extra String keyword of task to be searched."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public FindCommand(String command, String extra) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command, extra);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ui.printFind(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "            if (tasks.getTask(i).getDescription().contains(extra)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "                System.out.println(i + 1 + \".\" + tasks.getTask(i));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (counter \u003d\u003d 0 ) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "            ui.printNoMatch(extra);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof FindCommand;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents command to show list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "            System.out.println(i + TASK_INDEX + \".\" + tasks.getTask(i));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "            ui.printNoTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof ListCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 35
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents command that is not recognised by chat bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String parsed by Parser object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public UnknownCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, Ui ui)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "            throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "        throw new DukeInvalidCommandException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return obj instanceof UnknownCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 29
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeEmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception signifying empty argument for command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeEmptyArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String of command executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeEmptyArgumentException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Argument for \" + command + \" cannot be empty!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeEmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception signifying empty description for command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeEmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String of command executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeEmptyDescriptionException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Description for \" + command + \" cannot be empty!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents an exception thrown by chat bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param msg String of error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception signifying an invalid argument for command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeInvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String of command to be executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeInvalidArgumentException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Please enter a valid argument for \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + command + \"!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception signifying an invalid command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeInvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeInvalidCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Invalid command!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception to signify an invalid task date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeInvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param command String of the command executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeInvalidDateException(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"Please enter a valid date for \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + command + \"!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents exception to signify an invalid task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeInvalidTaskException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(\"That task does not exist in the list!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String originalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with no extra arguments."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String description of deadline task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param by String date of deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        originalDate \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with extra boolean argument."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String description of deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isDone Boolean representing whether task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param by String date of deadline task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        originalDate \u003d by;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, \" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "                \"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"\\ndeadline,\" + super.write() + \",\" + originalDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    String originalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor without extra arguments."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String description of event task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param at String argument for date of event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        originalDate \u003d at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with extra boolean argument."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String description of event task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isDone Boolean representing whether task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param at String argument for date of event task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "        originalDate \u003d at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[E]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\"))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"\\nevent,\" + super.write() + \",\" + originalDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor without extra arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String representing description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with extra boolean argument."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String representing description of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isDone Boolean representing whether task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets the status of task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String representing tick or cross."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Translates the task to an excel format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String of entry to be written to a file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "            return 1 + \",\" + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return 0 + \",\" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Gets description of task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @return String description of Task object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": " * Represents a Todo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with no extra arguments."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String representing description of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * Class constructor with extra boolean argument"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param description String representing description of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "     * @param isDone Boolean representing whether task is done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String write() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"\\ntodo,\" + super.write();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 34
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void byeTest() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new ByeCommand(\"bye\", true));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void listTest() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new ListCommand(\"list\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void doneTest() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"done 1\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new DoneCommand(\"done\", \"1\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void deleteTest() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new DeleteCommand(\"delete\", \"1\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void addTest() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"todo borrow book\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new AddCommand(\"todo\", \"borrow book\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void unknownTest() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"unknown\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new UnknownCommand(\"unknown\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void findTest() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Command c \u003d Parser.parse(\"find book\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "        assertEquals(c, new FindCommand(\"find\", \"book\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 52
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": "deadline return book /by 24/08/2020 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "event project meeting /at 26/08/2020 1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "done abc"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "find book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "events"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "/c"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kswk": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "kswk": 4
    }
  }
]
