[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    applicationDefaultJvmArgs \u003d [\"-Dfile.encoding\u003dutf-8\"]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    archiveClassifier \u003d \"v0.3\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    toolVersion \u003d \u00278.36\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 25,
      "-": 44
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private static final PrintStream originalOutput \u003d System.out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private static final PrintStream originalError \u003d System.err;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private final Storage storageVar;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private final TaskListHandler handlerVar;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private ByteArrayOutputStream guiOutput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Initializes the storage instance and handler instance for all task list operations."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        storageVar \u003d new Storage(\"./data\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handlerVar \u003d new TaskListHandler(storageVar.getListFromFile());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Starts the chatbot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String home \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Storage storage \u003d new Storage(home + \"/data\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (Storage.hasLoadingError) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TaskListHandler handler \u003d new TaskListHandler(storage.getListFromFile());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Ui userInterface \u003d new Ui(handler, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        userInterface.run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        setGuiStreams();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Command c \u003d Parser.parse(input, handlerVar);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            c.execute(handlerVar, storageVar, input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (NoSuchElementException e1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(e1.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            DukeException.tryAgain();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        resetGuiStreams();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return guiOutput.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void setGuiStreams() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        guiOutput \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ByteArrayOutputStream guiError \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setOut(new PrintStream(guiOutput));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setErr(new PrintStream(guiError));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Reverts the input and output streams to the standard system ones."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void resetGuiStreams() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setOut(originalOutput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setErr(originalError);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 78
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Handles exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Prompts the user to enter a command again."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void tryAgain() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Try saying something I can recognize!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 18
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            BorderPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showGreeting();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Shooting Stars icon by Icons8 from https://icons8.com/icon/81220/shooting-stars"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            stage.getIcons().add(new Image(Main.class.getResourceAsStream(\"/images/icon.png\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 36
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    // user.png: Standing Man icon by Icons8 from https://icons8.com/icon/8NzonSPORfzB/man-in-a-tuxedo"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    // duke.png: Man In A Tuxedo icon by Icons8 from https://icons8.com/icon/21832/standing-man"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            // @@author James_D"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            // Reused with minor modifications from"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            // https://stackoverflow.com/questions/27334455/how-to-close-a-stage-after-a-certain-amount-of-time-javafx"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.5));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            delay.setOnFinished(event -\u003e stage.close());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            // @@author"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *  Shows the greeting message as the first message given by Duke."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void showGreeting() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            DialogBox.getDukeDialog(Ui.getGreeting(), dukeImage)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        );"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 68,
      "-": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.UndoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Handles changing user input and making sense of it, e.g. tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Processes the input given by user into a recognizable command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Command to be executed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if input given is invalid or unrecognized."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static Command parse(String input, TaskListHandler handler) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // The command word is the first word in the whole command in string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String firstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (checkInputForEmptySpace(input)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (checkInputForEmptySpace(input)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Task currentTask \u003d Parser.parseModifyTaskCommand(input, handler);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new DoneCommand(currentTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Task delTask \u003d Parser.parseModifyTaskCommand(input, handler);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new DeleteCommand(delTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Task newToDo \u003d Parser.parseNewTaskCommand(input, Task.TaskType.TODO);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new TodoCommand(newToDo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Task newDeadline \u003d Parser.parseNewTaskCommand(input, Task.TaskType.DEADLINE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new DeadlineCommand(newDeadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Task newEvent \u003d Parser.parseNewTaskCommand(input, Task.TaskType.EVENT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new EventCommand(newEvent);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (checkInputForEmptySpace(input)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new FindCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (checkInputForEmptySpace(input)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Checks the given input for additional parameters given when a single word-command is given."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Invalid command"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static boolean checkInputForEmptySpace(String input) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return input.contains(\" \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Processes user input that modifies a task in the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Task in the task list to be modified."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if commands have too many arguments, invalid number or string is given."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static Task parseModifyTaskCommand(String input, TaskListHandler handler) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String[] stringArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // DONE OR DELETE will be the first string in the whole command in string"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String lowerCaseOperation \u003d stringArr[0].toLowerCase();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (stringArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // if more than one task is given as the arguments"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, please enter a task number after \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                + lowerCaseOperation + \"!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (stringArr.length \u003e 2) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // if more than one task is given as the arguments"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, too many task numbers entered after \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                + lowerCaseOperation + \"!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Finding the actual task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Task number is input after done/delete in the whole command in string"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Minus one to access the index in the task list"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            int indexOfTask \u003d Integer.parseInt(stringArr[1]) - 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            assert indexOfTask \u003e\u003d 0 : \"Error processing the index \" + indexOfTask + \" of task to modify\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return handler.getTasks().get(indexOfTask);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, \" + \u0027\"\u0027 + stringArr[1] + \u0027\"\u0027"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                + \" is not a valid task number for \" + lowerCaseOperation + \"!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, \" + \u0027\"\u0027 + stringArr[1] + \u0027\"\u0027 + \" is not a number!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Processes user input into a task to be added to the task list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param tasktype Type of task to be added."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return New task to be added."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if task description is empty or invalid command format used."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static Task parseNewTaskCommand(String input, Task.TaskType tasktype) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            String dummyTask \u003d input.split(\" \")[1].trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, the description of \""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                + tasktype.toString().toLowerCase() + \" cannot be empty\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasktype \u003d\u003d Task.TaskType.TODO) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            String todoWithSpace \u003d \"todo \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            String taskDesc \u003d input.substring(todoWithSpace.length());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new Todo(taskDesc);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasktype \u003d\u003d Task.TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return parseTaskWithTimeSubroutine(input, tasktype);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                throw new DukeException(\"\\u2639 Whoops wrong format, use add deadline format: \""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    + \"deadline [task] /by [time (can be \u0027YYYY-MM-DD HHMM\u0027)]\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (tasktype \u003d\u003d Task.TaskType.EVENT) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return parseTaskWithTimeSubroutine(input, tasktype);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                throw new DukeException(\"\\u2639 Whoops wrong format, use add event format: \""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    + \"event [task] /at [time]\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            assert false : \"Error detecting task type for new task command\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new Task(\"this task should not be created\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Further processes user input into an event or a deadline, which are both tasks with time."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param tasktype Type of task."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return New Task to be added."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if description or time is empty."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static Task parseTaskWithTimeSubroutine(String input,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                                                   Task.TaskType tasktype) throws DukeException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String taskDesc \u003d parseTaskDesc(input, tasktype);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        checkIsFieldEmpty(\"taskDesc\", taskDesc);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assert !taskDesc.isEmpty() : \"Error processing the empty task description given\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String time \u003d parseTime(input, tasktype);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        checkIsFieldEmpty(\"time\", time);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assert !time.isEmpty() : \"Error processing the empty time given\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasktype \u003d\u003d Task.TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new Deadline(taskDesc, time);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (tasktype \u003d\u003d Task.TaskType.EVENT) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new Event(taskDesc, time);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            assert false : \"Error in parseTaskWithTimeSubroutine: \" + tasktype;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"Error parsing new task with time of task type \" + tasktype + \" in subroutine\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Checks whether the given field is empty."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param nameOfField Task description or time."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param field String given."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if field is empty."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void checkIsFieldEmpty(String nameOfField, String field) throws DukeException {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (field.trim().isEmpty()) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, \" + nameOfField + \" cannot be empty!\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Process the part of the user command before the separator into the task description for the new task."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param tasktype Type of task, which can be a deadline or event."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Description of the task."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException If invalid TaskType is given."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static String parseTaskDesc(String input, Task.TaskType tasktype) throws DukeException {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasktype \u003d\u003d Task.TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return input.substring(tasktype.name().length() + 1, input.indexOf(Deadline.SEPARATOR) - 1);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (tasktype \u003d\u003d Task.TaskType.EVENT) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return input.substring(tasktype.name().length() + 1, input.indexOf(Event.SEPARATOR) - 1);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            assert false : \"Error in parseTaskDesc: \" + input + \" \" + tasktype;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"Error in parseTaskDesc: \" + input + \" \" + tasktype);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Process the part of the user command after the separator into the time for the new task."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param tasktype Type of task, which can be a deadline or event."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Description of the task."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException If invalid TaskType is given."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static String parseTime(String input, Task.TaskType tasktype) throws DukeException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasktype \u003d\u003d Task.TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return input.substring(input.indexOf(Deadline.SEPARATOR) + Deadline.SEPARATOR.length() + 1);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (tasktype \u003d\u003d Task.TaskType.EVENT) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return input.substring(input.indexOf(Event.SEPARATOR) + Event.SEPARATOR.length() + 1);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            assert false : \"Error in parseTime: \" + input + \" \" + tasktype;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"Error in parseTime \" + input + \" \" + tasktype);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 246
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Represents all loading and saving operations to the save file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /** Checks whether the user chooses to terminate when corrupted save file encountered. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected static final String FILE_NAME \u003d \"/save.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected static boolean hasLoadingError \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected final String location;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected final File savefile;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected ArrayList\u003cTask\u003e listFromFile;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected boolean isEmptySave;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected FileWriter writer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param specifiedLocation The directory for the save file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Storage(String specifiedLocation) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.location \u003d specifiedLocation;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.savefile \u003d new File(specifiedLocation + FILE_NAME);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Retrieves tasks loaded from save file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Task list retrieved from save file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public ArrayList\u003cTask\u003e getListFromFile() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return listFromFile;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Verifies save file directory and loads the save file from disk"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * If unable to load, then resets the save file and the task list to empty."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            checkIfSaveFileExists();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            this.listFromFile \u003d loadListFromFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            this.listFromFile \u003d resetSaveFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Checks whether the directory path and the save file exist."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException If unable to access the specified directory."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void checkIfSaveFileExists() throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Path path \u003d Paths.get(location);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Checks if directory exists, if not creates it"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (!Files.isDirectory(path)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Checks if save file exists, if not creates it"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                File dir \u003d new File(location);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                boolean isDirCreated \u003d dir.mkdir();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                if (isDirCreated) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    System.out.println(\"Created directory at: \" + location);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Once save file is newly created, isEmptySave will be true"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            this.isEmptySave \u003d savefile.createNewFile();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, error checking if save file exists\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Loads the tasks and task list from the save file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Task list of tasks parsed from save file"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException If save file contains tasks of wrong format/ invalid tasks numbers/ invalid done tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public ArrayList\u003cTask\u003e loadListFromFile() throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Loading from save file...\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (isEmptySave || savefile.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Checks if save file is empty, returns empty task list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(\"Current save file is empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return list;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Scanner sc \u003d new Scanner(savefile);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Reads the number of tasks to be parsed then parses the tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            int noOfTasks \u003d Integer.parseInt(sc.nextLine());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Read all tasks from savefile"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            for (int i \u003d 0; i \u003c noOfTasks; i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    Task newTodo \u003d Parser.parseNewTaskCommand(input, Task.TaskType.TODO);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    list.add(newTodo);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    Task newDeadline \u003d Parser.parseNewTaskCommand(input, Task.TaskType.DEADLINE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    list.add(newDeadline);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    Task newEvent \u003d Parser.parseNewTaskCommand(input, Task.TaskType.EVENT);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    list.add(newEvent);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    throw new DukeException(\"\\u2639 Whoops, error parsing \" + \u0027\"\u0027 + input + \u0027\"\u0027 + \" in save file\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Marks completed tasks as done"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                int doneTaskIndex \u003d Integer.parseInt(sc.next());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                list.get(doneTaskIndex).markAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Prints the number of tasks loaded"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(\"Successfully loaded: \" + list.size() + \" task(s)\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IOException e1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, error reading from \" + location + FILE_NAME);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IndexOutOfBoundsException | NoSuchElementException | NumberFormatException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, save file is corrupted, error encountered: \""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                + e.getLocalizedMessage().toLowerCase());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, save file is corrupted, error loading task\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Prompts user for confirmation to reset task list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Empty task list."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public ArrayList\u003cTask\u003e resetSaveFile() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // If fail to load save file, prompts user to reset the savefile"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Type restart to reset task list or anything else to exit.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (!scanner.nextLine().equals(\"restart\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // No confirmation, terminates the program"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            hasLoadingError \u003d true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return newList;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Resets save file to empty"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            this.saveToFile(newList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Ui.greet();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (DukeException e1) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(e1.getMessage());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assert !hasLoadingError : \"Error resetting the save file after user confirmation\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Saves the task list and its tasks to a .txt file."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param list Task list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException If error write tasks to save file."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void saveToFile(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            this.writer \u003d new FileWriter(location + FILE_NAME);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            String doneIndexes;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Saves the current number of tasks in task list"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            writer.write(list.size() + System.lineSeparator());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            StringBuilder doneIndexesBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                if (t.isDone()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    doneIndexesBuilder.append(i).append(\" \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Saves each task to file"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                writer.write(t.printSaveFormat() + System.lineSeparator());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            doneIndexes \u003d doneIndexesBuilder.toString();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (!doneIndexes.equals(\"\")) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Saves the index of completed tasks"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                writer.write(doneIndexes + System.lineSeparator());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, error saving to save file\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 198
    }
  },
  {
    "path": "src/main/java/duke/TaskListHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Contains the task list and handles any operations regarding the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class TaskListHandler {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected Stack\u003cArrayList\u003cTask\u003e\u003e undoTaskLists;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected Stack\u003cString\u003e inputsToUndo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Stores tasks from save file or empty task list if save file unavailable."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param list Task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public TaskListHandler(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.tasks \u003d list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.inputsToUndo \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.undoTaskLists \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Retrieves the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Adds specified task to the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param task Task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Removes all tasks from task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return An empty task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public ArrayList\u003cTask\u003e clearList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Ui.indent(1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"The list of tasks has successfully been cleared.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Prints the list and the number of items in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if task list is currently empty."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void printList() throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, the list of tasks is empty, pls add tasks first!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        int listPos \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++, listPos++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Ui.indent(1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(listPos + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assert listPos \u003e 0 : \"Error printing task at position \" + listPos + \" when printing task list\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"You have \" + tasks.size() + \" task(s) in the list\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Finds tasks in the task list matching the keyword both entirely and partially."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param keyword The word to search for."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Task list containing the tasks containing the keyword."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if keyword input by the user is empty."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        boolean hasFoundTask \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    foundTasks.add(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    hasFoundTask \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (!hasFoundTask) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Unable to find any matching task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, the keyword to search for cannot be empty!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Provides the functionality of undo-ing a previous command by reverting task list to the state"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * before the previous command was given."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException If there are no more previous modifications to the task list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void retrievePreviousTaskList() throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (undoTaskLists.empty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, there are no more commands to undo!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String previousCommand \u003d inputsToUndo.pop();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"The previous command: \" + \u0027\"\u0027 + previousCommand + \u0027\"\u0027 + \" has been undone!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e previousTaskList \u003d undoTaskLists.pop();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        tasks \u003d previousTaskList;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Provides the history for undo command by saving current task list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Keeps a deep-copy of all the tasks in the current task list and the given user input for future retrieval."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * This is only called prior to commands that modify the task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param command Current user input given."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void saveCurrentTaskList(String command) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            savedTaskList.add(t.deepCopy());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        undoTaskLists.push(savedTaskList);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        inputsToUndo.push(command);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 136
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Represents all user interaction with Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /** Class-wide variable to know whether to continue running user interface. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected static boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected static String logo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected final TaskListHandler taskListHandler;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Initializes the Ui with the task list and storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param taskListHandler Contains the task list and its operations."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Contains all operations related to loading and saving of tasks to disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Ui(TaskListHandler taskListHandler, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.taskListHandler \u003d taskListHandler;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void exitDuke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        isRunning \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Runs the user interface which scans for input, parsing it and executes valid commands."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Terminates when empty line is detected, when input file is used."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                Command c \u003d Parser.parse(input, taskListHandler);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                c.execute(taskListHandler, storage, input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } catch (NoSuchElementException e1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Encounter end of file, terminate"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                isRunning \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                DukeException.tryAgain();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Provides indentation for formatting."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param times The number of 4 spaces to be printed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void indent(int times) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        for (int i \u003d 0; i \u003c times; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.print(\"    \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Prints success message and list size after task added/deleted."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param operation Type of command."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param currentTask Task that was modified."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void printSuccess(String operation, Task currentTask, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // Prints success message and list size after task added/deleted"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        switch (operation) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.print(\"Yes! I have successfully added:\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.print(\"Alright! I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(\"Good job! You completed:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(\"I have found the matching tasks in your list: \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            for (Task t: taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                indent(1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(t);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            assert false : \"Error printing success message of \" + operation;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        indent(1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(currentTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Prints the greeting message."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(getGreeting());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Retrieves the greeting in string format for GUI."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Greeting."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static String getGreeting() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        setLogo();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String greeting \u003d \"Hey! I\u0027m Duke the chatbot!\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String doForYou \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return logo + \"\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + greeting + \"\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + doForYou + \"\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Initializes the duke logo."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void setLogo() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        logo \u003d \"              D U K E\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 130
    }
  },
  {
    "path": "src/main/java/duke/command/AbstractModifyTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Generic modify task command which inherits from generic command class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Parent to DoneCommand and DeleteCommand."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Takes in task to be modified as parameter."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public abstract class AbstractModifyTaskCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected final Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public AbstractModifyTaskCommand(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 16
    }
  },
  {
    "path": "src/main/java/duke/command/AddAbstractTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Generic add task command which inherits from generic command class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Parent to TodoCommand, DoneCommand and EventCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Takes in new task to be added to task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public abstract class AddAbstractTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected final Task newTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public AddAbstractTaskCommand(Task newTask) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.newTask \u003d newTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Generic method for adding new task to the list, printing success and saving updated list to save file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d handler.getTasks();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.addToList(newTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Ui.printSuccess(\"add\", newTask, taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.saveCurrentTaskList(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        storage.saveToFile(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from generic command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Exits duke.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Terminates the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Bye bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Duke closing... \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Ui.exitDuke();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Removes ALL tasks.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Clears the task list, printing success and saving updated list to save file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        taskList \u003d handler.clearList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        for (Task t1 : taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(t1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.saveCurrentTaskList(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        storage.saveToFile(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 31
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Generic abstract command class with a execute method to be implemented."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Performs actions specific to each command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException If error encountered while executing command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public abstract void execute(TaskListHandler handler, Storage storage, String input) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Adds a deadline task to the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from AddAbstractTaskCommand which inherits from generic command class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class DeadlineCommand extends AddAbstractTaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Adds a deadline task with time.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Fields: \" + \"[description]\" + \" /by \" + \"[time] \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" Programming Assignment /by 2020-10-10 1800\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public DeadlineCommand(Task newTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(newTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Deletes a task given by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from generic AbstractModifyTaskCommand class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class DeleteCommand extends AbstractModifyTaskCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Deletes the task specified by the task number in the\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \" list.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Fields: \" + \"[task number] \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 3 \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public DeleteCommand(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Removes the task indicated by number, from the task list,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * printing success and saving updated list to save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d handler.getTasks();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.getTasks().remove(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Ui.printSuccess(\"delete\", task, taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.printList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.saveCurrentTaskList(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        storage.saveToFile(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Marks a provided task as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from AbstractModifyTaskCommand which inherits from generic command class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class DoneCommand extends AbstractModifyTaskCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Completes the task specified by the task number in \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"the list.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Fields: \" + \"[task number] \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" 1 \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public DoneCommand(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Marks given task as done, printing success and saving updated list to save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d handler.getTasks();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"\\u2639 Whoops, The following task has already been completed: \\n\" + \"    \" + task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Ui.printSuccess(\"done\", task, tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.printList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.saveCurrentTaskList(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 45
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Adds an event task to the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from AddAbstractTaskCommand which inherits from generic command class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class EventCommand extends AddAbstractTaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Adds an event task with time.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Fields: \" + \"[description]\" + \" /at \" + \"[time] \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" Meeting /at Noon\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public EventCommand(Task newTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(newTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from generic command class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Searches for tasks matching the given keyword.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Fields: \" + \"[description] \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" books \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Finds tasks matching the keyword."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if keyword to search for is empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // Second word in user input is the keyword to search for"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d handler.findTasksByKeyword(keyword);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (!foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Found tasks matching keyword"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Ui.printSuccess(\"find\", foundTasks.get(0), foundTasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Unable to find any matching task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(\"I couldn\u0027t find any tasks matching \" + \u0027\"\u0027 + keyword + \u0027\"\u0027 + \".\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 40
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Shows all the valid commands recognized by Duke.\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Guides the user on how to use an individual command or all commands if none specified."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input Command specified by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException if Invalid command entered after help."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            String commandGiven \u003d input.trim().split(\" \")[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            switch (commandGiven) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(ByeCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(ListCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(DoneCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(DeleteCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"clear\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(ClearCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(DeadlineCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(EventCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(TodoCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(FindCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            case \"undo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(UndoCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                throw new DukeException(\"\\u2639 Whoops, \" + \u0027\"\u0027 + commandGiven + \u0027\"\u0027 + \" is not a valid command for \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    + \"help! \\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    + \"Try entering \u0027help\u0027 to show all commands.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(\"Here\u0027s how to use all the commands!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + DeadlineCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + EventCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + TodoCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + ByeCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + ListCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + FindCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + ClearCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + UndoCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + DoneCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(counter + \") \" + DeleteCommand.COMMAND_USAGE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 92
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Throws DukeException when invalid command is given."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from generic command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Notifies user that command is not recognized and asks the user to input again."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        throw new DukeException(\"\\u2639 Whoops, I\u0027m sorry but I don\u0027t know what \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + \u0027\"\u0027 + input + \u0027\"\u0027 + \" means :-(\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from generic command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Displays all tasks and their details.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Prints the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.printList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 27
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Adds a to do task to the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from AddAbstractTaskCommand which inherits from generic command class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class TodoCommand extends AddAbstractTaskCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Adds a todo task.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Fields: \" + \"[description] \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD + \" Finish assignment\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public TodoCommand(Task newTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(newTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 18
    }
  },
  {
    "path": "src/main/java/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.TaskListHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from generic command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"undo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Undo the previous command, \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"but cannot undo an undo command.\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Reverts the previous command given by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param handler Task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param storage Storage instance."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @throws DukeException If there are no more previous commands to revert."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void execute(TaskListHandler handler, Storage storage, String input) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.retrievePreviousTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.printList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        storage.saveToFile(handler.getTasks());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 29
    }
  },
  {
    "path": "src/main/java/duke/data/save.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "7"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo Resume"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline Send Email /by 13 Sept 2020, 06:00 PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event Google Career Talk /at U-Town"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event Software Engineering class /at 3pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline Submission of Essay /by 6pm on Thursday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo asdasdasd"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo asdasdasd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "1 2 "
      }
    ],
    "authorContributionMap": {
      "eugene3231": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Represents a deadline task with description and by-time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String SEPARATOR \u003d \"/by\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Initializes with a description and the time that deadline should be completed by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param desc Description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param by Time to be completed by."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Deadline(String desc, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.time \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        parseDate(by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Processes user input into into another datetime format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * e.g. 2020-10-10 1800 into 10 Oct 2020 6:00 PM"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * if user input doesnt match this format then accept normal string as time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param input User input for the time for deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void parseDate(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(input, formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            time \u003d parsedDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.print(\"\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Converts the task to a string for saving."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return String representing a task in save file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String printSaveFormat() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"deadline \" + super.printSaveFormat() + \" /by \" + time;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Converts the task to a string indicating type of task, done, description and time (if applicable)."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return String representing task in user interface."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Subroutine for deep-copying a deadline"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param t Deadline task to be copied."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Deep copy of the deadline task given."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static Deadline deepCopyDeadline(Task t) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Deadline deadlineCopy \u003d new Deadline(t.description, t.time);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        deadlineCopy.status \u003d t.status;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return deadlineCopy;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Represents an event task with description and at-time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static final String SEPARATOR \u003d \"/at\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Initializes with a description and the time of event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param desc Description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param at Time of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Event(String desc, String at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.time \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Converts the task to a string for saving."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return String representing a task in save file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String printSaveFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"event \" + super.printSaveFormat() + \" /at \" + time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Converts the task to a string indicating type of task, done, description and time (if applicable)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return String representing task in user interface."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Subroutine for deep-copying an event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param t Event task to be copied."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Deep copy of the event task given."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static Event deepCopyEvent(Task t) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Event eventCopy \u003d new Event(t.description, t.time);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        eventCopy.status \u003d t.status;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return eventCopy;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Represents a generic task, initializes to not done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected TaskStatus status;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Denotes whether task is done or not done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public enum TaskStatus {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        DONE, NOTDONE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Denotes specific type of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Initializes with a description and sets task to not done by default."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param desc Description."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.status \u003d TaskStatus.NOTDONE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.description \u003d desc;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Retrieves task description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Task\u0027s description"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Represents done or not done in string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return unicode character for tick/cross."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return (this.status \u003d\u003d TaskStatus.DONE"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // return tick or X symbols"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            ? \"\\u2714\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            : \"\\u2718\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Marks given task as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.status \u003d TaskStatus.DONE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Queries whether task is completed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return whether the task is done or not"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return this.status \u003d\u003d TaskStatus.DONE;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Converts the task to a string for saving."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return String representing a task in save file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String printSaveFormat() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Converts the task to a string indicating type of task, done, description and time (if applicable)."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return String representing task in user interface."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Compares task by description and status."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (!(o instanceof Task)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Task task \u003d (Task) o;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return description.equals(task.description)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            \u0026\u0026 status \u003d\u003d task.status;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return Objects.hash(description, status);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Returns a deep copy of the current task to be retrieved later when undo is called."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Deep copy of the given task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Task deepCopy() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return Deadline.deepCopyDeadline(this);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (type \u003d\u003d TaskType.EVENT) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return Event.deepCopyEvent(this);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return Todo.deepCopyTodo(this);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 131
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Represents a to do task with description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " * Inherits from Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Initializes with a description of the to do task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param desc Description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Converts the task to a string for saving."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return String representing a task in save file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String printSaveFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"todo \" + super.printSaveFormat();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Converts the task to a string indicating type of task, done, description and time (if applicable)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return String representing task in user interface."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * Subroutine for deep-copying a to do"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @param t To do task to be copied."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     * @return Deep copy of the to do task given."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static Todo deepCopyTodo(Task t) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Todo todoCopy \u003d new Todo(t.description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        todoCopy.status \u003d t.status;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return todoCopy;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 50
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"129.0\" prefWidth\u003d\"517.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #faf884; -fx-background-radius: 30; -fx-label-padding: 15;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            \u003cFont size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003cBorderPane xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "   \u003ccenter\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" focusTraversable\u003d\"false\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"777.0\" prefWidth\u003d\"605.0\" vvalue\u003d\"1.0\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" blendMode\u003d\"DARKEN\" prefHeight\u003d\"775.0\" prefWidth\u003d\"608.0\" style\u003d\"-fx-background-color: #D4F1F4;\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "   \u003c/center\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "   \u003cbottom\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "      \u003cVBox BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            \u003cHBox maxWidth\u003d\"1.7976931348623157E308\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                \u003cTextField fx:id\u003d\"userInput\" maxWidth\u003d\"Infinity\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"509.0\" promptText\u003d\"Talk to duke or type help \" style\u003d\"-fx-background-color: #D4F1F4; -fx-prompt-text-fill: grey; -fx-background-radius: 15;\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003cfont\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                        \u003cFont name\u003d\"Segoe UI Italic\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003c/font\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003ceffect\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                        \u003cDropShadow spread\u003d\"0.34\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003c/effect\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                  \u003c/TextField\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"107.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"107.0\" style\u003d\"-fx-background-color: #a6e1ff; -fx-background-radius: 15;\" text\u003d\"Enter\" textFill\u003d\"#5b5b5b\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003cfont\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                        \u003cFont name\u003d\"Segoe UI Bold\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003c/font\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003ceffect\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                        \u003cDropShadow /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003c/effect\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                  \u003c/Button\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "   \u003c/bottom\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 53
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void parseModifyTaskCommand() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TaskListHandler handler \u003d new TaskListHandler(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.addToList(new Deadline(\"assignment\", \"8pm\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.getTasks().get(0).markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"assignment\", \"8pm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        newDeadline.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertEquals(Parser.parseModifyTaskCommand(\"done 1\", handler), newDeadline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: parseModifyTaskCommandTest!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void parseNewTaskCommand() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Todo newToDo \u003d new Todo(\"assignment\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String command \u003d \"todo assignment\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertEquals(Parser.parseNewTaskCommand(command, Task.TaskType.TODO), newToDo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: parseNewTaskCommandTest!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void parseTaskWithTime() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Event newEvent \u003d new Event(\"fan-signing\", \"2pm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String command \u003d \"event fan-signing /at 2pm\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertEquals(Parser.parseTaskWithTimeSubroutine(command, Task.TaskType.EVENT), newEvent);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: parseTaskWithTimeTest!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void checkIsFieldEmpty() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String nameOfField \u003d \"taskDesc\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String emptyTaskDesc \u003d \"    \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        DukeException thrown \u003d assertThrows("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                DukeException.class, () -\u003e Parser.checkIsFieldEmpty(nameOfField, emptyTaskDesc),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                \"Expected checkIsFieldEmpty() to throw, but it didn\u0027t\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertTrue(thrown.getMessage().contains(\"\\u2639 Whoops, \" + nameOfField + \" cannot be empty\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: checkIsFieldEmptyTest!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 56
    }
  },
  {
    "path": "src/test/java/duke/TaskListHandlerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.FileDescriptor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "class TaskListHandlerTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void getTaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TaskListHandler handler \u003d new TaskListHandler(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.getTasks().add(new Todo(\"assignment\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        newTaskList.add(new Todo(\"assignment\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertEquals(handler.getTasks(), newTaskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: getTaskListTest!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void addToList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TaskListHandler handler \u003d new TaskListHandler(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.addToList(new Event(\"mega sale\", \"12pm\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        newTaskList.add(new Event(\"mega sale\", \"12pm\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertEquals(handler.getTasks(), newTaskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: addToListTest!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void clearList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TaskListHandler handler \u003d new TaskListHandler(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.addToList(new Event(\"mega sale\", \"12pm\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.clearList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertEquals(handler.getTasks(), new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: clearListTest!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void indent() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Ui.indent(5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String expectedOutput \u003d \"                    \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: indentTest!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    void printList() throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TaskListHandler handler \u003d new TaskListHandler(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.addToList(new Event(\"mega sale\", \"12pm\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.addToList(new Todo(\"assignment\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.addToList(new Deadline(\"submission\", \"9pm\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        handler.printList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String expectedOutput \u003d \"    Here are the tasks in your list:\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + System.getProperty(\"line.separator\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + \"        1. [E][\\u2718] mega sale (at: 12pm)\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + System.getProperty(\"line.separator\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + \"        2. [T][\\u2718] assignment\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + System.getProperty(\"line.separator\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + \"        3. [D][\\u2718] submission (by: 9pm)\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + System.getProperty(\"line.separator\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + \"    You have 3 task(s) in the list\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            + System.getProperty(\"line.separator\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        assertEquals(expectedOutput, outContent.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.setOut(new PrintStream(new FileOutputStream(FileDescriptor.out)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Passed: printListTest!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 87
    }
  },
  {
    "path": "text-ui-test/data/save.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo final task"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 2
    }
  },
  {
    "path": "text-ui-test/exceptions.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todoasdadas"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadlineded"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline testing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline testing "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline testing /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline testing /asdas"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline testing /asdasd 123"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "eventasdasdasd"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event testing"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event testing "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event testing /at"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event testing /asdas"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event testing /asdasd 123"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todoasdadas"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "doneasdasdasd"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 22"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 22 33"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 2222222222"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 1 2"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 1 2 3 4 5 6"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done poop"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done poop poop"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deleteasdasdasd"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 22"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 22 33"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 2222222222"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 1 2"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 1 2 3 4 5 6"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete poop"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete poop poop"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 51
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline submit assignment /by tues 9pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event meeting /at monday 2pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo finish assignment"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo final task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 22
    }
  },
  {
    "path": "text-ui-test/loadsavefile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo assignment"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo resume"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event meeting /at 1pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo settle problem"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline send email /by 10 Oct 2020, 09:00 PM"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 7
    }
  },
  {
    "path": "text-ui-test/runexceptions.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "del exceptions_ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "dir /s /B \"..\\src\\main\\java\\*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "javac  -cp \"..\\src\" -Xlint:none -d \"..\\bin\" @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "java -classpath \"..\\bin\" Duke \u003c exceptions.txt \u003e exceptions_ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "FC exceptions_ACTUAL.TXT exceptions_EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "dir /s /B \"..\\src\\main\\java\\duke\\*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "javac  -cp \"..\\src\" -Xlint:none -d \"..\\bin\" @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "java -classpath \"..\\bin\" duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 3,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\DialogBox.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\Launcher.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\Main.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\MainWindow.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\Parser.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\Storage.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\TaskListHandler.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\Ui.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\AbstractModifyTaskCommand.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\AddAbstractTaskCommand.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\ByeCommand.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\ClearCommand.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\Command.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\DeadlineCommand.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\DeleteCommand.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\DoneCommand.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\EventCommand.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\FindCommand.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\InvalidCommand.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\ListCommand.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\command\\TodoCommand.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\task\\Deadline.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\task\\Event.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\task\\Task.java"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "C:\\Users\\User\\Desktop\\github\\ip\\src\\main\\java\\duke\\task\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 27
    }
  }
]
