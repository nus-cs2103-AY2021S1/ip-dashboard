[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    archiveBaseName \u003d \"dukeLauncher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //configFile \u003d file(\u0027config/checkstyle/checkstyle.xml\u0027)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 18,
      "-": 44
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 103
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Deadline class extends Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates a Deadline object with task name, completion status and due date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name Name of the Deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status Completion status (whether it is completed)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param dueDate Due date of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Deadline(String name, Status status, String dueDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.localDate \u003d LocalDate.parse(dueDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * String value to represent the object when printed for user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return String value that represents the Deadline object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[D] \" + this.getStatus().statusToSymbol() + this.getName()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \" by: \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + localDate.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generates a String that represents the object to be stored in the data management file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return A String to be written into the text file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toStore() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[D] \" + this.getStatus().statusToSymbol() + this.getName()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \" by: \" + dueDate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 46,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * The Duke program implements an application that simulates a smart task manager with the name Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * The program takes in user inputs with various formats and process them as tasks to be finished."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/jiji.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/totoro.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Returns a new Duke object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param filePath The path or intended path of the data management file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If data management file fails to be created or accessed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If other errors occur."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Duke(String filePath) throws IOException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor with no arguments."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Duke() throws IOException, DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        storage \u003d new Storage(\"todo.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Prompt user to key in their input with a welcome message"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If user input is of incorrect format or other unidentified error occurs"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If fails to take user input or create/access data management file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public String welcomeMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //welcoming message"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____           _        \\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \"|   __  \\\\_    _|  |  ___ \\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  |   |   |  |  |  |  |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \"|  |__|   |  |_|  |    \u003c  __/\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \"|_____/\\\\___/|_|\\\\_\\\\__|\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        logo \u003d logo + (\"Hello! Duke at your service. Please name your request.\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \"\\nAll dates should be in the form of YYYY-MM-DD: \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return logo;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        // Take user Input"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //ui.takeUserInput(storage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates a new Duke object and runs the program"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //    new Duke(\"/Users/chengjiyuqing/Desktop/Year 2 Sem 1/CS2103T/ip/src/main/java/seedu/duke/todo.txt\").run();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    protected String getResponse(String input) throws IOException, DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return Parser.parseInput(input,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                //new Storage(\"/Users/chengjiyuqing/Desktop/Year 2 Sem 1/CS2103T/ip/src/main/java/seedu/duke/todo.txt\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                new Storage(\"todo.txt\"));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 94,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Sends error message."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Sends an error message to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param msg"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public DukeException (String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Event class extends Task class to represent a task that happens at certain time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name Name of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status Completion status of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param time Time of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Event(String name, Status status, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.localDate \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * String value to represent the object when printed for user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return String value that represents the Event object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[E] \" + this.getStatus().statusToSymbol() + this.getName() + \" at: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + localDate.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generates a String that represents the object to be stored in the data management file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return A String to be written into the text file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toStore() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[E] \" + this.getStatus().statusToSymbol() + this.getName() + \" at: \" + time;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Main() throws IOException, DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jiji.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/totoro.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Image bgImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/totoroBg2.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * initialize scrollPane with a background image."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        BackgroundImage bgImage \u003d new BackgroundImage(this.bgImage, BackgroundRepeat.REPEAT, BackgroundRepeat.REPEAT,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                BackgroundPosition.DEFAULT,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                BackgroundSize.DEFAULT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        dialogContainer.setMaxHeight(Double.POSITIVE_INFINITY);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //scrollPane.setFitToHeight(false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Background background \u003d new Background(bgImage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        dialogContainer.setBackground(background);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        DialogBox welcomeMessage \u003d DialogBox.getUserDialog(d.welcomeMessage(), dukeImage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        welcomeMessage.flip();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        dialogContainer.getChildren().addAll(welcomeMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void handleUserInput() throws IOException, DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 67
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Parse a line from storage file and generate the corresponding task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param taskString String retrieved from storage file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return The task item that was recorded."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If the String is of invalid format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    static Task parseFileItemToTask (String taskString) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (taskString.isBlank()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        char status \u003d taskString.charAt(5);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        boolean isTodo \u003d taskString.startsWith(\"[T]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        boolean isTodoWithinPeriod \u003d isTodo \u0026\u0026 taskString.contains(\"from: \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        boolean isEvent \u003d taskString.startsWith(\"[E]\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        boolean isDeadline \u003d taskString.startsWith(\"[D]\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        assert (status \u003d\u003d \u0027\\u2713\u0027 || status \u003d\u003d \u0027\\u2718\u0027)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                : \"Data Storage Error: Task status not recognizable\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        assert (isTodo || isDeadline || isEvent)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                : \"Data Storage Error: Task type not recognizable\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (isTodoWithinPeriod) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d taskString.split(\"from: \")[0].substring(8);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String startDate \u003d taskString.split(\"from: \")[1].split(\" by: \")[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String endDate \u003d taskString.split(\"by: \")[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (status \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new TodoWithinPeriod(name, Task.Status.DONE, startDate, endDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (status \u003d\u003d \u0027\\u2718\u0027) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new TodoWithinPeriod(name, Task.Status.PENDING, startDate, endDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (isTodo) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d taskString.substring(8);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (status \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Todo(name, Task.Status.DONE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (status \u003d\u003d \u0027\\u2718\u0027) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Todo(name, Task.Status.PENDING);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (isDeadline) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d taskString.split(\" by: \")[0].substring(8);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String dueDate \u003d taskString.split(\" by: \")[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (status \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Deadline(name, Task.Status.DONE, dueDate);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (status \u003d\u003d \u0027\\u2718\u0027) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Deadline(name, Task.Status.PENDING, dueDate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (isEvent) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d taskString.split(\" at: \")[0].substring(8);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String dueDate \u003d taskString.split(\" at: \")[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (status \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Event(name, Task.Status.DONE, dueDate);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (status \u003d\u003d \u0027\\u2718\u0027) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Event(name, Task.Status.PENDING, dueDate);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Parse user\u0027s input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Store the task created by the user into the storage file if applicable."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param userMessage User input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param storage Storage item that contains information of data storage file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If user input is of invalid format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException For error with files."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    static String parseInput (String userMessage, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        ArrayList\u003cTask\u003e itemList \u003d storage.load();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.equals(\"bye\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return \"Bye! Nice serving you. Hope to see you again soon! :D\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            ArrayList\u003cTask\u003e selectedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String searchedItem \u003d userMessage.substring(5);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            for (Task task: itemList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                if (task.getName().contains(searchedItem)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                    selectedTasks.add(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + (\"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            for (int i \u003d 0; i \u003c selectedTasks.size(); i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                Task task \u003d selectedTasks.get(i);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                result \u003d result + ((i + 1) + \" \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //list down the contents in the list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.equals(\"list\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            itemList \u003d storage.load();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + (\"Here is your list: \\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            for (int i \u003d 0; i \u003c itemList.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                Task task \u003d itemList.get(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                result \u003d result + ((i + 1) + \" \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //mark something as done"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.contains(\"done\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            int index \u003d Character.getNumericValue(userMessage.charAt(5)) - 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task task \u003d itemList.get(index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            storage.modifyWithList(itemList);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + (\"Good job! You have finished this task! \\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + task.toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.contains(\"undo\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            int index \u003d Character.getNumericValue(userMessage.charAt(5)) - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task task \u003d itemList.get(index);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            task.undo();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            storage.modifyWithList(itemList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + (\"The following task has been marked as pending! \\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + task.toString();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //delete task"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.contains(\"delete\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            int index \u003d Character.getNumericValue(userMessage.charAt(7)) - 1;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task task \u003d itemList.get(index);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            itemList.remove(index);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            storage.modifyWithList(itemList);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + (\"I have deleted this task for you: \\n\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + (task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + (\"You now have \" + itemList.size() + \" tasks in your list!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //valid task entries"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Task newItem;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.contains(\"/from \")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d userMessage.split(\"/from \")[0].substring(5);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String startDate \u003d userMessage.split(\"/from \")[1].split(\" /by \")[0];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String endDate \u003d userMessage.split(\"/by \")[1];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            newItem \u003d new TodoWithinPeriod(name, Task.Status.PENDING, startDate, endDate);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else if (userMessage.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d userMessage.substring(5);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (!name.isEmpty() \u0026\u0026 !name.isBlank()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                newItem \u003d new Todo(name, Task.Status.PENDING);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                result \u003d result + (\"Oops, tasks cannot be empty\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else if (userMessage.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d userMessage.split(\"/by \")[0].substring(9);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (!userMessage.contains(\"/by \")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                result \u003d result + (\"Sorry, incorrect format for Deadlines. \\n Please specify a Due Date \""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                        + \"(and task name)\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (name.isEmpty() || name.isBlank()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                result \u003d result + (\"Oops, tasks cannot be empty\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String dueDate \u003d userMessage.split(\"/by\")[1].substring(1);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            newItem \u003d new Deadline(name, Task.Status.PENDING, dueDate);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else if (userMessage.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d userMessage.split(\"/at \")[0].substring(6);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (!userMessage.contains(\"/at\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                result \u003d result + (\"Sorry, incorrect format for Events. \\n Please specify a time \""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                        + \"(and task name)\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (name.isEmpty() || name.isBlank()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                result \u003d result + (\"Oops, tasks cannot be empty\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String time \u003d userMessage.split(\"/at \")[1];"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            newItem \u003d new Event(name, Task.Status.PENDING, time);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            result \u003d result + (\"Sorry, I do not understand this command\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Storage.todoToFile(newItem);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        result \u003d result + (\"new task added: \\n\" + newItem.toString() + \"\\n\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        result \u003d result + (\"You now have \" + (itemList.size() + 1) + \" tasks in your list!\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 204
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Data and file manager of Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private static String path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private ArrayList\u003cTask\u003e itemList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates a new Storage object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param path The path to create (or access) the data management file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If file fails to be created or accessed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Storage (String path) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        System.out.println(path);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        file \u003d new File(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Record a task into the data management file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param task Task to be recorded."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If file fails to be created or accessed"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    static void todoToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        FileWriter appendFile \u003d new FileWriter(path, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        System.out.println(task.toStore());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        appendFile.write(task.toStore());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        appendFile.write(\"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        appendFile.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Rewrites the data management file with a new array of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param list List of tasks to be written."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If data management file fails to be created or accessed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void modifyWithList(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        FileWriter clearFile \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        clearFile.write(\"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        clearFile.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        FileWriter appendFile \u003d new FileWriter(path, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            appendFile.write(task.toStore());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            appendFile.write(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        appendFile.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Load the content in the file to an ArrayList of tasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return An ArrayList of tasks as recorded in the data management file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If other error occurs."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws FileNotFoundException If data management file fails to be created or accessed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //load data onto itemList"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Scanner fileSc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        itemList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        while (fileSc.hasNextLine()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task newItem;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String taskString \u003d fileSc.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            newItem \u003d Parser.parseFileItemToTask(taskString);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            itemList.add(newItem);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return itemList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 85
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Represents a task item that user creates."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Represents the completion status of a task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * PENDING: the task has yet to be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * DONE: the task is already completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public enum Status {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        PENDING,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        DONE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         * Produce a String to represent the completion status of a task to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        public String statusToSymbol() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (this \u003d\u003d DONE) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return \"[\\u2713] \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return \"[\\u2718] \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Status status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name Name of the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status Completion status of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Task(String name, Status status) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    String getName() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    Status getStatus() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Change the status of the task to DONE"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.status \u003d Status.DONE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generate a String that represents this task object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * This String is to be stored into data management file, not to be printed for user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return The String generated"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Undo the task, change the status of a task back to PENDING."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void undo() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.status \u003d Status.PENDING;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 70
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * A list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param list A list of tasks to be managed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.taskList \u003d list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Add a task to the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Todo class extends Task class to represent a task that does not have a specific time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name Name of the todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status Completion status of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Todo(String name, Status status) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generates a String that represents the object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * This String is used for printing to user as well as to be stored in the data management file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return A String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[T] \" + this.getStatus().statusToSymbol() + this.getName();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 30
    }
  },
  {
    "path": "src/main/java/seedu/duke/TodoWithinPeriod.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Deadline class extends Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class TodoWithinPeriod extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private String startDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private String endDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private LocalDate formattedStartDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private LocalDate formattedEndDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param startDate"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param endDate"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public TodoWithinPeriod(String name, Status status, String startDate, String endDate) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.formattedStartDate \u003d LocalDate.parse(startDate);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.formattedEndDate \u003d LocalDate.parse(endDate);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * String value to represent the object when printed for user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return String value that represents the Deadline object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[T] \" + this.getStatus().statusToSymbol() + this.getName()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \"from: \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + formattedStartDate.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \" by: \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + formattedEndDate.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generates a String that represents the object to be stored in the data management file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return A String to be written into the text file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[T] \" + this.getStatus().statusToSymbol() + this.getName()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \"from: \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + startDate"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + \" by: \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                + endDate;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 59
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * This class handles interaction with user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * This class prompts user to input their message and react accordingly."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //Object to store the list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private ArrayList\u003cTask\u003e itemList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //create file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private String path \u003d \"/Users/chengjiyuqing/Desktop/Year 2 Sem 1/CS2103T/ip/src/main/java/seedu/duke/todo.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates a new Ui object with a Scanner."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException For invalid user inputs."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException For file errors."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Ui() throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Handles user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Passes valid user input to Parser class for further process."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param storage A Storage object that handles data storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public String takeUserInput(Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String userMessage \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            //exit"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (userMessage.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return \"Bye! Nice serving you. Hope to see you again soon! :D\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return Parser.parseInput(userMessage, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] homework"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 1
    }
  },
  {
    "path": "src/main/out/production/ip/duke/todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] hihi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] sleep"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 2
    }
  },
  {
    "path": "src/main/out/todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✓] sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[D] [✓] shower  by: 11"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[D] [✓] proj  by: tmr"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 3
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            \u003cFont name\u003d\"Chalkboard\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"54.0\" fitWidth\u003d\"54.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: pink;\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            \u003cFont size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 23
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //set up a Storage instance for testing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    Storage defaultStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public ParserTest() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.defaultStorage \u003d new Storage(\"parserTest.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        FileWriter clearFile \u003d new FileWriter(\"parserTest.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        clearFile.write(\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        clearFile.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        file \u003d new File(\"parserTest.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     public void parse_input_to_file_test() throws IOException, DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        String msg \u003d \"todo sleep\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Parser.parseInput(msg,defaultStorage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Scanner fileSc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        String taskString \u003d fileSc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        assertEquals(\"[T] [✘] sleep\", taskString, \"wrong file recording\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 34
    }
  },
  {
    "path": "src/test/java/seedu/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    Storage testStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public StorageTest() throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        testStorage \u003d new Storage(\"storageTest.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        file \u003d new File(\"storageTest.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void is_file_created_test() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        assertEquals(true,file.isFile(), \"failed to create a file\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 22
    }
  },
  {
    "path": "src/test/parserTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] sleep"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 3,
      "-": 37
    }
  },
  {
    "path": "todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] wake up"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 2
    }
  }
]
