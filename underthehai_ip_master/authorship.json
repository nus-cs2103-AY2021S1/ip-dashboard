[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    mainClassName \u003d \"emily.app.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    archiveBaseName \u003d \"emily\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 20,
      "-": 42
    }
  },
  {
    "path": "data/emily.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "T1,english"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": "T0,chinese"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "T0,math"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "T0,math"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "T0,english"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "T0,english"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "T0,chinese"
      }
    ],
    "authorContributionMap": {
      "underthehai": 7
    }
  },
  {
    "path": "data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "T1,loading data"
      }
    ],
    "authorContributionMap": {
      "underthehai": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### A) Add Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "To add tasks to list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "1. ### `Todo` "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Add a task with description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "2. ### `Deadline`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Add a task with description and date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "3. ### `Event`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Add a task with description, date and time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "- `todo {name of task}`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "- `deadline {name of task /by {date}}`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "- `todo {name of task /at {date} {time}}`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`I have added this task for you {task}`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### Delete Task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "To delete tasks in the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### `Delete` "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Delete a task by its given index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`I have deleted this task for you: {task}`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### Find Task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Find all tasks with matching keyword given"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### `Find`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`find math`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`Here are the matching tasks: 1. {task1} 2. {tasks2}`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### Finish Task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "To mark task as finished"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### `Done` "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Mark the task at the given index as done with a tick"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`I have marked this task as done: {task1 [✓] }`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### View Schedule"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "underthehai"
        },
        "content": "To view the task on the given date"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### `View` "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "underthehai"
        },
        "content": "The bot will filter and show the list of task with the given date"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`view 2020-09-30`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "underthehai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`Here are the tasks on 30th September 2020: {task1}`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### Edit Task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "underthehai"
        },
        "content": "To modify task description"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### `Edit` "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "underthehai"
        },
        "content": "The bot will retrieve the task at the given index and edit the description"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`edit 1 English`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`I have changed the description for you: {newTaskName}`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### B) Exit Emily Bot"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "underthehai"
        },
        "content": "To exit the application"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "underthehai"
        },
        "content": "### `Bye` "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "underthehai"
        },
        "content": "The program will close"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "underthehai"
        },
        "content": "`Program will close`"
      }
    ],
    "authorContributionMap": {
      "underthehai": 92,
      "-": 20
    }
  },
  {
    "path": "src/main/java/emily/app/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Provide a structure to the information passed between user and bot"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public DialogBox(Label l, ImageView iv, Boolean bot) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        if (bot) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            text.setStyle(\"-fx-background-color: aliceblue\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            text.setStyle(\"-fx-background-color: mistyrose\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.setPadding(new Insets(10));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public static DialogBox getUserDialog(Label text, ImageView img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public static DialogBox getDukeDialog(Label text, ImageView img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        var db \u003d new DialogBox(text, img, true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 64
    }
  },
  {
    "path": "src/main/java/emily/app/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Launches the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Application.launch(UI.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 13
    }
  },
  {
    "path": "src/main/java/emily/app/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.app;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.command.Emily;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Listens to user input and provides a layout of the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class UI extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private final Image emily \u003d new Image(this.getClass().getResourceAsStream(\"/images/emily.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private final Emily bot \u003d new Emily();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        String intro \u003d \"Hello, I am Emily\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                + \"What can i do for you?\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, dialogContainer, userInput, sendButton);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        stage.setTitle(\"Emily\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        scrollPane.setPrefSize(385, 525);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        userInput.setPrefHeight(35);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        sendButton.setPrefHeight(35.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                new emily.app.DialogBox(getDialogLabel(intro), new ImageView(), true)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Emily\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(emily))"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        );"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Sends command to Emily bot. Ends the program if user sends \"bye\" command."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param input String of user\u0027s command"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return a string corresponding to the logic of the command"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"Emily receiving: \" + input + \"\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                + bot.receiveCommandLine(input);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 140
    }
  },
  {
    "path": "src/main/java/emily/command/Emily.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.storage.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Initialises the app components."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Emily {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/emily.txt\"; //store txt file under data folder"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private final Logic logic;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Manages the app components"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Loads the tasklist with existing saved tasks from previous sessions"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Emily() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        logic \u003d new Logic();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Copy constructor with preloaded txt file path"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param filePath where the data text is loaded from"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Emily(String filePath) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        logic \u003d new Logic();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String formatOutput(ArrayList\u003cString\u003e outputLines) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return outputLines.stream().map(x -\u003e (\"\\n    \" + x)).collect(Collectors.joining());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Reads the string of user command and return the corresponding output"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * by the program."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param userInputText user will type into the box"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return a String response from Emily"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String receiveCommandLine(String userInputText) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        boolean end \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ArrayList\u003cString\u003e outputLines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        /*The program within the loop"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        will set end as true once the command is completed without errors*/"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        while (!end) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                outputLines \u003d logic.readsLine(userInputText, tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                storage.saveData(tasks.getTaskArrayList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                end \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                return \"    OOPS! \" + e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        String output \u003d formatOutput(outputLines);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 82
    }
  },
  {
    "path": "src/main/java/emily/command/Logic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.storage.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Receives commands from user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Ensures commands are valid and modifies list of tasks accordingly."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private final Parser p;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    Logic() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.p \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Valid commands"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    enum Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        LIST, DELETE, TASK, DONE, FIND, VIEW, EDIT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Read a line of input from the user and modify the task list accordingly"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param input command from the user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param ls    to be modified"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException when there is invalid command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ArrayList\u003cString\u003e readsLine(String input, TaskList ls) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ArrayList\u003cString\u003e outputLines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Task current;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        int counter;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Command instruct \u003d checksValidInput(input, ls.getTaskArrayList().size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        switch (instruct) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        case LIST: //list out the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            int num \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            for (Task c : ls.getTaskArrayList()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String item \u003d \"    \" + num + \". \" + c;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                num++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                outputLines.add(item);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        case FIND: //find all tasks with matching keyword"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            ArrayList\u003cTask\u003e lsSameKeyword \u003d ls.findSameKeyword(keyword);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"Here are the matching tasks in your list\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            counter \u003d 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            for (Task t : lsSameKeyword) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                outputLines.add(counter + \". \" + t);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        case VIEW: //find all task with given date in format yyyy-mm-dd"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String date \u003d input.substring(5);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            ArrayList\u003cTask\u003e lsSameDate \u003d ls.findSameDate(date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String formattedDate \u003d LocalDate.parse(date).format(formatter);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"Here are the tasks on \" + formattedDate + \" in your list\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            counter \u003d 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            for (Task t : lsSameDate) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                outputLines.add(counter + \". \" + t);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            index \u003d Character.getNumericValue(input.charAt(5)) - 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            current \u003d ls.getTaskArrayList().get(index);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            current.setHasFinished(true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"Nice work, I have marked this task as done: \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    + current);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        case TASK: //call parser to convert to task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            current \u003d p.parse(input);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            ls.addTask(current);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"Got it! I have added this task: \" + current);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"Now you have \" + (ls.getTaskArrayList().size())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    + \" tasks in the list\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            index \u003d Character.getNumericValue(input.charAt(7)) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            current \u003d ls.getTaskArrayList().get(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            ls.deleteTask(index);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"I have deleted this task for you: \" + current);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"You have \" + ls.getTaskArrayList().size() + \" tasks in your list now\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        case EDIT:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            index \u003d Character.getNumericValue(input.charAt(5)) - 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            current \u003d ls.getTaskArrayList().get(index);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String newDescription \u003d input.substring(7);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            current.modifyDescription(newDescription);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            outputLines.add(\"I have edited the description for you: \" + current);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        default: //failure of the checkValidInput to check commands"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            assert false : \"checksValidInput has failed\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"Command is not recognised\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return outputLines;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Checks if the command given is valid and package the information"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * into a Command type"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param input               user command"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param currentTasklistSize the number of tasks"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return a Command type with information extracted from the task"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException thrown when the input is invalid"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Command checksValidInput(String input, int currentTasklistSize) throws DukeException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        String shortened \u003d input.trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        if (input.isEmpty() || shortened.isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"Empty Input\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            c \u003d Command.LIST;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"view\")) { //users will key in specific date"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (shortened.equals(\"view\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Missing date\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String timestamp \u003d input.substring(5);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                new Deadline(\"test\", timestamp); //check if timestamp is valid"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | java.time.DateTimeException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Format of timeline should be yyyy-mm-dd\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            c \u003d Command.VIEW;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (shortened.equals(\"delete\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Empty Index\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            int index \u003d Character.getNumericValue(input.charAt(7));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (index \u003e currentTasklistSize) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Index of \" + index + \" is invalid\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            c \u003d Command.DELETE;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (shortened.equals(\"done\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Index cannot be found\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            int index \u003d Character.getNumericValue(input.charAt(5));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (index \u003e currentTasklistSize || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Index is invalid\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            c \u003d Command.DONE;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (shortened.equals(\"todo\") || shortened.equals(\"deadline\") || shortened.equals(\"event\")"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    || shortened.equals(\"deadline/by\") || shortened.equals(\"event/at\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"The description cannot be empty\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            c \u003d Command.TASK;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (shortened.equals(\"find\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Missing keyword\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            c \u003d Command.FIND;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"edit\")) { //edit task description"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (shortened.equals(\"edit\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Index cannot be found\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else if (shortened.length() \u003c 7) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Please add description\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            int index \u003d Character.getNumericValue(input.charAt(5));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (index \u003e currentTasklistSize) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Index given is out of bounds\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            c \u003d Command.EDIT;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else { //Unrecognised command given by the user"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"I do not understand the command x.x\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 196
    }
  },
  {
    "path": "src/main/java/emily/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Deals with making sense of the user command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    Parser() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Convert the user input string to a proper Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param str of user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return A new Task with the input details"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException when the user input is invalid or is not in the proper form"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Task parse(String str) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Task item \u003d new Task(\"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        if (str.contains(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String describe \u003d str.substring(5);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            item \u003d new ToDos(describe);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            return item;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (str.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String description \u003d str.substring(9);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String[] temp \u003d description.split(\"/by \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                item \u003d new Deadline(temp[0].trim(), temp[1].trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                return item;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | java.time.DateTimeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Format of deadline should be /by yyyy-mm-dd\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (str.contains(\"event\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String description \u003d str.substring(6);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String[] temp \u003d description.split(\"/at \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                item \u003d new Event(temp[0].trim(), temp[1].trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                return item;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | java.time.DateTimeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"Format of event should be /at yyyy-mm-dd HHmm\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            assert false : \"String passed into parser fails logic\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"Unrecognised command\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 56
    }
  },
  {
    "path": "src/main/java/emily/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Alerts the program if logic fails."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "underthehai": 13
    }
  },
  {
    "path": "src/main/java/emily/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.ToDos;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Saves and loads data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private static String filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Storage.filepath \u003d filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Reads the information from the txt file and process into a list of task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Creates new txt file if file does not exist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return an Arraylist of Task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException invalid file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (f.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    char type \u003d line.charAt(0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    boolean isCompleted \u003d line.charAt(1) \u003d\u003d \u00271\u0027;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    String[] temp;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    switch (type) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    case \u0027T\u0027:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        temp \u003d line.split(\",\", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        Task t \u003d new ToDos(temp[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        t.setHasFinished(isCompleted);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        store.add(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    case \u0027D\u0027:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        temp \u003d line.split(\",\", 3);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        Task d \u003d new Deadline(temp[1], temp[2]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        d.setHasFinished(isCompleted);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        store.add(d);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    case \u0027E\u0027:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        temp \u003d line.split(\",\", 3);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        Task e \u003d new Event(temp[1], temp[2]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        e.setHasFinished(isCompleted);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        store.add(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        assert false : \"txt file contains invalid terms, please rewrite txt file\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            return store;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"file is not found\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"file already existed\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Updates the txt file when there are modifications to the task list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param store contains the updated list of task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException for invalid file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e store) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String txt \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            for (Task task : store) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String temp \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                if (task instanceof ToDos) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    temp \u003d \"T\" + (task.isHasFinished() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            + \",\" + task.getDescription();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    temp \u003d \"D\" + (task.isHasFinished() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            + \",\" + task.getDescription() + \",\" + ((Deadline) task).getBy();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    temp \u003d \"E\" + (task.isHasFinished() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            + \",\" + task.getDescription() + \",\" + ((Event) task).getAt();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                txt \u003d txt + temp + System.lineSeparator();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            fw.write(txt);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"invalid file\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 114
    }
  },
  {
    "path": "src/main/java/emily/storage/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Modifies the arraylist of tasks and contains the most updated list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.taskArrayList \u003d taskArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArrayList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.taskArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        taskArrayList.add(t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Removes the corresponding task based on the index"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param index provided by the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        assert index \u003c\u003d this.taskArrayList.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        taskArrayList.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Looks through the list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Provides a list of tasks containing the given keyword."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param keyword matches the task description"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return a list of task the user is finding"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ArrayList\u003cTask\u003e findSameKeyword(String keyword) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        for (Task t : this.taskArrayList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String d \u003d t.getDescription();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (d.contains(keyword)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                ls.add(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return ls;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Find tasks with the given date"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param keydate that the user wish to view the task on"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return an arraylist of task with the given date"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ArrayList\u003cTask\u003e findSameDate(String keydate) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        for (Task t : this.taskArrayList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String d \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                d \u003d ((Deadline) t).getBy();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                d \u003d ((Event) t).getAt();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                assert false : \"List has an unknown task type\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (d.contains(keydate)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                ls.add(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return ls;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 80
    }
  },
  {
    "path": "src/main/java/emily/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Represents a Deadline task which has a timestamp by a given date"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * and a description detail"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected String timeStamp;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Subclass of Task with timestamp"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param description String of the task name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param timeStamp   String of the time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Deadline(String description, String timeStamp) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.timeStamp \u003d timeStamp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.by \u003d LocalDate.parse(timeStamp);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Getter method to retrieve timestamp"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return timestamp in the format yyyy-mm--dd"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.timeStamp;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        //timestamp formatted to date"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                + this.by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 45
    }
  },
  {
    "path": "src/main/java/emily/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Represents an Event task which has a timestamp at a given time"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * and description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected String timeStamp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Subclass of Task with a timestamp"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param description detailing the name of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param timeStamp   in the form of yyyy-mm-dd hhmm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Event(String description, String timeStamp) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.timeStamp \u003d timeStamp;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.at \u003d LocalDateTime.parse(timeStamp, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Getter method to retrieve timestamp"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return String of the date in the form yyyy-mm-dd"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return timeStamp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        //timestamp formatted into a date"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                + \" (at: \" + this.at.format(formatter) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 47
    }
  },
  {
    "path": "src/main/java/emily/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Represents the basic structure of a sample task from the user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Contains a string of description detail."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected boolean hasFinished;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Task with description, default is marked as not done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param description contains a string of information about the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.hasFinished \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void setHasFinished(boolean b) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.hasFinished \u003d b;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public boolean isHasFinished() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.hasFinished;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void modifyDescription(String d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.description \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    //return a String of a tick or cross indicating completion of task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return (hasFinished ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 46
    }
  },
  {
    "path": "src/main/java/emily/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Represents a task that has a simple description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Subclass of Task with a given type"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param description time provided"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 22
    }
  },
  {
    "path": "src/test/java/emily/command/EmilyTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "class EmilyTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private Emily bot \u003d new Emily();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    void receiveCommandLine_validInput_successfullyAddTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        String testLine \u003d \"todo english\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        String actualOutput \u003d bot.receiveCommandLine(testline);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        String expectedOutput \u003d \"Got it! I have added this task: [T][\\u2718] english\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        assertTrue(actualOutput.contains(expectedOutput));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 20
    }
  },
  {
    "path": "src/test/java/emily/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import emily.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private Storage storage \u003d new Storage(\"data/test.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    void loadData_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            ArrayList\u003cTask\u003e ls \u003d storage.loadData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String actualTask \u003d ls.get(0).toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String expectedTask \u003d \"[T][\\u2713] loading data\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            assertEquals(actualTask, expectedTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 31
    }
  },
  {
    "path": "src/test/java/emily/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        LocalDateTime date \u003d LocalDateTime.parse(\"2020-01-10 1430\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        assertEquals(\"[E][\" + \"\\u2718\" + \"] book reading  (at: 10-Jan-2020 14:30)\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                new Event(\"book reading \", \"2020-01-10 1430\").toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "deadline return book /by Monday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": "todo Math"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "event book reading /at 430pm Tuesday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "underthehai": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "java -classpath ..\\bin main.java.Emily \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "underthehai": 3,
      "-": 19
    }
  }
]
