[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static List\u003cString\u003e getResponse(String s, String prefix, String[] suffix) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        List\u003cString\u003e response \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (prefix.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (suffix.length !\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"the \u0027bye\u0027 command shouldn\u0027t have anything behind.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else if (prefix.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (suffix.length !\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"the \u0027list\u0027 command shouldn\u0027t have anything behind.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                for (int i \u003d 0; i \u003c numberOfTasks; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    response.add(String.format(\"%d.%s\", i + 1, t.toString()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else if (prefix.equals(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (suffix.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String[] arr \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String description \u003d arr[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Task t \u003d new Todo(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                numberOfTasks++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"  \" + t.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"Now you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else if (prefix.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            boolean hasIdentifier \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            int index \u003d -1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            for (int i \u003d 0; i \u003c suffix.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if (suffix[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    index \u003d i;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    hasIdentifier \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (hasIdentifier \u0026\u0026 index \u003e 0 \u0026\u0026 suffix.length - 1 \u003e index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        description.append(suffix[i]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        description.append(\" \").append(suffix[i]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                StringBuilder doBy \u003d new StringBuilder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                for (int j \u003d index + 1; j \u003c suffix.length; j++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    if (j \u003d\u003d index + 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        doBy.append(suffix[j]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        doBy.append(\" \").append(suffix[j]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Task t \u003d new Deadline(description.toString(), doBy.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                numberOfTasks++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"  \" + t.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"Now you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"Ensure that deadlines have correct description.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else if (prefix.equals(\"event\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            boolean hasIdentifier \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            int index \u003d -1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            for (int i \u003d 0; i \u003c suffix.length; i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if (suffix[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    index \u003d i;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    hasIdentifier \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (hasIdentifier \u0026\u0026 index \u003e 0 \u0026\u0026 suffix.length - 1 \u003e index) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        description.append(suffix[i]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        description.append(\" \").append(suffix[i]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                StringBuilder when \u003d new StringBuilder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                for (int j \u003d index + 1; j \u003c suffix.length; j++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    if (j \u003d\u003d index + 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        when.append(suffix[j]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        when.append(\" \").append(suffix[j]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Task t \u003d new Event(description.toString(), when.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                numberOfTasks++;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"  \" + t.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                response.add(\"Now you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"Ensure that events have correct description.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else if (prefix.equals(\"done\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (suffix.length !\u003d 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"done should be followed by a single task number.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                int taskIndex \u003dInteger.parseInt(suffix[0]) - 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if (taskIndex \u003c 0 || taskIndex \u003e numberOfTasks - 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    throw new DukeException(\"Task does not exist/invalid task number.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    Task t \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    response.add(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    response.add(\"  \" + t.toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else if (prefix.equals(\"delete\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (suffix.length !\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"delete should be followed by a single task number.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                int deleteIndex \u003d Integer.parseInt(suffix[0]) - 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if (deleteIndex \u003c 0 || deleteIndex \u003e numberOfTasks - 1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    throw new DukeException(\"Task does not exist/invalid task number.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    Task t \u003d tasks.get(deleteIndex);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    tasks.remove(deleteIndex);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    numberOfTasks--;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    assert numberOfTasks \u003d\u003d tasks.size();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    response.add(\"Noted. I\u0027ve removed this task:\") ;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    response.add(\"  \" + t.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    response.add(\"Now you have \" + numberOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        boolean running \u003d true;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#############################################################\\n\" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"###|░██╗░░░░░░░██╗██╗░░░██╗███████╗|###############   #######\\n\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"###|░██║░░██╗░░██║██║░░░██║██╔════╝|###########   /~\\\\   #####\\n\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"###|░╚██╗████╗██╔╝██║░░░██║█████╗░░|########   _- `~~~\u0027, ####\\n\" +"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"###|░░████╔═████║░██║░░░██║██╔══╝░░|######  _-~       )  ####\\n\" +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"###|░░╚██╔╝░╚██╔╝░╚██████╔╝██║░░░░░|###  _-~          |  ####\\n\" +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"###|░░░╚═╝░░░╚═╝░░░╚═════╝░╚═╝░░░░░#  _-~            ;  #####\\n\" +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"##########################  __---___-~              |   #####\\n\" +"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#######################   _~   ,,                  ;  `,,  ##\\n\" +"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#####################  _-~    ;\u0027                  |  ,\u0027  ; ##\\n\" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"###################  _~      \u0027                    `~\u0027   ; ###\\n\" +"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"############   __---;                                 ,\u0027 ####\\n\" +"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"########   __~~  ___                                ,\u0027 ######\\n\" +"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#####  _-~~   -~~ _                               ,\u0027 ########\\n\" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"##### `-_         _                              ; ##########\\n\" +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#######  ~~----~~~   ;                          ; ###########\\n\" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#########  /          ;                        ; ############\\n\" +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#######  /             ;                      ; #############\\n\" +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#####  /                `                    ; ##############\\n\" +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"###  /                                      ; ###############\\n\" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#                                            ################\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#############################################################\\n\" +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#     Henlo! I am WUF,\\n\" +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#     here to help you track yowr tasks!\\n\" +"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"#############################################################\\n\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String prefix \u003d arr[0];"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String[] suffix \u003d new String[0];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                suffix \u003d arr[1].split(\" \", 0);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                List\u003cString\u003e response \u003d getResponse(input, prefix, suffix);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                for (int i \u003d 0; i \u003c response.size(); i++) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    str.append(\"#    \").append(response.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String reply \u003d \"#############################################################\\n\" +"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        str.toString() +"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        \"#############################################################\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                System.out.println(reply);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if (prefix.equals(\"bye\")) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    running \u003d false;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String reply \u003d \"#############################################################\\n\" +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        \"#    \" + e.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        \"#############################################################\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                System.out.println(reply);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 212,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    String e;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.e \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    DukeException(String e) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.e \u003d \"☹ OOPS!!! \" + e;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 5000"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event 123456 1234 1123"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "ethan-l-m-e": 2
    }
  }
]
