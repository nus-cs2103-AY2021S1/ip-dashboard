[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "MarcTzh": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":omega"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":init"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 103,
      "MarcTzh": 105
    }
  },
  {
    "path": "savedTasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "T | 0 | do hwk 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "E | 1 | eat dinner with fam | 11-11-1111 1111"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Deadline class represents a Task that is a deadline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Extends from TimedTask class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates an Deadline object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name the name of the Deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param dateTime the date amd time of the Deadline in DD-MM-YYYY HHMM format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Deadline(String name, String dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name, dateTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskType \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Overloaded constructor that creates an Deadline object with a specified"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * completion status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name the name of the Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param isDone the completion status of the Deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param dateTime the date and time of the Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Deadline(String name, Boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name, isDone, dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskType \u003d \"D\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return String.format(\"[%s]%s\", taskType, super.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 33
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Duke is an application that stores a user\u0027s tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/spongebob.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/pirate.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.storage \u003d new Storage(\".//.//.//savedTasks.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.parser \u003d new Parser(ui, taskList, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a Duke object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param filePath the filepath in which the application\u0027s data will be saved."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.parser \u003d new Parser(ui, taskList, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "//        new Duke(\".//.//.//savedTasks.txt\").run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        stage.setTitle(\"Spongebob To Do List\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this. "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        storage.load(taskList, ui);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                DialogBox.getDukeDialog(ui.loadTasks(), duke)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                DialogBox.getDukeDialog(ui.showTasks(taskList), duke)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns the response of the parser as a String after parsing the user input."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return Returns the response of the parser as a String after parsing the user input."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return parser.parseInput(input);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "MarcTzh": 159
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Exception class that is specific to the Duke application."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public enum DukeExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        DEADLINE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    DukeExceptionType dukeExceptionType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a DukeException."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param message the error message of the exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Overloaded constructor that creates a DukeException with specified"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * dukeExceptionType."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param message the error message of the Exception."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param dukeExceptionType the type of Exception."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public DukeException(String message, DukeExceptionType dukeExceptionType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.dukeExceptionType \u003d dukeExceptionType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return String.format(\"Error: %s\", getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 37
    }
  },
  {
    "path": "src/main/java/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * DukeIllegalArgumentException is thrown when user input is incomplete"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a DukeIllegalArgumentException."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param message the error message of the exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param dukeExceptionType the type of Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    DukeIllegalArgumentException(String message, DukeExceptionType dukeExceptionType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(message, dukeExceptionType);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        switch (dukeExceptionType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                message \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return String.format(\"I can\u0027t hear youuuuuuuu! The description of a %s cannot be empty.\", message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                message \u003d \"event\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return String.format(\"I can\u0027t hear youuuuuuuu! The description of a %s cannot be empty.\", message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                message \u003d \"deadline\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return String.format(\"I can\u0027t hear youuuuuuuu! The description of a %s cannot be empty.\", message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return \"I can\u0027t hear youuuuuuuu! The description cannot be empty.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 32
    }
  },
  {
    "path": "src/main/java/DukeUnknownArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * DukeUnknownArgumentException is thrown when user input not recognised"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class DukeUnknownArgumentException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a DukeUnknownArgumentException."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param message the error message of the exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    DukeUnknownArgumentException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return \"I can\u0027t hear youuuuuuuu\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Event class represents a Task that is an Event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Extends from the Task class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates an Event object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name the name of the Event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param dateTime the date amd time of the Event in DD-MM-YYYY HHMM format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Event(String name, String dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name, dateTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskType \u003d \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Overloaded constructor that creates an Event object with a specified"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * completion status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name the name of the Event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param isDone the completion status of the Event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param dateTime the date and time of the Event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Event(String name, Boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name, isDone, dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskType \u003d \"E\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return String.format(\"[%s]%s\", taskType, super.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 33
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            stage.setTitle(\"Spongebot patty flipper\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/spongebob.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pirate.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        printToUser(\"Hi spongebob, what kind of patties are you flipping today?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "//        System.out.println(duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "//        Ui ui \u003d duke.getUi();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "//        TaskList taskList \u003d duke.getTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "//        printToUser(duke.getStorage().load(taskList, ui));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Prints to user a message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private void printToUser(String message) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        assert(!message.isEmpty());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                DialogBox.getDukeDialog(message, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        if(input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            closeStage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Ui ui \u003d duke.getUi();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        TaskList taskList \u003d duke.getTaskList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        duke.getStorage().save(taskList, ui);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Closes JavaFX GUI when invoked."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    void closeStage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Stage stage \u003d (Stage) userInput.getScene().getWindow();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        stage.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 82
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Parser class deals with making sense of user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Parser(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Takes in user input and prints the application\u0027s corresponding output."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param input the user input as a String."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String parseInput(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            if (input.equals(\"bye\")) { //exit condition"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                result \u003d ui.printBye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                result \u003d ui.showTasks(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String word \u003d input.split(\"find \")[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                result \u003d ui.find(word, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String[] number \u003d input.split(\"done \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                int index \u003d Integer.parseInt(number[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                taskList.markDone(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                result \u003d ui.markDone(index, taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                //whatever is after deadline"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String[] deadlineInput \u003d input.split(\"deadline \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                if(deadlineInput.length \u003c 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.DEADLINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                if((deadlineInput[1].split(\" /by \")).length \u003c 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.DEADLINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String deadlineName \u003d (deadlineInput[1].split(\" /by \"))[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String deadlineTime \u003d (deadlineInput[1].split(\" /by \"))[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(deadlineName, deadlineTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                result \u003d ui.printAdd(newDeadline, taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String[] todoInput \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                if(todoInput.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.TODO);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String todoName \u003d todoInput[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                Todo newTodo \u003d new Todo(todoName);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                taskList.addTask(newTodo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                result \u003d ui.printAdd(newTodo, taskList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                if(input.split(\"event \").length \u003c 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.EVENT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String eventInput \u003d (input.split(\"event \"))[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                if(eventInput.split(\" /at \").length \u003c 2) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    throw new DukeIllegalArgumentException(\"\", DukeException.DukeExceptionType.EVENT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String eventName \u003d (eventInput.split(\" /at \"))[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                String eventTime \u003d (eventInput.split(\" /at \"))[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                Event newEvent \u003d new Event(eventName, eventTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                result \u003d ui.printAdd(newEvent, taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                int deleteNumber \u003d Integer.parseInt((input.split(\"delete \"))[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                result \u003d ui.printDelete(deleteNumber, taskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                taskList.deleteTask(deleteNumber);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                throw new DukeUnknownArgumentException(\"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            result \u003d ui.printError(e);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            result \u003d ui.printError(\"Please key in date and time as follows: DD-MM-YYYY HHMM\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        storage.save(taskList, ui);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 90
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Storage class handles read and write operations to a specified text file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a Storage object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param filePath the filepath in which Tasks will be saved to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Updates the current Tasks in the specified text file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param taskList the TaskList which contains the Tasks to save."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param ui the Ui which is currently in use."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String save(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        File savedTasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        boolean exists \u003d savedTasks.exists();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            if(exists) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                BufferedWriter taskWriter \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                StringBuilder currentTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                for(int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    currentTasks.append(taskList.getTask(i).encode());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    currentTasks.append(\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                taskWriter.write(currentTasks.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                taskWriter.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                return ui.printSuccess(\"File found, loading file\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            } else { //file does not exist, create new file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                boolean isCreated \u003d savedTasks.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                save(taskList, ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                if(isCreated) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    return ui.printSuccess(\"New save file created\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                    return ui.printError(\"Failed to create save file\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            return ui.printError(ex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Reads the save file and updates the TaskList with the previously saved Tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param taskList the TaskList that is currently in use."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param ui the Ui that is currently in use."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String load(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            BufferedReader taskReader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            String line \u003d taskReader.readLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            while(line !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                processTask(line, taskList, ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                line \u003d taskReader.readLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            return ui.showTasks(taskList);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            //Folder not yet created, do nothing"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            ui.printError(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Processes the text in the save file to update the current TaskList with Tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * previously saved in the text file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param line the line of text in the text file"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param taskList the TaskList that is currently in use."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param ui the Ui that is currently in use."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static void processTask(String line, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        assert(!line.isEmpty());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String[] task \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Boolean isDone \u003d task[1].equals(\"1\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String taskName \u003d task[2];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String taskDateTime \u003d null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        if(task.length \u003e 3) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            taskDateTime \u003d task[3];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        if(line.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            Todo newTodo \u003d new Todo(taskName, isDone);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            taskList.addTask(newTodo);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } else if(line.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            Event newEvent \u003d new Event(taskName, isDone, taskDateTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } else if(line.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(taskName, isDone, taskDateTime);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            ui.printError(\"Save file on device corrupted\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 107
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Task class contains information about the task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected String icon; //tick or cross"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private final static String TICK \u003d \"O\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private final static String CROSS \u003d \"X\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor to create a Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name the description of the Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.icon \u003d CROSS;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.taskType \u003d \"Task\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Overloaded constructor to create a Task object, specifying the completion status"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * of the Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name the description of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param isDone the completion status of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    Task(String name, Boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.icon \u003d isDone ? TICK : CROSS;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.taskType \u003d \"Task\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a String in the format which the Task is saved. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return a String in the format which the Task is saved. "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                ? String.format(\"%s | 1 | %s\", taskType, name)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                : String.format(\"%s | 0 | %s\", taskType, name);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Marks Task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.icon \u003d TICK;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns the name of the Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return the name of the Task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return String.format(\"[%s] %s\", icon, name);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 67
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * TaskList class stores the Tasks used in the application when it is running."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a new TaskList object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Adds a task to TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param task the Task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Deletes a task in TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param index the index of the Task to be deleted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Marks a tasks in the TaskList as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param index the index of the Task to be marked as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        tasks.get(index - 1).markDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Retrieves a Task from the TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param index the index of the Task to be retrieved."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return the Task retrieved from the TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return tasks.get(index - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns the number of Tasks in the TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return the number of Tasks in the TaskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 56
    }
  },
  {
    "path": "src/main/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void addTask() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskList.addTask(new Todo(\"task1\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        assertEquals(1, taskList.size());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void getTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskList.addTask(new Todo(\"task1\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        assertEquals(\"task1\", taskList.getTask(1).getName());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public void deleteTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskList.addTask(new Todo(\"task1\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskList.addTask(new Todo(\"task2\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskList.deleteTask(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        assertEquals(1, taskList.size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 29
    }
  },
  {
    "path": "src/main/java/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * TimedTask class is a Task that has a date and time associated"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * with it. Extends from the Task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class TimedTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a TimedTask."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name the name of the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param dateTime the date and time of the Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    TimedTask(String name, String dateTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTime,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.taskType \u003d \"TimedTask\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Overloaded constructor that creates a TimeTask with a specified completion status."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name the name of the Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param isDone the completion status of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param dateTime the date and time of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    TimedTask(String name, Boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.dateTime \u003d LocalDateTime.parse(dateTime,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        this.taskType \u003d \"TimedTask\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns the date and time of the Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return the date and time of the Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a String in the format which the TimedTask is saved. "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return a String in the format which the TimedTask is saved. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String dateTimeFormat \u003d dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                ? String.format(\"%s | 1 | %s | %s\", taskType, name, dateTimeFormat)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                : String.format(\"%s | 0 | %s | %s\", taskType, name, dateTimeFormat);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return String.format(\"%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 62
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Todo class represents a Task that is a Todo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Extends from the Task class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a Todo object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name name of the Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskType \u003d \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Overloaded constructor that creates a Todo object with a specified"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * completion status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param name name of the Todo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param isDone completion status of the Todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Todo(String name, Boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        taskType \u003d \"T\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return String.format(\"[%s]%s\", taskType, super.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 30
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " * Ui class deals with interactions with the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    private static final String LINE \u003d \"______________________________________________\" + \"\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Constructor that creates a Ui object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a greeting message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String containing a greeting message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String printHi() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m the Captain\" + \"\\n\" + \"Who lives in a pineapple under the sea\" + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE + greeting + LINE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a goodbye message"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String containing a goodbye message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String printBye() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        String goodbye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE + goodbye + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a message to inform the user that a Task has been added to TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param task the Task to be added to TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param taskList the Tasklist to add the Task to."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String containing information about the task added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String printAdd(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + \"Got it. I\u0027ve added this task: \" + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + String.format(\"Now you have %s patties to flip.\", taskList.size()) + \"\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + LINE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a message to inform the user that a Task has been deleted from the TaskList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param index the index of the Task to be deleted."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param taskList the TaskList to delete the Task from."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String containing information about the task deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String printDelete(int index, TaskList taskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + \"Noted. I\u0027ve removed this patty: \" + \"\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + taskList.getTask(index).toString() + \"\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + String.format(\"Now you have %s patties to flip.\", taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                + LINE;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a message to inform the user of an error in the application."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param e the Exception that was thrown by the application."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String containing information about the error."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String printError(Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE + \"Arghhhh there seems to be an error: \" + e + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Overloaded method which also returns a specified message to inform the user"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * of an error in the application."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param message the message that the application wants to print for the user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String containing information about the error."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String printError(String message) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE + \"Arghhhh there seems to be an error: \" + message + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns all Tasks currently in the TaskList."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param taskList the TaskList which contain the Tasks to be printed out."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String containing information about the tasks that exist currently."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String showTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        output.append(LINE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        if(taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            output.append(\"Here are the patties on your cooking station:\" + \"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                //print out task with numbering"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                output.append(String.format(\"%s. %s\", i, taskList.getTask(i).toString())).append(\"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } else { //no tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            output.append(\"You have no more patties to flip!\" + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a message to inform the user that a save file is being read."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String informing the user that a save file is being read."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String loadTasks() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE + \"Retrieving patties from the freezer...\" + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a specified message to inform the user that an operation succeeded."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param message the message to be printed out."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String to inform the user that an operation succeeded."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String printSuccess(String message) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE + \"Success: \" + message + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a message to inform the user that a specific Task in the TaskList"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * has been marked as completed."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param index the index of the Task in the TaskList."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param taskList the TaskList which contains the Task to be marked as completed."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String to inform the user that a specific Task in the TaskList"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * has been marked as completed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String markDone(int index, TaskList taskList) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        assert(index \u003c taskList.size());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return LINE + \"Nice! I\u0027ve marked this patty as cooked:\" +  \"\\n\" +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                task.toString() + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * Returns a list of Tasks in the current TaskList that matches a specified word."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param word the word to search for in the TaskList."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @param taskList the TaskList which contain the Tasks to be filtered"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * according to whether it contains the specified word."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * @return returns a String containing a list of Tasks in the current"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     * TaskList that matches a specified word."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    public String find(String word, TaskList taskList) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        assert(!word.isEmpty());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        assert(taskList.size() \u003e 0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        TaskList temp \u003d new TaskList();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            if(task.getName().contains(word)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                temp.addTask(task);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        if(temp.size() \u003e 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            output.append(LINE + \"Here these patties match your description:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d temp.size(); i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                //print out task with numbering"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                output.append(String.format(\"%s. %s%n\", i, temp.getTask(i).toString()) + \"\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        } else { //no matching tasks"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            output.append(\"You have no matching patties!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        output.append(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 160
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "MarcTzh": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MarcTzh"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "MarcTzh": 2
    }
  }
]
