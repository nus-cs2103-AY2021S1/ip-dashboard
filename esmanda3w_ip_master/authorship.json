[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to add a task into the list of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * An AddCommand object has a task type, which is either a todo, deadline or event task,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * and a string array with the task description separated into the task name and date/time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static int TODO \u003d 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static int DEADLINE \u003d 2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static int EVENT \u003d 3;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private int taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String[] taskInfos;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates an AddCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskType The type of task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskInfos The description of the task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public AddCommand(int taskType, String[] taskInfos) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskInfos \u003d taskInfos;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by adding the new task to the list, replying the user,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * and updating the list of tasks stored in the computer."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the deadline or event is not specified in the correct format."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (this.taskType \u003d\u003d TODO) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task t \u003d new Todo(this.taskInfos[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            ui.showAdd(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (this.taskType \u003d\u003d DEADLINE) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task t \u003d new Deadline(this.taskInfos[0], this.taskInfos[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            ui.showAdd(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task t \u003d new Event(this.taskInfos[0], this.taskInfos[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            ui.showAdd(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 62
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command that the user input into the system."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by performing the steps required for that."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException Throws the required exception as necessary."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Shows whether the command is an exit command or not."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return True if the command is an exit command, false if it is not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a deadline task that has a specific deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A Deadline object is made up of the task name, as well as a date and time of the deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String originalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String printedFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Deadline object if the input was written in the correct format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param date The date and time of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the deadline is not specified in the correct format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Deadline(String taskName, String date) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.by \u003d LocalDateTime.parse("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.originalFormat \u003d this.by.format("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.printedFormat \u003d this.by.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy, HH:mm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task.totalTasks--;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"You need to use the proper format!\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"eg deadline return book /by 2019-10-15 2359\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the deadline task in the format to be saved in the computer."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"D\" + \" ; \" + super.toTaskData() + \" ; \" + originalFormat;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the deadline task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the deadline task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + printedFormat + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 57
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to delete a task into the list of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A DeleteCommand object has a task number to represent the task to be deleted."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a DeleteCommand object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be deleted."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by deleting the specified task from the list, replying the user,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * and updating the list of tasks stored in the computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If there are no tasks, or an invalid task number is given."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (Task.totalTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"You don\u0027t have any tasks yet!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (this.taskNum \u003d\u003d 0 || this.taskNum \u003e Task.totalTasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"You don\u0027t have a task with that number! \u003e\u003c\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Can you try a different number?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task.totalTasks--;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task t \u003d tasks.getTask(this.taskNum);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        tasks.deleteTask(this.taskNum);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui.showDelete(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 53
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to mark a task in the list of tasks as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * An DoneCommand object has a task number to represent the task to be marked done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a done command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be marked as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by marking the specified task as done, replying the user,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * and updating the list of tasks stored in the computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If there are no tasks, or an invalid task number is given."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (Task.totalTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"You don\u0027t have any tasks yet!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (this.taskNum \u003d\u003d 0 || this.taskNum \u003e Task.totalTasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"You don\u0027t have a task with that number! \u003e\u003c\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Can you try a different number?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task t \u003d tasks.getTask(this.taskNum);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        t.markDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui.showDone(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 52
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents Duke program that executes the various commands given by the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A Duke object consists of a Storage object, which stores the tasks in the computer,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * a TaskList object, which keeps track of the tasks, and a Ui object, which replies"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * the user accordingly."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Duke object and loads the tasks stored in the computer, if any."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param filePath The filePath of the file which stores the data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui \u003d  new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Runs the Duke program by receiving the user commands and executing the corresponding"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * steps accordingly."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Duke object and runs the program."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param args An array of strings."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 59,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents errors that occurs as a result of running the program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a DukeException object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param msg The specific error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(\"UHOH! \" + msg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents an event task that has a specific start and end date and time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * An Event object is made up of the task name, as well as a date and time of the event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String originalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String printedFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Event object if the input was written in the correct format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param date The date and time of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the event is not specified in the correct format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Event(String taskName, String date) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.at \u003d LocalDateTime.parse("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.originalFormat \u003d this.at.format("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.printedFormat \u003d this.at.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy, HH:mm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task.totalTasks--;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"You need to use the proper format!\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"eg event project meeting /at 2019-10-15 1200\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the event task in the format to be saved in the computer."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"E\" + \" ; \" + super.toTaskData() + \" ; \" + originalFormat;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the event task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the event task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + printedFormat + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 57
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to exit the program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by showing the exit message to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns true as the command is an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 26
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to find matching tasks with a keyword. A FindCommand object has a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * keyword variable, which is the keyword used by the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a FindCommand object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param keyword The keyword to search for matching tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by finding the matching tasks using the keyword and displaying"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * it in a list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If there are no matching tasks with the specified keyword."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        TaskList foundTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (foundTasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"There are no matching tasks in your list!\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Can you try a different keyword?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui.showFind();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        foundTasks.printList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 48
    }
  },
  {
    "path": "src/main/java/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to display the list of commands available."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by displaying the list of commands available."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui.showHelp();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 26
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to display their list of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by displaying the list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If there are no tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (Task.totalTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"You don\u0027t have any tasks yet!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui.showList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 32
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a parser that helps to make sense of the user commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Reads the user input and returns the corresponding command according to the command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * given by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return The corresponding command for the user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        input \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String[] inputWords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (inputWords.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"Sorry, I don\u0027t understand what you are saying! D\u003d\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Type \\\"help\\\" to view the list of commands you can use!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String commandWord \u003d inputWords[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"bye\") \u0026\u0026 inputWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"help\") \u0026\u0026 inputWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"list\") \u0026\u0026 inputWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (inputWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"You need to specify what keyword to search! \\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        \"eg find book\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String keyword \u003d input.substring(4);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (inputWords.length !\u003d 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"You need to specify which task to mark done! \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        + \"eg done 1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            int i \u003d input.charAt(5) - 48;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new DoneCommand(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (inputWords.length !\u003d 2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"You need to specify which task to delete!\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        + \"eg delete 1\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            int i \u003d input.charAt(7) - 48;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new DeleteCommand(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (inputWords.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"You need to specify your todo task!\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        + \"eg todo read book\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String taskDesc \u003d input.substring(5);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String[] taskInfos \u003d {taskDesc};"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new AddCommand(AddCommand.TODO, taskInfos);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"You need to specify your deadline!\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        + \"eg deadline return book /by 2019-10-15 2359\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String taskDesc \u003d input.substring(9);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String[] taskInfos \u003d taskDesc.split(\" /by \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (taskInfos.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"You need to use the proper format!\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        + \"eg deadline return book /by 2019-10-15 2359\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new AddCommand(AddCommand.DEADLINE, taskInfos);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"You need to specify your event!\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        + \"eg event project meeting /at 2019-10-15 1200\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String taskDesc \u003d input.substring(6);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String[] taskInfos \u003d taskDesc.split(\" /at \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (taskInfos.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"You need to use the proper format!\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        + \"eg event project meeting /at 2019-10-15 1200\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new AddCommand(AddCommand.EVENT, taskInfos);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        throw new DukeException(\"Sorry, I don\u0027t understand what you are saying! D\u003d\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"Type \\\"help\\\" to view the list of commands you can use!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 116
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents the storing of the tasks in the user\u0027s computer. The Storage class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Storage object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param filePath The filePath of the file which stores the data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the file to store the data is unable to be created."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        createFileIfAbsent(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Creates a file to store the data if it does not already exist on the user computer."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param filePath The filePath of the file which stores the data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the file to store the data is unable to be created."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static void createFileIfAbsent(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                File dir \u003d new File (\"data\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new DukeException(\"File to store tasks could not be created!\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                        + \"\\n\" + \"Your tasks won\u0027t be saved upon exit :(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Loads the list of tasks saved in the user\u0027s computer."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Arraylist of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If saved list of tasks cannot be loaded."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"Saved list of tasks could not be loaded\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String[] taskInfos \u003d line.split(\" ; \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (taskInfos[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                t \u003d new Todo(taskInfos[2]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            } else if (taskInfos[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                t \u003d new Event(taskInfos[2], taskInfos[3]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                t \u003d new Deadline(taskInfos[2], taskInfos[3]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (taskInfos[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                t.markDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Updates the list of tasks stored in the users data when a change is made."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks The up-to-date list of tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If saved list of tasks cannot be loaded."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void updateData(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String data \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d Task.totalTasks; i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                if (i \u003d\u003d Task.totalTasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    data +\u003d tasks.getTask(i).toTaskData();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    data +\u003d tasks.getTask(i).toTaskData() + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fw.write(data);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new DukeException(\"Saved list of tasks could not be updated\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 113
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a Task that the user has. A Task object has a task name, which"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * describes the task, as well as a status to indicate whether the task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * has been completed. The class also keeps track of the total number of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * tasks the user has in the list so far."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Task object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the task in the format to be saved in the computer."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return (this.isDone ? \"1\" : \"0\") + \" ; \" + this.taskName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Returns the string representation of the deadline task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"[\" + (isDone ? TICK : CROSS) +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                \"] \" + taskName;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 53
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents the list of tasks the user has and keeps track of the current state of the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a TaskList object with a list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks Arraylist of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a TaskList object with an empty list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the task with the specified task number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be retrieved."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Task at that task number."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Task getTask(int taskNum) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return this.tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Adds the specified task into the list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Deletes the task with the specified task number."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be deleted."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Prints the list of tasks in a numbered format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            System.out.println(num + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Finds the matching tasks in the list according to the specified keyword."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param keyword The keyword to find tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return TaskList containing tasks with the same keyword."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task t \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                foundTasks.add(t);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new TaskList(foundTasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 85
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a todo task without any date/time attached to it."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A Todo object only consists of the task name."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Todo object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the todo task in the format to be saved in the computer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"T\" + \" ; \" + super.toTaskData();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the todo task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the todo task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 34
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents the user interface that interacts with the user by replying"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * the user accordingly. A Ui objects contains a Scanner object that helps"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * to take in user input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String LOGO \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String LINE \u003d \"---------------------------------------------------------\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Ui object with a scanner object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Reads the input of the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the welcome message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"hElLoOOoOOoO! Welcome to\\n\" + LOGO);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"How can I help you today? : D\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Type \\\"help\\\" to view the list of commands you can use!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the exit message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"BYEEE!! SEE YOU AGAIN!!! \u003eO\u003c\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the list of commands available."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showHelp() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Here are the list of commands you can use! \u003dD\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"help: displays the list of commands available\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"list: displays the list of tasks you have\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"find *keyword*: displays the tasks with that keyword\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"eg find book\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"todo *task description*: adds a task without any\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"date/time attached to it\\n\" + \"eg todo read book\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"deadline *task description* /by *date+time*: adds a\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"task that needs to be done before a specific date and time\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"(date and time to be written in yyyy-mm-dd HHMM format)\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"eg deadline return book /by 2019-10-15 2359\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"event *task description* /at *date+time*: adds a task that\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"starts at a specific time and ends at a specific time\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"(date and time to be written in yyyy-mm-dd HHMM format)\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"eg event meeting /at 2019-10-15 1200\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"done *task number*: marks the task with that number as\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"done eg done 1\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"delete *task number*: deletes the task with that number\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"from the list eg delete 1\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"bye: ends the session\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the user\u0027s list of tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Here are your tasks! JIAYOU! \u003dD\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Replies the user\u0027s command to mark a task as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t Task that is marked as done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showDone(Task t) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Nicee!! You\u0027ve completed this task!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Replies the user\u0027s command to delete a task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t Task that is deleted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showDelete(Task t) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Oki! I\u0027ve removed this task!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Now you have \" + Task.totalTasks + \" tasks in your list!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Replies the user\u0027s command to add a task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showAdd(Task t) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Oki! I have added this task:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Now you have \" + Task.totalTasks + \" tasks in your list!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the matching tasks found using the keyword."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showFind() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(\"Oki! I have found the matching tasks in your list:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the error message."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param err Error message."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showError(String err) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(err);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the line that acts as a border."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 132
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testDeadlinePrinting_correctFormat_success() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task d \u003d new Deadline(\"proj\", \"2019-10-15 2359\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[D][\\u2718] proj (by: Tue, 15 Oct 2019, 23:59)\", d.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testDeadlinePrinting_wrongFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task d \u003d new Deadline(\"project\", \"Sunday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! You need to use the proper format!\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"eg deadline return book /by 2019-10-15 2359\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testDeadlinePrinting_doneDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task d \u003d new Deadline(\"proj\", \"2019-10-15 2359\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        d.markDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[D][\\u2713] proj (by: Tue, 15 Oct 2019, 23:59)\", d.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_doneDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task d \u003d new Deadline(\"proj\", \"2019-10-15 2359\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        d.markDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"D ; 1 ; proj ; 2019-10-15 2359\", d.toTaskData());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_notDoneDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task d \u003d new Deadline(\"proj\", \"2019-10-15 2359\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"D ; 0 ; proj ; 2019-10-15 2359\", d.toTaskData());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 45
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testEventPrinting_correctFormat_success() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task e \u003d new Event(\"meeting\", \"2019-10-15 1200\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[E][\\u2718] meeting (at: Tue, 15 Oct 2019, 12:00)\", e.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testEventPrinting_wrongFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task e \u003d new Event(\"meeting\", \"Sunday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! You need to use the proper format!\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"eg event project meeting /at 2019-10-15 1200\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testEventPrinting_doneEvent_success() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task e \u003d new Event(\"meeting\", \"2019-10-15 1200\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        e.markDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[E][\\u2713] meeting (at: Tue, 15 Oct 2019, 12:00)\", e.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_doneEvent_success() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task e \u003d new Event(\"meeting\", \"2019-10-15 1200\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        e.markDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"E ; 1 ; meeting ; 2019-10-15 1200\", e.toTaskData());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_notDoneDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task e \u003d new Event(\"meeting\", \"2019-10-15 1200\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"E ; 0 ; meeting ; 2019-10-15 1200\", e.toTaskData());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 44
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_exitCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_helpCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"help\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_listCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_doneCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"done 1\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_doneCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Parser.parse(\"done\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! You need to specify which task to mark done! \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    +  \"eg done 1\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_deleteCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"delete 1\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_deleteCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Parser.parse(\"delete\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! You need to specify which task to delete!\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"eg delete 1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_addCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"todo read\") instanceof AddCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                Parser.parse(\"deadline project /by 2019-10-15 2359\") instanceof AddCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                Parser.parse(\"event meeting /at 2019-10-15 1200\") instanceof AddCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_unknownCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Parser.parse(\"hello\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! Sorry, I don\u0027t understand what you are saying! D\u003d\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Type \\\"help\\\" to view the list of commands you can use!\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 76
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testTodoPrinting_doneTodo_success() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task todo \u003d new Todo(\"read\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        todo.markDone();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[T][\\u2713] read\", todo.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testTodoPrinting_notDoneTodo_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task todo \u003d new Todo(\"read\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[T][\\u2718] read\", todo.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_doneTodo_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task todo \u003d new Todo(\"read\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        todo.markDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"T ; 1 ; read\", todo.toTaskData());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_notDoneTodo_success() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task todo \u003d new Todo(\"read\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"T ; 0 ; read\", todo.toTaskData());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "LIST"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 3,
      "-": 37
    }
  }
]
