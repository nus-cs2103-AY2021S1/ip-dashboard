[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        super(description, \"D\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        return super.toString() + String.format(\" (by: %s)\", deadline);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rayasamhr": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public static final String delete_task_number_missing \u003d \"Please enter a valid task number\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String dash \u003d (\"\\u2500\").repeat(5);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String greeting \u003d \"Hello! I\u0027m Duke \\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            \"What can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String task_read \u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String task_added \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String task_completed \u003d \"Nice! I\u0027ve marked this task as complete. \\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String farewell \u003d \"Bye. Hope to see you again soon.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String task_index_out_of_bounds \u003d \"That task does not exist.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String task_number_format \u003d \"Please enter the task number in numerals.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public static final String task_no_description \u003d \"Invalid, no task description provided.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public static final String task_invalid_type \u003d \"Invalid, not an accepted task type\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public static final String task_list_number \u003d \"\\nNow you have %d tasks in the list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public static final String task_removed \u003d \"Noted. I\u0027ve removed this task\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private boolean running \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        Duke servingDuke \u003d new Duke();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        System.out.println(servingDuke.constructMessage(greeting));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        while (servingDuke.canRun()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            servingDuke.respondToInput(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private void respondToInput(String rawInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        //Remove leading and trailing whitespaces"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        String input \u003d rawInput.trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        String[] breakdown \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                running \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                        constructMessage(farewell));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                        constructMessage(task_read + printAsString(taskList)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            } else if (breakdown[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                deleteTask(breakdown);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            } else if (breakdown[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                markTaskAsDone(breakdown);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                addTask(breakdown);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private void deleteTask(String[] breakdown) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(breakdown[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            Task deletedTask \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            String count_text \u003d String.format(task_list_number, taskList.size());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    task_removed + deletedTask + count_text"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage(delete_task_number_missing));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage(task_index_out_of_bounds));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage(task_number_format));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private void addTask(String[] breakdown) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            String taskType \u003d breakdown[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            if (!(taskType.equals(\"todo\") || taskType.equals(\"deadline\") || taskType.equals(\"event\"))) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                throw new DukeException(taskType);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            String description \u003d breakdown[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            Task newTask \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    String[] deadlineDetails \u003d description.split(\"/by\", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    String deadlineDesc \u003d deadlineDetails[0].trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    String deadlineTime \u003d deadlineDetails[1].trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    newTask \u003d new Deadline(deadlineDesc, deadlineTime);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    String[] eventDetails \u003d description.split(\"/at\", 2);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    String eventDesc \u003d eventDetails[0].trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    String eventTime \u003d eventDetails[1].trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    newTask \u003d new Event(eventDesc, eventTime);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            String count_text \u003d String.format(task_list_number, taskList.size());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    task_added + newTask.toString() + count_text"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage(task_no_description));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.err.println(constructMessage(e.toString()));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private void markTaskAsDone(String[] breakdown) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(breakdown[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            Task completedTask \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            completedTask.markDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    task_completed + completedTask.toString()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage(task_index_out_of_bounds));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            System.out.println(constructMessage(task_number_format));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private String printAsString(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        StringBuilder res \u003d new StringBuilder();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            res.append(i)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    .append(\". \")"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                    .append(taskList.get(i - 1));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            if (i !\u003d taskList.size()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "                res.append(\"\\n\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        return res.toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private boolean canRun() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        return running;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public String constructMessage(String message) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        return dash + \"\\n\" + message + \"\\n\" + dash;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rayasamhr": 146,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    String word;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public DukeException(String word) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        return String.format(\"I\u0027m sorry, I don\u0027t know what \u0027%s\u0027 means\", word);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rayasamhr": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        super(description, \"E\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        return super.toString() + String.format(\" (at: %s)\", date);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rayasamhr": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String tick \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private static final String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private String taskMarker \u003d \"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    protected Task(String description, String taskMarker) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        this.taskMarker \u003d taskMarker;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        String status \u003d isDone ? tick : cross;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        return boxFormat(taskMarker) + boxFormat(status) + \" \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    protected String boxFormat(String symbol) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        return String.format(\"[%s]\", symbol);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rayasamhr": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "        super(description, \"T\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rayasamhr": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "nothing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "todo event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "deadline event"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "deadline homework /by 7pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "event meeting /at will confirm later"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "rayasamhr": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "REM javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rayasamhr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "rayasamhr": 5,
      "-": 19
    }
  }
]
