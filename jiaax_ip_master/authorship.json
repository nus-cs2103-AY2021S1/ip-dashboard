[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "# duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "jiaax": 2
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Deadline as a subclass of Task that handles a deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Deadline(String description, String by, boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * convert a Task string to a format that is \"[task] [done/not done] /by [date]\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @return a formatted string to be stored in a file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String inputStyle() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"deadline \" + super.inputStyle() + \"/by \" + by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 35
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Duke class that creates a Duke bot to interact with user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Constructs a duke that read a file from filePath to retrieve previously stored data"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param filePath the file path of the stored data"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Main method to get duke to start running and ask for user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String command \u003d ui.ask();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (command.contains(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                p.parse(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        storage.updateDatabase(tasks.getTaskList(), filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        new Duke(\"data\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jiaax": 54
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * DukeException is a subclass of Exception that handles all the Duke exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Constructor for a duke exception"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param msg a text to be printed out"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (msg.equals(\"file not found\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return \"no databse found! pls try again ^__^\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else if (msg.equals(\"command not found\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return \"Meimei doesn\u0027t understand this command!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else if (msg.equals(\"time\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return \"Date format error\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return \"☹ OOPS!!! The description of a \" + msg + \" cannot be empty.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 30
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Event is a subclass of Task that handles all the event tasks by user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Event(String description, String at, boolean done) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * convert a Task string to a format that is \"[task] [done/not done] /at [date]\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @return a formatted string to be stored in a file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String inputStyle() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"event \" + super.inputStyle() + \" /at \" + at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 35
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * A parser object that makes sense of all the user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Parser() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * split up the user input and recognise the executable functions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void parse(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (input.contains(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            TaskList.printTaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else if (input.contains(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Ui.bye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String key \u003d input.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String command \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                if (key.contains(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    TaskList.doneTask(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                } else if (key.equals(\"find\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    TaskList.findTask(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                } else if (key.equals(\"delete\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    TaskList.deleteTask(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                } else if (key.equals(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    TaskList.createTodo(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                } else if (key.equals(\"event\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    TaskList.createEvent(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                } else if (key.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    TaskList.createDeadline(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    System.out.println(new DukeException(\"command not found\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                System.out.println(new DukeException(\"command not found\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 44
    }
  },
  {
    "path": "src/main/java/duke/ReadFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class ReadFile {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    static void printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    static void updateContents(String filePath, ArrayList\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Task.addTaskFromFile(s.nextLine(), list, false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            printFileContents(\"data\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            LocalDate k \u003d LocalDate.parse(\"2019-12-01\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(k.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 34
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * A storage that handles synchronisation of database in a specified filePath given to Duke object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Storage(String filePath)  {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Reads a file and update the List of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @return a list of Tasks in recognisable string format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @throws DukeException if file is not found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public List\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            List store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(s.nextLine());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return store;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            throw new DukeException(\"file not found\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Updates the current list in duke against the database"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param store the current list of tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param filePath the file path of the database"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void updateDatabase(List\u003cTask\u003e store, String filePath) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (store.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                writeToFile(filePath, \"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                        writeToFile(filePath, store.get(i).inputStyle());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                        appendToFile(filePath, System.lineSeparator() + store.get(i).inputStyle());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(new DukeException(\"empty list\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Writes a given text to file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param textToAdd input text"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @throws IOException if file not found"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * Adds on a given text to existing strings in file specified by the filePath"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param textToAppend the given text"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @throws IOException if file not found"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 92
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * A general task class that handles the status of any task and methods to add a task to the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private Boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     public Task(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.description \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         this.description \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public boolean findTask(String name) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return description.contains(name);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to add tasks from given string format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param task task in a string format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param store the list of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param print should the task be printed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void addTaskFromFile(String task, ArrayList\u003cTask\u003e store, boolean print) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String type \u003d task.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String remain \u003d task.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String isDone \u003d remain.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String title \u003d remain.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //System.out.println(title);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            store.add(new Todo(title, Boolean.valueOf(isDone)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String description \u003d title.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String by \u003d title.split(\"/by\", 2)[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                newTask \u003d new Deadline(description, by, Boolean.valueOf(isDone));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String at \u003d title.split(\"/at\", 2)[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                newTask \u003d new Event(description, at, Boolean.valueOf(isDone));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (print) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + store.get(store.size() - 1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String inputStyle() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         return this.isDone + \" \" +description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * display icon for a done/not done task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         return (isDone) ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         this.isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "         return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 81
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * A list of Task object and methods that deal with modification to the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * updating the taskList from the database if file is found"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    TaskList(List\u003cString\u003e s) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        for (int i \u003d 0; i \u003c s.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            addTaskFromFile(s.get(i), tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to mark a task in the list as done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param remain index of the task in list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void doneTask(String remain) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        int index \u003d Integer.parseInt(remain);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        tasks.get(index-1).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Nice! This task is marked as done!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(tasks.get(index-1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to add a todo item into the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param command description of a todo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void createTodo(String command) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (command.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(new DukeException(\"todo\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            tasks.add(new Todo(command));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Ui.addedTask(new Todo(command), tasks.size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to add an Event into the list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param command description of an event"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void createEvent(String command) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String description \u003d command.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String at \u003d command.split(\" /at \", 2)[1].replace(\" \", \"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Ui.addedTask(new Event(description, at), tasks.size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(new DukeException(\"event\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (DateTimeParseException e2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(new DukeException(\"time\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to add a deadline into the list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param command description of an event"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void createDeadline(String command) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String description \u003d command.split(\"/by \", 2)[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String by \u003d command.split(\"/by \", 2)[1].replace(\" \", \"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Ui.addedTask(new Deadline(description, by), tasks.size());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(new DukeException(\"deadline\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }  catch (DateTimeParseException e2) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(new DukeException(\"time\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to recall the list of tasks"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void addTaskFromFile(String task, ArrayList\u003cTask\u003e store) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String type \u003d task.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String remain \u003d task.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String done \u003d remain.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String title \u003d remain.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        //System.out.println(title);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (type.isEmpty()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            store.add(new Todo(title, Boolean.valueOf(done)));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            String description \u003d title.split(\"/\", 2)[0];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String by \u003d title.split(\"/by \", 2)[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                newTask \u003d new Deadline(description, by, Boolean.valueOf(done));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(newTask);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                String at \u003d title.split(\"/at \", 2)[1];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                newTask \u003d new Event(description, at, Boolean.valueOf(done));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                store.add(newTask);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void findTask(String name) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            if (tasks.get(i).findTask(name)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                result.add(tasks.get(i));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        if (result.isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"No matching tasks found :(\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"Meimei found these matching tasks:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            for (int i \u003d 0; i \u003c result.size(); i++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaax"
        },
        "content": "                System.out.println((i + 1) + \".\" + result.get(i).toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void printTaskList() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println((i+1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to delete a specific task at the index of the list"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param command the specified index"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void deleteTask(String command) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Task k \u003d tasks.get(index-1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        tasks.remove(k);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Ui.deletedTask(k);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 163
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Todo is a subclass of Task and handles all the todo event created by user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Todo(String description, Boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String inputStyle() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"todo \" + super.inputStyle() ;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 25
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": " * Ui class prints various response by Duke object, handles user interactions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Hello! I\u0027m meimei ^_^\\nI could scream at you all day!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * duke asks for new user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @return the user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public String ask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"File not found \u003ew\u003c\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Bye! Meimei will miss u :(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to print a task that was successfully added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param task the added one"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param size of the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void addedTask(Task task, int size) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * method to print a deleted task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     * @param task that was deleted"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaax"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void deletedTask(Task task) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        System.out.println(\"Meimei will forget about this task:\\n\" + task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 48
    }
  },
  {
    "path": "src/main/java/duke/WriteFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class WriteFile {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        String file2 \u003d \"/Users/ngjiaxin/Desktop/AY2021/CS2103T/Week 2/data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            writeToFile(file2, \"first line\" + System.lineSeparator() + \"second line\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 28
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaax"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaax"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void test1() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Event e \u003d new Event(\"dance\", \"2020-08-09\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(e.inputStyle(), \"event false dance /at 2020-08-09\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaax"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    public void test2() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        Task e \u003d new Deadline(\"finish ip \", \"2020-08-25\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaax"
        },
        "content": "        assertEquals(e.inputStyle(), \"deadline false finish ip /by 2020-08-25\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaax": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaax"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaax"
        },
        "content": "java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "jiaax": 2
    }
  }
]
