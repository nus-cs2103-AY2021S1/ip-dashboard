[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 15,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.CommandResponse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a personalized chat bot where a user can keep track of different tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new Duke chat bot that loads and saves tasks in the filepath."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param filePath is the path in which tasks are loaded and saved in."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Ui.showError(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives a command response to user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param input The input from the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return the command response to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public CommandResponse getResponse(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            return c.execute(tasks, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            return new CommandResponse(Ui.showError(e), false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 40,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Creates a new DukeException object so that exceptions can be thrown."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 10
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.CommandResponse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Initializes the main window."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.printWelcome(), dukeImage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        CommandResponse response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                DialogBox.getDukeDialog(response.getResponse(), dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        if (response.isExit()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1.2));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 65
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.CommandTypes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Parses the command from the user so that the chat bot can understand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param fullCommand is the actual full command from the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return represents the command that can be interpreted from the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @throws DukeException when user commands are not valid."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            String[] splitCommand \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            CommandTypes command \u003d CommandTypes.valueOf(splitCommand[0].toUpperCase());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                return new DoneCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                ToDo todo \u003d new ToDo(splitCommand[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                return new AddCommand(todo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                String[] splitDeadline \u003d splitCommand[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                Deadline deadline \u003d new Deadline(splitDeadline[0], splitDeadline[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                return new AddCommand(deadline);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                String[] splitEvent \u003d splitCommand[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                Event event \u003d new Event(splitEvent[0], splitEvent[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                return new AddCommand(event);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                return new FindCommand(splitCommand[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"SORRY!!! Task number is not valid.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"SORRY!!! I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"SORRY!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"SORRY!!! Wrong date format encountered!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 68
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new Storage file where tasks can be loaded from and saved to."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param filepath represents the path of the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Loads tasks from the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a list of all the tasks from the file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @throws DukeException when there are problems with loading from the file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                String loadTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                if (loadTask.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    task \u003d ToDo.load(loadTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                } else if (loadTask.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    task \u003d Deadline.load(loadTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                } else if (loadTask.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    task \u003d Event.load(loadTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"Sorry!!! File not found.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"Sorry!!! Previous tasks not saved properly.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Saves tasks into the file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks takes in a list of tasks to be saved into the file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @throws DukeException when there are problems saving into the file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                int isFinished \u003d task.getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                fw.write(task.save(isFinished) + \"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"Sorry!!! Encountered difficulties when saving tasks.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 91
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a list which stores tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Generates an empty task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a task list with the specified tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks represents the tasks to be stored in the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Adds a task into the task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param task is the task to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskNum is the index of the task in the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return is the deleted task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Task deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assert (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d this.tasks.size()) : \"taskNum cannot be less than 1 or more than task size.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Task deletedTask \u003d this.tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Marks a specified task from the task list as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskNum is the index of the task to be marked as completed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void markAsDone(int taskNum) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assert (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d this.tasks.size()) : \"taskNum cannot be less than 1 or more than task size.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.tasks.get(taskNum - 1).markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Retrieves a specified task from the task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskNum is the index of the task to be retrieved."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return the specified task from the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Task getTask(int taskNum) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return this.tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Makes a list of all the tasks from the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a list of all the tasks in the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gets the number of tasks in the task list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return the number of tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gets a task list of tasks containing the keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param keyword is the keyword used to find the tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a task list of tasks containing the keyword."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public TaskList getMatchingTasks(String keyword) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a string representation of the task list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string representation of the task list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        StringBuilder orderedList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            orderedList.append(\"\\n\\t\").append(i).append(\".\").append(this.tasks.get(i - 1));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return orderedList.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 120
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private static final String DIVIDER_LINE \u003d \"__________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints a response to the user with 2 dividing lines."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param print is the response to the user with 2 dividing lines."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string containing the response to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String printWithDivider(String print) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return DIVIDER_LINE + print + \"\\n\" + DIVIDER_LINE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints a greeting to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String printWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return printWithDivider(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints an exit message to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String printExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return printWithDivider(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints all the tasks in the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskList is the list of tasks to be printed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return printWithDivider(\"Here are the tasks in your list:\" + taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints a message noting that a task is done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param task is the task marked as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String printDoneTask(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return printWithDivider(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints a message noting that a task is deleted from the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param task is the task that was deleted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskList is the list of tasks in which the specified task was deleted from."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String printDeleteTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return printWithDivider(\"Noted. I\u0027ve removed this task:\\n\\t\" + task + getNumOfTasks(taskList));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints a message noting that a task is added into the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param task is the task that was added."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskList is the list in which the task was added to."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String printAddTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return printWithDivider(\"Got it. I\u0027ve added this task:\\n\\t\" + task + getNumOfTasks(taskList));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints a numbered list of the tasks with the specified keyword."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param keyword is the keyword used to find the tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskList is the task list to find the tasks with keyword from."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String printFindTasks(String keyword, TaskList taskList) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return printWithDivider(\"Here are the matching tasks in your list:\" + taskList.getMatchingTasks(keyword));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gets the number of tasks in the task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskList is the list to get the number of tasks from."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a message with the number of tasks in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String getNumOfTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        int numOfTasks \u003d taskList.getNumOfTasks();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            msg \u003d String.format(\"\\nNow you have %d task in the list.\", numOfTasks);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            msg \u003d String.format(\"\\nNow you have %d tasks in the list.\", numOfTasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Prints an error message should there be an exception."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param e is the exception in which we get the message from."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static String showError(Exception e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return printWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 109
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a command to add a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new add command to add a task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param task is the task to be add."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Adds the task to the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks is the task list that the command will execute with."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param storage is the storage that the command will execute with."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a command response after executing the add command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @throws DukeException when there is a problem executing the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public CommandResponse execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return new CommandResponse(Ui.printAddTask(task, tasks), this.isExit());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 39
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a command that the user gives."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Executes a command with the given tasks and storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks is the task list that the command will execute with."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param storage is the storage that the command will execute with."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a command response after executing the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @throws DukeException when there is a problem executing the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public abstract CommandResponse execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Indicates whether the command is an exit command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return false by default and only true if the command is an exit command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 36
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResponse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents the command response after executing a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class CommandResponse {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final String response;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Makes a command response with the string response and boolean isExit parameters."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param response is the string representation of this response."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param isExit indicates whether the response is an exit command response."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public CommandResponse(String response, boolean isExit) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.response \u003d response;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Retrieves the string response."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return the string response."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return this.response;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives the boolean of isExit."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return either true or false."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 39
    }
  },
  {
    "path": "src/main/java/duke/command/CommandTypes.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents the set of strings which are legal as command types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public enum CommandTypes {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    FIND(\"find\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    final String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new command type from the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param command is one the command types from the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    CommandTypes(String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a command to delete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new delete command to delete a task with the specified index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskNum is the index of the task to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks is the task list that the command will execute with."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param storage is the storage that the command will execute with."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a command response after executing the delete command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @throws DukeException when there is a problem executing the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public CommandResponse execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Task deletedTask \u003d tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            return new CommandResponse(Ui.printDeleteTask(deletedTask, tasks), this.isExit());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"SORRY!!! Task number is not valid.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a command to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new done command to mark a task with the specified index as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param taskNum is the index of the task to be marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Marks a task from the task list as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks is the task list that the command will execute with."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param storage is the storage that the command will execute with."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a command response after executing the done command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @throws DukeException when there is a problem executing the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public CommandResponse execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            tasks.markAsDone(taskNum);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Task doneTask \u003d tasks.getTask(taskNum);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            return new CommandResponse(Ui.printDoneTask(doneTask), this.isExit());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            throw new DukeException(\"SORRY!!! Task number is not valid.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a command to exit from the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new exit command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Exits from the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks is the task list that the command will execute with."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param storage is the storage that the command will execute with."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a command response after executing the exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @throws DukeException when there is a problem executing the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public CommandResponse execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return new CommandResponse(Ui.printExit(), this.isExit());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Indicates whether the command is an exit command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return is true only if it is an exit command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 42
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a command to find tasks which matches a keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new find command with the intended keyword."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param keyword is the keyword used to find the tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Finds the tasks which matches the keyword."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks is the tasks the command will execute with."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param storage is the storage the command will execute with."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a command response after executing the find command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public CommandResponse execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return new CommandResponse(Ui.printFindTasks(keyword, tasks), this.isExit());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a command to list all the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new list command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Lists all the tasks from the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param tasks is the task list that the command will execute with."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param storage is the storage that the command will execute with."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a command response after executing the list command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public CommandResponse execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return new CommandResponse(Ui.printList(tasks), this.isExit());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a deadline to be done by a specified date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new Deadline with the given description and date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param description is the description of the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param by is the deadline date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives a Deadline task from the full task description in the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param loadTask is the full task description in the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a Deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static Deadline load(String loadTask) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String[] splitTask \u003d loadTask.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Deadline deadline \u003d new Deadline(splitTask[2], splitTask[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        if (splitTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            deadline.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives a string indicating whether the deadline is done and the description of the deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param isFinished is the value 1 if deadline is done or 0 if deadline is not done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string indicating 1 or 0 and the description of the deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String save(int isFinished) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"D | \" + super.save(isFinished) + \" | \" + this.by;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Returns a string representation of the deadline."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string representation of the deadline."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents an event to be done at a specified date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new Event with the given description and date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param description is the description of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param at is the event date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives an Event task from the full task description in the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param loadTask is the full task description in the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return an Event task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static Event load(String loadTask) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String[] splitTask \u003d loadTask.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Event event \u003d new Event(splitTask[2], splitTask[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        if (splitTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            event.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives a string indicating whether the event is done and the description of the event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param isFinished is the value 1 if event is done or 0 if event is not done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string indicating 1 or 0 and the description of the event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String save(int isFinished) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"E | \" + super.save(isFinished) + \" | \" + this.at;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Returns a string representation of the event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string representation of the event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new task with the given description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param description is the description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gets the status icon which is either a tick or cross."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a tick if the task is done or cross if the task is not done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gets the boolean value of the task which is either true or false."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return true if the task is done or false if the task is not done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives a string indicating whether a task is done and the description of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param isFinished is the value 1 if task is done or 0 if task is not done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string indicating 1 or 0 and the description of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String save(int isFinished) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return isFinished + \" | \" + this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string representation of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 65
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " * Represents a task to be done without a specified date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Creates a new ToDo with the given description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param description is the description of the todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives a Todo task from the full task description in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param loadTask is the full task description in the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a Todo task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static ToDo load(String loadTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String[] splitTask \u003d loadTask.split(\" \\\\| \", 3);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        ToDo todo \u003d new ToDo(splitTask[2]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        if (splitTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            todo.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Gives a string indicating whether the todo is done and the description of the todo."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @param isFinished is the value 1 if todo is done or 0 if todo is not done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string indicating 1 or 0 and the description of the todo."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String save(int isFinished) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"T | \" + super.save(isFinished);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * Returns a string representation of the todo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     * @return a string representation of the todo."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 52
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" left \u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"What can I do for you?\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void parse_invalidDeleteCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Exception e \u003d assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Parser.parse(\"delete letter\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String expected \u003d \"SORRY!!! Task number is not valid.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String actual \u003d e.getMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void parse_invalidArgumentCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Exception e \u003d assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Parser.parse(\"hey\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String expected \u003d \"SORRY!!! I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String actual \u003d e.getMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void parse_emptyTodoCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Exception e \u003d assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Parser.parse(\"todo\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String expected \u003d \"SORRY!!! The description of a task cannot be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String actual \u003d e.getMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void parse_emptyDeadlineDate_exceptionThrown() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Exception e \u003d assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Parser.parse(\"deadline CS2103T /by\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String expected \u003d \"SORRY!!! The description of a task cannot be empty.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String actual \u003d e.getMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void parse_invalidEventDate_exceptionThrown() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Exception e \u003d assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            Parser.parse(\"event CCA /at 7th June\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String expected \u003d \"SORRY!!! Wrong date format encountered!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String actual \u003d e.getMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 59
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final ToDo todo \u003d new ToDo(\"wakeup\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final Deadline deadline \u003d new Deadline(\"project\", \"2020-09-01\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private final Event event \u003d new Event(\"holiday\", \"2020-12-12\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void markAsDone_doneSecondTask_correctTaskDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.markAsDone(2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assertEquals(\"\\n\\t1.[T][✗] wakeup\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                + \"\\n\\t2.[D][✓] project (by: 1 Sep 2020)\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                + \"\\n\\t3.[E][✗] holiday (at: 12 Dec 2020)\", tasks.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void deleteTask_deleteThirdTask_correctTaskDeleted() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.deleteTask(3);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assertEquals(\"\\n\\t1.[T][✗] wakeup\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                + \"\\n\\t2.[D][✗] project (by: 1 Sep 2020)\", tasks.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void getNumOfTasks_numOfTasks_correctNumOfTasks() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        int numOfTasks \u003d tasks.getNumOfTasks();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        assertEquals(3, numOfTasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 48
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "blah"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 1,
      "-": 20
    }
  }
]
