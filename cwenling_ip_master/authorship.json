[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/nite.Nite.java` file, right-click it, and choose `Run nite.Nite.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "src/main/resources/audio/meow2.wav uses this sound from freesound:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Cat meow by wesleyextreme_gamer (https://freesound.org/people/wesleyextreme_gamer/sounds/530341/)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "src/main/resources/images/blackcat_circle.png is edited from iStockPhoto:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Black cat by sarayut (https://www.istockphoto.com/photo/closeup-portrait-black-cat-the-face-in-front-of-eyes-is-yellow-halloween-black-cat-gm901574784-248725535)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "src/main/resources/images/usercat_circle.png is edited from pixabay:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Cat by ArtTower (https://pixabay.com/illustrations/fractal-cat-feline-portrait-animal-681584/)"
      }
    ],
    "authorContributionMap": {
      "cwenling": 11,
      "-": 25
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    mainClassName \u003d \"nite.Launcher\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    archiveBaseName \u003d \"nite\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 22,
      "-": 42
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "# Nite User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Nite is a task tracking cat-bot, dark as the night, and convenient to use."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    1. [View Help](#view-help)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    2. [Add tasks](#add-tasks)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    3. [List tasks](#list-tasks)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    4. [Mark tasks as done](#mark-tasks-as-done)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    5. [Find tasks with keyword](#find-tasks-with-keyword)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    6. [Sort list of tasks](#sort-list-of-tasks)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    7. [Delete tasks](#delete-tasks)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    8. [Exit Nite](#exit-nite)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "* [Acknowledgements](#acknowledgements)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "1. Ensure you have `Java 11` or above installed in your Computer."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "2. Download the latest nite.jar from [here](https://github.com/cwenling/ip/releases/tag/A-Release)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for Nite."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "4. Double-click the file, and Nite will wake up. Your chat with Nite will appear:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![Welcome Screen](./ui/welcome.png)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "5. Type your command in the text box and press `Enter` to execute the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "You can start chatting with Nite now!"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "### View Help"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Nite sends you a message listing out all the available commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### `help` - List all commands"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Lists out all available Nite commands. "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `help`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![Viewing help](./ui/help.png)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "### Add tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Add 3 different types of tasks, such as Todo, Deadline, and Event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### 1. `todo DESCRIPTION` - Add a Todo task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Adds a Todo task, which is a generic non-time-sensitive task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `todo feed my cat`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![After adding a Todo](./ui/todo.png)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### 2. `deadline DESCRIPTION /by YYYY-MM-DD HHmm` - Add a Deadline task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Adds a Deadline task, which is task to be completed by a certain time."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `deadline book a vet visit /by 2020-10-03 2359`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![After adding a Deadline](./ui/deadline.png)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### 3. `event DESCRIPTION /at YYYY-MM-DD HHmm to YYYY-MM-DD HHmm` - Add an Event task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Adds an Event task, which is task occuring in a certain time window."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `event catwalk parade /at 2020-12-25 1400 to 2020-12-25 1600`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![After adding an Event](./ui/event.png)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## List tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "You can list all your tasks stored in Nite."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### `list` - List"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Displays a list of all your current tasks, completed and incomplete."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![List command](./ui/list.png)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## Mark tasks as done"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Nite can mark and keep track of which tasks you have already completed."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cwenling"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### `done TASK_NUMBER` - Mark a task as done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Marks a task as \u0027done\u0027."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `done 2`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![Done command](./ui/done.png)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## Find tasks with keyword"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Nite can find your tasks that match your specified keyword."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cwenling"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### `find KEYWORD` - Find tasks"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Find and list tasks that match the keyword."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `find cat`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![Find Command](./ui/find.png)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## Sort list of tasks"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Nite can help you to sort selected types of tasks according to time and description"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cwenling"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### `sort [TASK_TYPE] [TASK_TYPE] [TASK_TYPE]` - Sort tasks"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Sorts and displays specified task types."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `sort deadline`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Sorts all deadline type tasks according to urgency."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![Sort Deadline](./ui/sort-deadline.png)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `sort deadline todo`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Sorts all deadline type tasks according to urgency, followed by all todo type tasks according to description."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![Sort Deadline Todo](./ui/sort-deadline-todo.png)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## Delete tasks"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Nite can delete a task that you no longer want to track."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cwenling"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### `delete TASK_NUMBER` - Delete a task"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Deletes a task."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `delete 2`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![Delete command](./ui/delete.png)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## Exit Nite"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Nite closes the application."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cwenling"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cwenling"
        },
        "content": "##### `bye` - Nite goes to sleep, and the window will close automatically."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Example of usage: `bye`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cwenling"
        },
        "content": "![Exit Command](./ui/exit.png)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cwenling"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Resources:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cwenling"
        },
        "content": "src/main/resources/audio/meow2.wav uses this sound from freesound:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Cat meow by wesleyextreme_gamer (https://freesound.org/people/wesleyextreme_gamer/sounds/530341/)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "cwenling"
        },
        "content": "src/main/resources/images/blackcat_circle.png is edited from iStockPhoto:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Black cat by sarayut (https://www.istockphoto.com/photo/closeup-portrait-black-cat-the-face-in-front-of-eyes-is-yellow-halloween-black-cat-gm901574784-248725535)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cwenling"
        },
        "content": "src/main/resources/images/usercat_circle.png is edited from pixabay:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cwenling"
        },
        "content": "Cat by ArtTower (https://pixabay.com/illustrations/fractal-cat-feline-portrait-animal-681584/)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cwenling": 157,
      "-": 21
    }
  },
  {
    "path": "src/main/java/nite/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 12
    }
  },
  {
    "path": "src/main/java/nite/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.MainWindow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final String mainWindowView \u003d \"/view/MainWindow.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final String iconImage \u003d \"/images/blackcat_circle.png\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final String stageTitle \u003d \"NITE\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Nite nite \u003d new Nite();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(mainWindowView));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            assert ap !\u003d null : \"AnchorPane should not be null.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setNite(nite);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            stage.setTitle(stageTitle);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(iconImage)));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 43
    }
  },
  {
    "path": "src/main/java/nite/Nite.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents the Duke chat-bot, called Nite."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Nite is an interactive app which helps to keep track of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * @author Chia Wen Ling"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * @version v0.1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Nite {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final String filePath \u003d \"/data/nite.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final String folderPath \u003d \"/data\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Initialises the Ui, Storage and TaskList upon starting."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Nite() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage \u003d new Storage(filePath, folderPath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (NiteException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the response for the input command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Response to user\u0027s input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        boolean isExit;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            if (isExit) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                return ui.showFarewell();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            assert !command.isExit() : \"Exit command should not reach here.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (NiteException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 57,
      "-": 1
    }
  },
  {
    "path": "src/main/java/nite/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents an AddCommand where user wants to add a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an AddCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param task Task which is to be added to the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to add a task to list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String echoizer \u003d \"  Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"    %s\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  Now you have %d tasks in the list.\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return ui.showAction(String.format(echoizer, task, tasks.size()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 41
    }
  },
  {
    "path": "src/main/java/nite/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents an abstract Command from which other *Commands inherit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException If command is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws NiteException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns whether a Command is an ExitCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return False by default as most Commands are not ExitCommands."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 32
    }
  },
  {
    "path": "src/main/java/nite/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a DeleteCommand where user wants to delete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a DeleteCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskNumber Index of task to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to delete a task from list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException If command is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws NiteException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Can\u0027t delete a task that does not exist.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t \u003d tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return ui.showAction(String.format(\"  Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"    %s\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  Now you have %d tasks in the list.\\n\", t, tasks.size()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 45
    }
  },
  {
    "path": "src/main/java/nite/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a DoneCommand where user wants to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a DoneCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskNumber Index of task to be marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to mark a task as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException If command is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws NiteException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Can\u0027t complete a task that does not exist.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t \u003d tasks.markTask(taskNumber);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return ui.showAction(String.format(\"  Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"    %s\\n\", t));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 44
    }
  },
  {
    "path": "src/main/java/nite/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a ExitCommand where user wants to exit from duke.Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an ExitCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to exit from duke.Duke program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return ui.showFarewell();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns whether a Command is an ExitCommand."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return True as this is an ExitCommand."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 41
    }
  },
  {
    "path": "src/main/java/nite/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a FindCommand where user wants to find tasks matching a keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a FindCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param keyword Input keyword to be found in tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to find and display matching tasks in tasklist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasksString \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return ui.showAction(String.format(\"  Here are the tasks that match %s:\\n\" + tasksString, keyword));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 36
    }
  },
  {
    "path": "src/main/java/nite/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a HelpCommand where user wants a list of possible commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a HelpCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to list the possible duke.Duke commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String commandsList \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                \"  These are the Nite commands!!\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  add a task\\n    todo \u003cdescription\u003e\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"    deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD HHmm\u003e\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"    event \u003cdescription\u003e /at \u003cYYYY-MM-DD HHmm\u003e to \u003cYYYY-MM-DD HHmm\u003e\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  delete a task\\n    delete \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  mark task as done\\n    done \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  list all tasks\\n    list\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  find a task\\n    find \u003ckeyword\u003e\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  sort tasks\\n    sort \u003ctaskType\u003e \u003ctaskType\u003e \u003ctaskType\u003e\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"  exit Nite\\n    bye\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return ui.showAction(commandsList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 41
    }
  },
  {
    "path": "src/main/java/nite/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents an UnknownCommand where user input is unclear."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an UnknownCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param input Full input by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public InvalidCommand(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to inform user of unclear input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException Always throws exception as input is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws NiteException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        throw new NiteException(String.format("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                \"I\u0027m sorry, but I don\u0027t know what \\\"%s\\\" means :-(\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + \"    type \\\"help\\\" for a list of commands!\", input));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 39
    }
  },
  {
    "path": "src/main/java/nite/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a ListCommand where user wants to list all the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a ListCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to list and display tasks in tasklist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String displaying completion of Command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasksString \u003d tasks.listTasks();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return ui.showAction(\"  Here are the tasks in your list:\\n\" + tasksString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 31
    }
  },
  {
    "path": "src/main/java/nite/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a SortCommand where user wants to sort the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final String[] sortingParameters;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a SortCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param sortingParameters Order and Type of tasks to sort."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public SortCommand(String ... sortingParameters) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.sortingParameters \u003d sortingParameters;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Executes the command to sort and display the tasklist."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param tasks Tasklist containing current tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param ui Ui for displaying output."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param storage Storage of tasks in hard disk."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Sorted tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ArrayList\u003cTask\u003e sortedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        for (int i \u003d 1; i \u003c sortingParameters.length; i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            sortedTasks.addAll(tasks.sortedTasks(sortingParameters[i]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Stream\u003cString\u003e stringsStream \u003d sortedTasks.stream().map(t -\u003e String.format(\"%n    %d.%s\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                counter.getAndIncrement(), t));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String tasksString \u003d stringsStream.reduce(\"\", (s, t) -\u003e s +\u003d String.format(\"%s\", t));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return ui.showAction(\"  Here are the sorted tasks:\" + tasksString);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 48
    }
  },
  {
    "path": "src/main/java/nite/exception/NiteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents NiteExceptions used in Nite-bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class NiteException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a NiteException with a specified message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param errorMessage Error message to be shown."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public NiteException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 17
    }
  },
  {
    "path": "src/main/java/nite/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.InvalidCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.command.SortCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.ToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents the Parser used to make sense of user commands."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Parses user input into executable Commands."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param fullCommand Entire user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return duke.Duke Command corresponding to input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException If task is not successfully parsed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static Command parse(String fullCommand) throws NiteException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (fullCommand.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"help\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new HelpCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                command \u003d new DoneCommand(Integer.parseInt(fullCommand.split(\" \")[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (NumberFormatException | ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new NiteException(\"Invalid format of task number!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                command \u003d new DeleteCommand(Integer.parseInt(fullCommand.split(\" \")[1]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (NumberFormatException | ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new NiteException(\"Invalid format of task number!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"todo\", fullCommand));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"deadline\", fullCommand));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new AddCommand(parseTask(\"event\", fullCommand));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                command \u003d new FindCommand(fullCommand.split(\" \")[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new NiteException(\"Invalid format of find command!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (fullCommand.startsWith(\"sort\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new SortCommand(fullCommand.split(\" \"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            command \u003d new InvalidCommand(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Parses a task input into Task objects."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param type Type of task (todo, deadline, or event)."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskString The full input of the task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Task obtained from the input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException If task is not successfully parsed."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static Task parseTask(String type, String taskString) throws NiteException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d getTodo(taskString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d getDeadline(taskString);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d getEvent(taskString);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            assert false : \"Cases should be exhaustive.\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Unexpected value: \" + type);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static Task getEvent(String taskString) throws NiteException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (taskString.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String[] taskArr2 \u003d taskString.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d new Event(taskArr2[0], taskArr2[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Invalid description of an event.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static Task getDeadline(String taskString) throws NiteException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (taskString.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String[] taskArr \u003d taskString.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d new Deadline(taskArr[0], taskArr[1]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Invalid description of a deadline.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static Task getTodo(String taskString) throws NiteException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (taskString.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        task \u003d new ToDo(taskString.substring(5));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 134
    }
  },
  {
    "path": "src/main/java/nite/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents the Storage manager used to save and load tasks from hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final File folder;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Storage manager."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param filePath Directory where text file is saved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param folderPath Path name of text file to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Storage(String filePath, String folderPath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.file \u003d new File(System.getProperty(\"user.dir\") + filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.folder \u003d new File(System.getProperty(\"user.dir\") + folderPath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Loads task data from the text file if it exists."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return List of lines in the text files."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException If file is not found or unable to write to file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws NiteException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                throw new NiteException(\"IOException from creating data file\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Data folder does not exist\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert folder.exists() : \"Folder should have been created\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert file.exists() : \"File should have been created\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                taskList.add(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"FileNotFoundException\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Unable to read from file\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Writes task data to text file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskList Tasklist containing the tasks to be saved."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        FileWriter fileWriter;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            ArrayList\u003cString\u003e taskStrings \u003d taskList.tasksToText();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            for (String string : taskStrings) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                fileWriter.write(string);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 92
    }
  },
  {
    "path": "src/main/java/nite/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a Task which is a Deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private LocalDateTime timeBy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Deadline Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param description Description of Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param timeByString The date and time which Deadline is due."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException If format of time is wrong."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Deadline(String description, String timeByString) throws NiteException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeBy;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeBy \u003d LocalDateTime.parse(timeByString, super.inputDateTimePattern);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DateTimeParseException ignored) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Wrong format of for deadline time.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.timeBy \u003d timeBy;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the String representation of a Deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of a Deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String timeBy \u003d this.timeBy.format(super.displayDateTimePattern);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + timeBy + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the text representation of a Deadline to be saved in a text file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Text representation of Deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String timeBy \u003d this.timeBy.format(super.inputDateTimePattern);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return String.format(\"D%s%s%s%s%s%s%n\", separator, isDone, separator,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                super.description, separator, timeBy);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the type of the Deadline Task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representing Deadline."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String typeOfTask() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"deadline\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return timeBy;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 71
    }
  },
  {
    "path": "src/main/java/nite/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a Task which is an Event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final LocalDateTime timeStart;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final LocalDateTime timeEnd;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an Event Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param description Description of Event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param at The date and time during which the Event occurs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @throws NiteException If format of time is wrong."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Event(String description, String at) throws NiteException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String[] startEnd \u003d at.split(\" to \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeStart;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        LocalDateTime timeEnd;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeStart \u003d LocalDateTime.parse(startEnd[0], super.inputDateTimePattern);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            timeEnd \u003d LocalDateTime.parse(startEnd[1], super.inputDateTimePattern);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            throw new NiteException(\"Wrong format of for deadline time.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.timeStart \u003d timeStart;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.timeEnd \u003d timeEnd;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the String representation of an Event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of an Event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String timeInterval \u003d timeStart.format(super.displayDateTimePattern) + \" to \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + timeEnd.format(super.displayDateTimePattern);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeInterval + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the text representation of an Event to be saved in a text file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Text representation of Event."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String timeInterval \u003d timeStart.format(super.inputDateTimePattern) + \" to \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                + timeEnd.format(super.inputDateTimePattern);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return String.format(\"E%s%s%s%s%s%s%n\", separator, isDone, separator,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                super.description, separator, timeInterval);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the type of the Event Task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representing Event."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String typeOfTask() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"event\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return timeStart;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 77
    }
  },
  {
    "path": "src/main/java/nite/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a Task created by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected final DateTimeFormatter inputDateTimePattern \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    protected final DateTimeFormatter displayDateTimePattern \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Default constructor for a Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !description.isEmpty() : \"Description should not be empty.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the symbolic representation of the completion status of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Tick if task is completed, cross if task is not completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the String representation of a Task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of a Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the text representation of a Task to be saved in a text file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Default Method to be overridden by classes which inherit Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Text representation of Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public abstract String toData();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Checks if a task contains the given keyword in its description."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param keyword Word to find in task description."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return True if description contains keyword, false otherwise."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !keyword.isEmpty() : \"Keyword should not be empty.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the type of the Task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Type of Task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public abstract String typeOfTask();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 83
    }
  },
  {
    "path": "src/main/java/nite/task/TaskComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Type comparator compares two tasks of the same type."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class TaskComparator implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Compares two tasks of the same type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * The first criteria of  comparison is the time of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * If the task lacks a timing, or if two timings are the same,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * tasks will be compared by alphabetical order."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param task1 The first task to be compared."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param task2 The second task to be compared"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return The relative ranking of the two tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public int compare(Task task1, Task task2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (task1.typeOfTask().equals(\"todo\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return task1.description.compareTo(task2.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } else if (task1.typeOfTask().equals(\"deadline\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                || task1.typeOfTask().equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            if (task1.getTime().equals(task2.getTime())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                return task1.description.compareTo(task2.description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            return task1.getTime().compareTo(task2.getTime());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 33
    }
  },
  {
    "path": "src/main/java/nite/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates an empty TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a TaskList already containing Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * This is used if Storage is able to load data from the text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskStrings List of lines in the text file, representing Tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e taskStrings) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        for (String taskString : taskStrings) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                this.tasks.add(dataToTask(taskString));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            } catch (NiteException ignored) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                // Line in data which cannot be converted to Task is ignored."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Converts a line of text into a Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskString Line of text from text file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Task which is specified by the line of text"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task dataToTask(String taskString) throws NiteException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String[] taskLine \u003d taskString.split(\"~\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        switch (taskLine[0]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d new ToDo(taskLine[2]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d new Deadline(taskLine[2], taskLine[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task \u003d new Event(taskLine[2], taskLine[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            assert false : \"Cases should be exhaustive.\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (taskLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns a String listing out all the tasks in the tasklist."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Stream\u003cString\u003e stringsStream \u003d tasks.stream().map(t -\u003e String.format(\"  %d.%s%n\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                counter.getAndIncrement(), t));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return stringsStream.reduce(\"\", (s, t) -\u003e s +\u003d String.format(\"  %s\", t));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert task !\u003d null : \"Task should not be null.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the size of the TaskList."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Number of items in TaskList."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Converts the TaskList into lines of text."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return List containing lines of text."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ArrayList\u003cString\u003e tasksToText() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return tasks.stream().map(Task::toData)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns a String listing out all the tasks that match the keyword."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of list of tasks."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String findTasks(String keyword) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !keyword.isEmpty() : \"Keyword should not be empty.\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        AtomicInteger counter \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Stream\u003cTask\u003e matchingTasks \u003d tasks.stream().filter(t -\u003e t.hasKeyword(keyword));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Stream\u003cString\u003e stringsStream \u003d matchingTasks.map(t -\u003e String.format(\"  %d.%s%n\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                counter.getAndIncrement(), t));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return stringsStream.reduce(\"\", (s, t) -\u003e s +\u003d String.format(\"  %s\", t));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Deletes and returns the task at a position in the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskNumber Position of the Task in the list of tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Task which was deleted."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task remove(int taskNumber) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c size()) : \"Task number should be within bounds\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Marks a task in the list as done."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param taskNumber Position of Task in the list of tasks."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Task which was marked as done."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Task markTask(int taskNumber) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c size()) : \"Task number should be within bounds\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task t \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns a sorted list of tasks based on timing."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param type Type of task, either todo, deadline, or event."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return A sorted ArrayList of tasks."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ArrayList\u003cTask\u003e sortedTasks(String type) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !type.isEmpty() : \"Task type cannot be empty.\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Stream\u003cTask\u003e tasksOfType \u003d tasks.stream().filter(t -\u003e t.typeOfTask().equals(type));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Stream\u003cTask\u003e sortedTasks \u003d tasksOfType.sorted(new TaskComparator());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return sortedTasks.collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 163
    }
  },
  {
    "path": "src/main/java/nite/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents a Task which is a Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Todo Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param description Description of Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the String representation of a Todo."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of a Todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the text representation of a Todo to be saved in a text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return Text representation of Todo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String isDone \u003d super.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String separator \u003d \"~\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"T\" + separator + isDone + separator + super.description + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Returns the type of the Todo Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representing Todo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String typeOfTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"todo\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 48
    }
  },
  {
    "path": "src/main/java/nite/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !text.isEmpty() : \"Text should not be empty.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert img !\u003d null : \"Image should not be null.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a DialogBox for user\u0027s dialog."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param text Text to be shown."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param img Image to be shown."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return A DialogBox containing the text and image."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !text.isEmpty() : \"Text should not be empty.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert img !\u003d null : \"Image should not be null.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a DialogBox for Nite\u0027s dialog."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param text Text to be shown."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param img Image to be shown."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return A DialogBox containing the text and image."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static DialogBox getNiteDialog(String text, Image img) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !text.isEmpty() : \"Text should not be empty.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert img !\u003d null : \"Image should not be null.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 81
    }
  },
  {
    "path": "src/main/java/nite/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.media.Media;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import javafx.scene.media.MediaPlayer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.Nite;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private Nite nite;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            .getResourceAsStream(\"/images/usercat_circle.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final Image niteImage \u003d new Image(this.getClass()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            .getResourceAsStream(\"/images/blackcat_circle.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private final String meowSoundPath \u003d \"/audio/meow2.wav\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Initializes the user interface upon starting application."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert scrollPane !\u003d null : \"ScrollPane should not be null.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Greets the user upon starting the application."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String greeting \u003d Ui.showWelcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !greeting.isEmpty() : \"Welcome message should not be empty.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert niteImage !\u003d null : \"Image should not be empty.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                DialogBox.getNiteDialog(greeting, niteImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        playSound(meowSoundPath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void setNite(Nite nite) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert nite !\u003d null : \"Nite should not be null.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        this.nite \u003d nite;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private void playSound(String soundPath) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        // Media sound \u003d new Media(new File(soundPath).toURI().toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !soundPath.isEmpty() : \"Path should not be empty\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Media sound \u003d new Media(this.getClass().getResource(soundPath).toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        MediaPlayer mediaPlayer \u003d new MediaPlayer(sound);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        mediaPlayer.play();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                public void run () {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            }, 1000);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !input.isEmpty() : \"Input should not be empty.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        String response \u003d nite.getResponse(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !response.isEmpty() : \"Response should not be empty.\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert userImage !\u003d null : \"Image should not be empty.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert niteImage !\u003d null : \"Image should not be empty.\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                DialogBox.getNiteDialog(response, niteImage)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        );"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        playSound(meowSoundPath);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 100
    }
  },
  {
    "path": "src/main/java/nite/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": " * Represents the Ui dealing with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"            _____   _____\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|\\\\   |  |     |    |\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"| \\\\  |  |     |    |_____\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|  \\\\ |  |     |    |\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"|   \\\\|  |     |    |_____\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String GREETING \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"  Hello! I\u0027m Nite, the Dark Knight,\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"  Here to help you track your tasks and achieve a great night.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            + \"  What can I do for you?\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    private static final String GOODBYE \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \"  Good nite! Hope you have a good night\u0027s sleep. See you soon!\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Creates a Ui for interacting with the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays the welcome message when user starts up Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of farewell message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return LOGO + GREETING;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays the farewell message when user exits Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of farewell message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String showFarewell() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return GOODBYE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays a formatted error message if a DukeException occurs."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param errorMessage Error message of the DukeException."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of an error message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String showError(String errorMessage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !errorMessage.isEmpty() : \"Message to be displayed should not be empty.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return \"  :-( OOPS!!! \" + errorMessage + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * Displays a formatted message showing execution of a command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @param actionMessage Message to be shown to user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     * @return String representation of a completed action."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cwenling"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public String showAction(String actionMessage) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert !actionMessage.isEmpty() : \"Message to be displayed should not be empty.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        return actionMessage;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 66
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"1.0\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-color: #0000ff; -fx-border-radius: 20; -fx-border-width: 1.5; -fx-padding: 5; -fx-background-color: #f0f0ff; -fx-background-radius: 20;\" text\u003d\"Label\" textFill\u003d\"#0000ff\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "          \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \u003cFont name\u003d\"Courier New\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "          \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "          \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "          \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "cwenling": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"nite.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                   promptText\u003d\"Chat with Nite!\" style\u003d\"-fx-background-color: lightcyan\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "          \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "          \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003c/TextField\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: lightskyblue\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cwenling"
        },
        "content": "          \u003cfont\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \u003cFont name\u003d\"Courier New\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cwenling"
        },
        "content": "          \u003c/font\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003c/Button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: aquamarine;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" style\u003d\"-fx-background-color: lavender\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cwenling"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "cwenling": 31
    }
  },
  {
    "path": "src/test/java/nite/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assert(new ExitCommand().isExit());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 10
    }
  },
  {
    "path": "src/test/java/nite/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import nite.exception.NiteException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void testToData() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            assertEquals(String.format(\"D~0~tP AB3 familiarization~2020-08-26 2359%n\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cwenling"
        },
        "content": "                    new Deadline(\"tP AB3 familiarization\", \"2020-08-26 2359\").toData());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        } catch (NiteException ex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cwenling"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 20
    }
  },
  {
    "path": "src/test/java/nite/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "package nite.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cwenling"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        Task test \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        test.markAsDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "        assertEquals(\"\\u2713\", test.getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cwenling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cwenling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cwenling": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cwenling"
        },
        "content": "deadline tP AB3 familiarization /by 2020-08-26 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cwenling"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cwenling"
        },
        "content": "help"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cwenling"
        },
        "content": "find tP"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cwenling"
        },
        "content": "by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cwenling"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cwenling": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cwenling"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cwenling"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cwenling"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "cwenling": 3,
      "-": 20
    }
  }
]
