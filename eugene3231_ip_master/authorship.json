[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Deadline(String desc, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(desc, \"deadline\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.io.EOFException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void main(String[] args)  {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        startChat();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void initialize() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke the chatbot! \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void startChat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TaskHandler handler \u003d new TaskHandler();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d handler.getTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Listens for input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Encounters exit command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                indent(1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                System.out.println(\"Bye bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Prints the given list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    handler.printList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    e.printStackTrace(System.out);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } else if (input.startsWith(\"done \") || input.equals(\"done\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                 try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     Task currentTask \u003d handler.modifyTask(input, list, TaskHandler.operationType.DONE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     printSuccess(\"done\", currentTask, list.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                 } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                     e.printStackTrace(System.out);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } else if (input.startsWith(\"delete \") || input.equals(\"delete\")){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    Task delTask \u003d handler.modifyTask(input, list, TaskHandler.operationType.DELETE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    printSuccess(\"delete\", delTask, list.size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    e.printStackTrace(System.out);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } else if (input.startsWith(\"todo \") || input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Create and store todos given in list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    Task newTodo \u003d handler.processNewTask(input, Task.taskType.TODO);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    list.add(newTodo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    printSuccess(\"add\", newTodo, list.size());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                } catch (DukeException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    e.printStackTrace(System.out);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } else if (input.startsWith(\"deadline \") || input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Create and store deadlines given in list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    Task newDeadline \u003d handler.processNewTask(input, Task.taskType.DEADLINE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    list.add(newDeadline);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    printSuccess(\"add\", newDeadline, list.size());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }  catch (DukeException e){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    e.printStackTrace(System.out);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } else if (input.startsWith(\"event \") || input.equals(\"event\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Create and store events given in list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    Task newEvent \u003d handler.processNewTask(input, Task.taskType.EVENT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    list.add(newEvent);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    printSuccess(\"add\", newEvent, list.size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                } catch (DukeException e){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    e.printStackTrace(System.out);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // Other commands"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    handler.receiveInvalidCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                    e.printStackTrace(System.out);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void indent(int times) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        for (int i\u003d0; i\u003ctimes; i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.print(\"    \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void printSuccess(String operation, Task currentTask, int listSize) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // Prints success message and list size after task added/deleted"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        indent(1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (operation.equals(\"add\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.print(\"Successfully added:\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (operation.equals(\"delete\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.print(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(\"Good job! You completed:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            indent(2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(currentTask);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        indent(2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(currentTask);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        indent(1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"You have \" + listSize + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 111,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Event(String desc, String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(desc, \"event\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 12
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected taskStatus isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected taskType type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    enum taskStatus {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        DONE, NOTDONE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    enum taskType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Task(String desc, String type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.isDone \u003d taskStatus.NOTDONE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.description \u003d desc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            this.type \u003d taskType.TODO;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            this.type \u003d taskType.DEADLINE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            this.type \u003d taskType.EVENT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return (this.isDone \u003d\u003d taskStatus.DONE"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                ? \"\\u2713\" // return tick"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                : \"\\u2718\");  // or X symbols"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.isDone \u003d taskStatus.DONE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return this.isDone \u003d\u003d taskStatus.DONE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 44
    }
  },
  {
    "path": "src/main/java/TaskHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class TaskHandler {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    enum operationType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        DONE, DELETE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public TaskHandler() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void printList() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Asks user for tasks when printing empty list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"Empty list, pls add tasks to list first\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        int listPos \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        indent(1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++,listPos++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            indent(2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.println(listPos + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        indent(1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        System.out.println(\"You have \" + taskList.size() + \" task(s) in the list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Task modifyTask(String input, ArrayList\u003cTask\u003e list, TaskHandler.operationType currentOp) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String[] stringArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String lowerCaseOperation \u003d currentOp.toString().toLowerCase();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (stringArr.length !\u003d 2 ) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // if multiple tasks are given as arguments"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"Oops, pls enter only one task number after \" + lowerCaseOperation);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Finding the actual task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            int indexOfDone \u003d Integer.parseInt(stringArr[1]) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            Task currentTask \u003d list.get(indexOfDone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (currentOp \u003d\u003d operationType.DELETE) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                list.remove(currentTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } else if (currentOp \u003d\u003d operationType.DONE) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                currentTask.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return currentTask;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"Oops, pls enter a valid task number after \" + lowerCaseOperation);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Task processNewTask(String input, Task.taskType tasktype) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // Sorts the input into a task with or without time"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasktype \u003d\u003d Task.taskType.TODO) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            // Without time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            if (input.substring(4).trim().isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                // if given empty arguments or space as task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            String taskDesc \u003d input.substring(5);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new Todo(taskDesc);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasktype \u003d\u003d Task.taskType.DEADLINE) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return processTaskWithTime(input, tasktype, \"/by\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                throw new DukeException(\"Oops, use add deadline format: deadline [task] /by [time]\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else if (tasktype \u003d\u003d Task.taskType.EVENT) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                return processTaskWithTime(input, tasktype, \"/at\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "                throw new DukeException(\"Oops, use add event format: event [task] /at [time]\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new Task(\"this task should not be created\", \"todo\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static Task processTaskWithTime(String input, Task.taskType tasktype, String separator) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // Process string to find task description and time"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String taskDesc \u003d input.substring(tasktype.name().length() + 1, input.indexOf(separator));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        checkIsFieldEmpty(\"taskDesc\", taskDesc);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // +4 due to size of /by or /at with a space"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        String time \u003d input.substring(input.indexOf(separator) + 4);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        checkIsFieldEmpty(\"time\", time);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (tasktype \u003d\u003d  Task.taskType.DEADLINE) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new Deadline(taskDesc, time);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            return new Event(taskDesc, time);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void checkIsFieldEmpty(String nameOfField, String field) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        // check whether the argument given is empty"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        if (field.trim().isEmpty()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            throw new DukeException(\"Oops, \" + nameOfField + \" cannot be empty\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public static void indent(int times) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        for (int i\u003d0; i\u003ctimes; i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "            System.out.print(\"    \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public void receiveInvalidCommand() throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 114
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        super(desc, \"todo\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "deadline submit assignment /by tues 9pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "event meeting /at monday 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo finish assignment"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "todo final task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "dir /s /B \"..\\src\\main\\java\\*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "javac  -cp \"..\\src\" -Xlint:none -d \"..\\bin\" @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugene3231"
        },
        "content": "java -classpath \"..\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "eugene3231": 3,
      "-": 19
    }
  }
]
