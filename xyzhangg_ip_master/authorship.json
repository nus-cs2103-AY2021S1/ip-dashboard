[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    static String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static String format(String string) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return line + string + \"\\n\" + line;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static void list() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        StringBuilder taskListString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        taskListString.append(\"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        for (int i \u003d 1; i \u003c taskList.size() + 1; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            taskListString.append(\"     \").append(i).append(\".\").append(taskList.get(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        taskListString.delete(taskListString.length() - 1, taskListString.length());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(format(taskListString.toString()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static void done(String input) throws DukeException{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"done\") || input.equals(\"done \")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new InvalidTaskIndexException(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"done \") \u0026\u0026 input.length() \u003e 5) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                Task current \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                current.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                System.out.println(format(\"     Nice! I\u0027ve marked this task as done:\\n       \" + current));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                throw new InvalidTaskIndexException(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static void delete(String input) throws DukeException{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"delete\") || input.equals(\"delete \")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new InvalidTaskIndexException(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"delete \") \u0026\u0026 input.length() \u003e 7) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                int index \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                Task current \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                taskList.remove(current);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                System.out.println(format(\"     Noted. I\u0027ve removed this task:\\n       \" + current +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                        \"\\n     Now you have \" + taskList.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                throw new InvalidTaskIndexException(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static void addNewTask(Task newTask) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(format(\"     Got it. I\u0027ve added this task:\\n       \" + newTask +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                \"\\n     Now you have \" + taskList.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static void newTodo(String input) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"todo\") || input.equals(\"todo \")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"todo \") \u0026\u0026 input.length() \u003e 5) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            Todo newTodo \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            addNewTask(newTodo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static void newDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"deadline\") || input.equals(\"deadline \")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"deadline \") \u0026\u0026 input.length() \u003e 9) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (!input.contains(\"/by \")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                throw new InvalidDateTimeException(\"deadline\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                int index \u003d input.indexOf(\"/by \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String description \u003d input.substring(9, index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String time \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                addNewTask(newDeadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static void newEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"event\") || input.equals(\"event \")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.startsWith(\"event \") \u0026\u0026 input.length() \u003e 6) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            if (!input.contains(\"/at \")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                throw new InvalidDateTimeException(\"event\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                int index \u003d input.indexOf(\"/at \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String description \u003d input.substring(6, index);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                String time \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                Event newEvent \u003d new Event(description, time);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                addNewTask(newEvent);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    private static void chat() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            System.out.println(format(\"     Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            list();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            chat();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    done(input);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    delete(input);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    newTodo(input);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    newDeadline(input);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    newEvent(input);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                System.out.println(format(\"     \" + e.toString()));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                chat();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        System.out.println(format(\"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                \"     What can I do for you?\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        chat();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 142,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    DukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 15
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    EmptyDescriptionException(String task) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(\"☹ OOPS!!! The description of a \" + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 14
    }
  },
  {
    "path": "src/main/java/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class InvalidDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    InvalidDateTimeException(String task) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(\"☹ OOPS!!! Please enter a valid date/time for a \" + task + \".\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 6
    }
  },
  {
    "path": "src/main/java/InvalidTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class InvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    InvalidTaskIndexException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(\"☹ OOPS!!! Please enter a valid task index to be \" + (command.startsWith(\"todo\")"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                ? \"marked as done.\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "                : \"deleted.\"));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 8
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xyzhangg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xyzhangg": 2,
      "-": 20
    }
  }
]
