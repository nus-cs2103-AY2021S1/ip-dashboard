[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "T | 0 | deadline"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": "T | 0 | deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "E | 0 | something | 05-08-2020 12:00PM"
      }
    ],
    "authorContributionMap": {
      "Lysire": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.exec.Executable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // private execution helper method"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Duke(String directory, String path) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        storage \u003d new Storage(directory, path);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        new Duke(\"data\", \"./data/duke.txt\").execute();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Runs the command-line interface for the Duke program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                Executable e \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                e.run(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                isExit \u003d input.equalsIgnoreCase(\"bye\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                ui.display(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 51
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * A custom checked exception class to represent"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * exceptions specific to Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // message constants"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EMPTY_DESCRIPTION \u003d \"☹ OOPS!!! The description of \" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            \"a task cannot be empty\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EMPTY_TIME \u003d \"☹ OOPS!!! The description of \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            \"a task with attached time cannot be empty\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String ALREADY_DONE_FRONT \u003d \"The task \\\u0027\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String ALREADY_DONE_END \u003d \"\\\u0027 has already been marked as done.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String INVALID_NUMBER \u003d \"Please specify a valid item number\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String UNSPECIFIC_COMMAND \u003d \"This is a single word command. Please try again\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String UNKNOWN_OPERATION \u003d \"☹ OOPS!!! I\u0027m sorry, \" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            \"but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Generic message DukeException constructor, maybe used"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * for future factory methods"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param message the message to be passed in Exception"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private DukeException(String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // factory methods for different exceptions related to Duke"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public static DukeException alreadyDone(Task t) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(ALREADY_DONE_FRONT+ t.getDesc() + ALREADY_DONE_END);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public static DukeException emptyDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public static DukeException emptyTimeDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(EMPTY_TIME);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public static DukeException unknownOperation() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(UNKNOWN_OPERATION);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public static DukeException invalidNumber() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(INVALID_NUMBER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public static DukeException unspecificCommand() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return new DukeException(UNSPECIFIC_COMMAND);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Lysire": 62
    }
  },
  {
    "path": "src/main/java/duke/exec/Add.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.exec;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Add implements Executable{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TASK_COUNT_FRONT \u003d \"Now you have \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TASK_COUNT_END \u003d \" task(s) in the list.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    Task toAdd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Add(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.toAdd \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * When run, adds a task to the given list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param tasks the list of tasks to append to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param ui the ui object handling displays"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param store the storage object handling i/o"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        tasks.add(toAdd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        ui.display(ADDED_MESSAGE, \"\\t\" + toAdd.toString(), TASK_COUNT_FRONT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                + tasks.size() + TASK_COUNT_END);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        store.write(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 36
    }
  },
  {
    "path": "src/main/java/duke/exec/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.exec;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Delete implements Executable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String DELETED_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TASK_COUNT_FRONT \u003d \"Now you have \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TASK_COUNT_END \u003d \" task(s) in the list.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private int index; // zero-based"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Delete(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * When run, deletes the task at specified index"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param ui the ui object handling displays"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param store the storage object handling i/o"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        Task toDelete \u003d tasks.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        ui.display(DELETED_MESSAGE, \"\\t\" + toDelete.toString(), TASK_COUNT_FRONT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                + tasks.size() + TASK_COUNT_END);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        store.write(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 38
    }
  },
  {
    "path": "src/main/java/duke/exec/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.exec;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Done implements Executable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TOGGLE_MESSAGE \u003d \"Nice! \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            + \"I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private int index; // zero-based"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Done(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Marks the task at a specified index (0-based) as done/finished."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param ui the ui object handling displays"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param store the storage object handling i/o"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage store) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        Task toToggle \u003d tasks.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        // if it is done, there is no need to set as done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        if (toToggle.isDone()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            throw DukeException.alreadyDone(toToggle);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        toToggle.setTaskAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        ui.display(TOGGLE_MESSAGE, \"\\t\" + toToggle.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        store.write(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 43
    }
  },
  {
    "path": "src/main/java/duke/exec/Executable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates an idea of an executable object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * based on a particular command and other information"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.exec;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public interface Executable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 14
    }
  },
  {
    "path": "src/main/java/duke/exec/Exit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.exec;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Exit implements Executable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Bye. \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            + \"Hope to see you again soon!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * When run, prints the exit message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param ui the ui object handling displays"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param store the storage object handling i/o"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        ui.display(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 23
    }
  },
  {
    "path": "src/main/java/duke/exec/Listing.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.exec;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Listing implements Executable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EMPTY_MESSAGE \u003d \"There are currently \" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            \"no items in the list.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * When run, enumerates the items in the list of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param ui the ui object handling displays"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param store the storage object handling i/o"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void run(TaskList tasks, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            ui.display(EMPTY_MESSAGE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            List\u003cString\u003e enumeration \u003d tasks.enumerate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            enumeration.add(0, LIST_MESSAGE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            ui.display(enumeration);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 32
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * This class contains functionality that deals with making sense of user input"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.exec.Executable;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.exec.Add;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.exec.Exit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.exec.Delete;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.exec.Done;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.exec.Listing;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // Command constants for the bot"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // DateTime format constant"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Parses a line of user input, creates and returns an Executable object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * with the necessary information"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param input the raw user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return the Executable obtained from parsing the input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @throws DukeException if encountered command is"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public static Executable parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String[] tokens \u003d input.split(\"\\\\s+\", 2); // the command and remaining details"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String command \u003d tokens[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String remaining \u003d tokens.length \u003d\u003d 1 ? null : tokens[1].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String[] taskItems;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case LIST_COMMAND:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (remaining !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.unspecificCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            return new Listing();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (remaining \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.emptyDescription(); // empty description"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            task \u003d new Todo(remaining);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            return new Add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (remaining \u003d\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.emptyDescription(); // empty description"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            taskItems \u003d remaining.split(\" /by \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            desc \u003d taskItems[0].trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (taskItems.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.emptyTimeDescription(); // empty time"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            LocalDateTime deadline \u003d LocalDateTime.parse(taskItems[1].trim(), format);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            task \u003d new Deadline(desc, deadline);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            return new Add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (remaining \u003d\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.emptyDescription(); // empty description"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            taskItems \u003d remaining.split(\" /at \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            desc \u003d taskItems[0].trim();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (taskItems.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.emptyTimeDescription(); // empty time"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            LocalDateTime eventDate \u003d LocalDateTime.parse(taskItems[1].trim(), format);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            task \u003d new Event(desc, eventDate);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            return new Add(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case DONE_COMMAND:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (remaining \u003d\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.invalidNumber();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            index \u003d Integer.parseInt(remaining) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            return new Done(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case DELETE_COMMAND:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (remaining \u003d\u003d null) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.invalidNumber();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            index \u003d Integer.parseInt(remaining) - 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            return new Delete(index);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        case EXIT_COMMAND:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            if (remaining !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                throw DukeException.unspecificCommand();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            return new Exit();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            throw DukeException.unknownOperation();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 116
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates a storage object that provides"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * functionality with regard to reading and writing"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * from a file"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // DateTime format constant"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy h:mma\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    String directory; // directory of data"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    File store; // the database"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructor"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Storage(String directory, String path) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.directory \u003d directory;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.store \u003d new File(path);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // methods for reading and writing"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Loads tasks data from store, parses them and saves them"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return list of tasks read from store"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        List\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            // initialize"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            Files.createDirectories(Paths.get(directory));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            store.createNewFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(store));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            // start reading and parsing"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            while (reader.ready()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String current \u003d reader.readLine().trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String[] tokens \u003d current.split(\"\\\\s\\\\|\\\\s\", 3);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String type \u003d tokens[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(tokens[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String remaining \u003d tokens[2];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                String desc;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                switch(type) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    desc \u003d remaining;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    res.add(new Todo(desc, isDone));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    String[] eventDetails \u003d remaining.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    desc \u003d eventDetails[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    LocalDateTime date \u003d LocalDateTime.parse(eventDetails[1], format);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    res.add(new Event(desc, date, isDone));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    String[] deadlineDetails \u003d remaining.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    desc \u003d deadlineDetails[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    LocalDateTime deadline \u003d LocalDateTime.parse(deadlineDetails[1], format);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    res.add(new Deadline(desc, deadline, isDone));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            System.out.println(\"Something went wrong in the loading\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Writes tasks data to store after each function call"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param tasks the list of tasks to write represented as a TaskList object"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void write(TaskList tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            Files.createDirectories(Paths.get(directory));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            store.createNewFile();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(store));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                writer.write(t.databaseRep() + System.lineSeparator());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            System.out.println(\"Something went wrong in the writing\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 116
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of deadlines, tasks that need to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * be done before a specific time. Thus it inherits from Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy h:mma\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructors"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Deadline(String desc, LocalDateTime date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Deadline(String desc, LocalDateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // private helper for returning formatted dates"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private String[] format(LocalDateTime date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return date.format(format).split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // String representation methods"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return String.format(\"[%s][%s] %s (by: %s)\", TYPE, getStateLabel(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                getDesc(), format(date)[0] + \" \" + format(date)[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String databaseRep() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return TYPE + \" | \" + super.databaseRep() + \" | \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                + format(date)[0] + \" \" + format(date)[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of events, tasks that start"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * and end at specific times. Thus it inherits from Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy h:mma\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructors"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Event(String desc, LocalDateTime date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Event(String desc, LocalDateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // private helper for returning formatted dates"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private String[] format(LocalDateTime date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return date.format(format).split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // String representation methods"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return String.format(\"[%s][%s] %s (at: %s)\", TYPE, getStateLabel(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                getDesc(), format(date)[0] + \" \" + format(date)[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String databaseRep() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return TYPE + \" | \" + super.databaseRep() + \" | \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                + format(date)[0] + \" \" + format(date)[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of a task, set as abstract"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * to prevent instantiation"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // String constants for labelling state of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    protected final String CROSS \u003d \"✗\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    protected final String CHECK \u003d \"✓\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance fields"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    protected String desc; // description of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    protected boolean isDone; // state of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructors"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    Task(String desc) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    Task(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // accessors for labels, descriptions and status of task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String getStateLabel() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return isDone ? CHECK : CROSS;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // mutator for setting state of task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void setTaskAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // String representation methods"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Converts a task into its database representation:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * task type | 0-1 completion flag | description"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return database representation of task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String databaseRep() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return String.format(\"%s | %s\", isDone ? 1 : 0, desc);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 52
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of a list of tasks, implemented"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * using an arraylist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // instance variables"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructors"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // accessors for tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Get the task at the given zero-based index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param index zero-based index of the task to return"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return the task at specified index"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Return underlying list of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // mutators"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Appends a task to end of the list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param task the task to add"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Removes a task at the given zero-based index"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param index zero-based index of the task to delete"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // string processing"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Enumerates (starting from 1) tasks in list using their string representations,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * and stores such enumerations in a list that is to be returned"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @return list of enumerations"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public List\u003cString\u003e enumerate() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        List\u003cString\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            res.add((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 79
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * Encapsulates the idea of tasks without any date/time attached,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * hence inherits from Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constants"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // constructors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public Todo(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // accessors"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String getLabel() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return TYPE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // String representation methods"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return String.format(\"[%s][%s] %s\", TYPE, getStateLabel(), desc);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public String databaseRep() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        return TYPE + \" | \" + super.databaseRep();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 35
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * This class contains functions related to the"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": " * displaying"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    // String constants"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String LINE_BREAK \u003d \"_\".repeat(70);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Tusk. \" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            \"What can I do for you?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Greet and prompt the user upon startup"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        display(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Prints a list of strings to console with each item on a new line,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * in a decorated format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param strings the list of strings to be displayed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void display(List\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        for (String s : strings) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "            System.out.println(INDENT + s);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        System.out.println(LINE_BREAK + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * same as above function, but deals with arrays"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * @param strings the array of strings to be displayed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void display(String ...strings) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        display(Arrays.asList(strings));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 45
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lysire"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lysire"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Check if parse method for Parser validates commands"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void dukeParser_invalidCommand_throwsDukeException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        String invalidCommand \u003d \"Do Nothing\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        DukeException thrownException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(invalidCommand),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                \"Expected DukeException to be thrown\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        assertTrue(thrownException.getMessage().contains(\"☹ OOPS!!! I\u0027m sorry, \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                \"but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Check if parse method for Parser gives correct Date and Time format for deadlines"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void deadlineCreation_sampleObject_correctStringRepresentation() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        LocalDateTime date \u003d LocalDateTime.parse(\"2020-11-14 1900\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        assertEquals(\"[D][✗] CS2100 assignment (by: 14-11-2020 7:00PM)\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                new Deadline(\"CS2100 assignment\", date).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lysire"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     * Check if parse method for Parser gives correct Date and Time format for events"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lysire"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    public void eventCreation_sampleObject_correctStringRepresentation() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        LocalDateTime date \u003d LocalDateTime.parse(\"2020-08-30 1345\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lysire"
        },
        "content": "        assertEquals(\"[E][✗] presentation (at: 30-08-2020 1:45PM)\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lysire"
        },
        "content": "                new Event(\"presentation\", date).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lysire"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lysire"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lysire": 50
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lysire"
        },
        "content": "todo buy book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lysire"
        },
        "content": "deadline sell book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lysire"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lysire"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Lysire": 4
    }
  }
]
