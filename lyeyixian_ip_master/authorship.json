[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 20,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI) while still having the "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "benefits of a Graphical User Interface (GUI). If you can type fast, Duke can get your tasks management done faster than "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "traditional GUI apps."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "![Duke](Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Usage | Format, Examples"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "------- | ---------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**todo** | `todo [description]`\u003cbr/\u003ee.g. `todo todo 1`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**deadline** | `deadline [description] /by [yyyy-MM-dd]`\u003cbr/\u003ee.g. `deadline deadline 1 /by 2020-09-15`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**event** | `event [description] /at [yyyy-MM-dd h:mm a]`\u003cbr/\u003ee.g. `event event 1 /at 2020-09-15 10:51 am`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**done** | `done [index]`\u003cbr/\u003ee.g. `done 3`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**find** | `find [keywords]`\u003cbr/\u003ee.g. `find eve`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**delete** | `delete [index]`\u003cbr/\u003ee.g. `delete 4`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**list** | `list`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**schedule** | `schedule [yyyy-MM-dd]`\u003cbr/\u003ee.g. `schedule 2020-09-15`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "**bye** | `bye`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `todo` - Adding todo task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Adds a todo task to the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`todo [description]`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Input:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`todo todo 1`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    [T][✘] todo 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Now you have 9 tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `deadline` - Adding deadline task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Adds a deadline task with a Date to the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`deadline [description] /by [yyyy-MM-dd]`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Input:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`deadline deadline 1 /by 2020-09-15`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    [D][✘] deadline 1 (by: Sep 15 2020)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Now you have 8 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `event` - Adding event task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Adds an event task with a DateTime to the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`event [description] /at [yyyy-MM-dd h:mm a]`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Input:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`event event 1 /at 2020-09-15 10:32 am`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    [E][✘] event 1 (at: Sep 15 2020 10:32 am)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `done` - Marking a task as done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Marks a task in the list as done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`done [index]`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Input:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`done 5`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    [T][✓] todo 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `find` - Finding tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Finds tasks that contain any of the given keywords."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`find [keyword]`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Input:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`find todo`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Here are the matching tasks in your list: "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    1. [T][✘] todo 1"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    2. [T][✘] todo 2"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `delete` - Deleting a task"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Remove a task from the list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`delete [index]`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Input:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`delete 4`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    [T][✘] todo 1"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `list` - Listing all tasks"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Shows a list of all tasks in Duke."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Input:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    1. [T][✘] todo 1"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    2. [D][✘] deadline 1 (by: Sep 20 2020)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    3. [E][✘] event 1 (at: Sep 21 2020 7:00 pm)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    4. [T][✓] todo done"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `schedule` - Listing all tasks by Date"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Shows a list of all tasks that has the specific date in Duke."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`schedule [yyyy-MM-dd]`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Input:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`schedule 2020-09-20`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Here are the schedule on Sep 20 2020: "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "  1. [D][✘] exam (by: Sep 20 2020)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "```"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "### `bye` - Exiting the program"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Exits the program"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "`bye`"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 174,
      "-": 21
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        displayPicture.setClip(new Circle(50, 50, 49));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static DialogBox initDukeDialog(Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String welcomeMsg \u003d \"Welcome to Duke!!!\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return getDukeDialog(welcomeMsg, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 66
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent the main class to run the Duke program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Duke  {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return parser.parse(input, tasks, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 34,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Stage window;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            window \u003d stage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            window.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            window.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            window.getIcons().add(new Image(Main.class.getResourceAsStream(\"/images/userIcon.png\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setWindow(window);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            window.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        window.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 39
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Stage window;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userIcon.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dukeBot.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.initDukeDialog(dukeImage));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setWindow(Stage window) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.window \u003d window;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            window.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 61
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 8
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    String[] args;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public abstract String execute() throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 9
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public DeadlineCommand(String[] args, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super.args \u003d args;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The description of a deadline cannot be empty.\").execute();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String[] commandParam \u003d args[1].split(\"/by\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (commandParam.length \u003c 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! Invalid Argument (\\\"/by\\\" String not found)\").execute();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String description \u003d commandParam[0].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String by \u003d commandParam[1].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The description of a deadline cannot be empty.\").execute();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The /by description of a deadline cannot be empty.\").execute();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String dateRegex \u003d \"\\\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!by.matches(dateRegex)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The date format must be yyyy-mm-dd.\").execute();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        tasks.add(newDeadline, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\\t\" + newDeadline + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 53
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public DeleteCommand(String[] args, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super.args \u003d args;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The description of a delete cannot be empty.\").execute();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        int inputNumber;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            inputNumber \u003d Integer.parseInt(args[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! Argument must be an integer.\").execute();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (inputNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand((\"OOPS!!! Invalid argument.\")).execute();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (inputNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! There is only \" + tasks.size() + \" tasks in the list.\").execute();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        int index \u003d inputNumber - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Task targetTask \u003d tasks.remove(index, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Noted. I\u0027ve removed this task: \\n\\t\" + targetTask + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public DoneCommand(String[] args, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super.args \u003d args;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        int inputNumber;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            inputNumber \u003d Integer.parseInt(args[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DukeException(\"OOPS!!! Argument must be an integer.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (inputNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DukeException((\"OOPS!!! Invalid argument.\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (inputNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DukeException(\"OOPS!!! There is only \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        int index \u003d inputNumber - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assert index \u003c tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Task targetTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (targetTask.getStatus()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DukeException(\"OOPS!!! You\u0027ve already done that task.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        targetTask.setDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        tasks.updateStorage(storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\\t\" + targetTask;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 55
    }
  },
  {
    "path": "src/main/java/duke/command/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    String errMsg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ErrorCommand(String errMsg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.errMsg \u003d errMsg;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        throw new DukeException(errMsg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 16
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public EventCommand(String[] args, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super.args \u003d args;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The description of a event cannot be empty.\").execute();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String[] commandParam \u003d args[1].split(\"/at\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (commandParam.length \u003c 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! Invalid Argument (\\\"/at\\\" String not found)\").execute();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String description \u003d commandParam[0].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String at \u003d commandParam[1].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The description of a event cannot be empty.\").execute();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (at.isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The /at description of a event cannot be empty.\").execute();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String dateTimeRegex \u003d \"\\\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]) ([1-9]|1[012]):([0-5][0-9]) [ap]m\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (!at.matches(dateTimeRegex)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The date-time format must be yyyy-mm-dd h:mm am/pm.\").execute();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Event newEvent \u003d new Event(description, at);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        tasks.add(newEvent, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\\t\" + newEvent + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 53
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public FindCommand(String[] args, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super.args \u003d args;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The description of a find cannot be empty.\").execute();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String searchString \u003d args[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        TaskList matchedTasks \u003d tasks.find(searchString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (matchedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! There is no such task in the list.\").execute();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        StringBuilder concat \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            concat.append(String.format(\"\\n\\t%d. %s\", i + 1, matchedTasks.get(i)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Here are the matching tasks in your list: \" + concat;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ListCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DukeException(\"OOPS!!! There is no task in the list.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        StringBuilder concat \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            concat.append(String.format(\"\\n\\t%d. %s\", i + 1, tasks.get(i)));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Here are the tasks in your list: \" + concat;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ScheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ScheduleCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private String[] args;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ScheduleCommand(String[] args, TaskList tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            throw new DukeException(\"OOPS!!! There is no task in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String searchDate \u003d args[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        List\u003cTask\u003e resultTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String[] data \u003d currentTask.getData().split(\"/\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (data.length !\u003d 4) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String date \u003d data[data.length - 1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (date.contains(searchDate)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                resultTasks.add(currentTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        StringBuilder concat \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (int i \u003d 0; i \u003c resultTasks.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            concat.append(String.format(\"\\n\\t%d. %s\", i + 1, resultTasks.get(i)));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Here are the schedule on \" "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                + LocalDate.parse(searchDate).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \": \" + concat;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ToDoCommand(String[] args, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super.args \u003d args;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        if (args.length \u003c 2 || args[1].isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return new ErrorCommand(\"OOPS!!! The description of a todo cannot be empty.\").execute();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        ToDo newToDo \u003d new ToDo(args[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        tasks.add(newToDo,storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\\t\" + newToDo + \"\\nNow you have \" + tasks.size()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 30
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent custom Exception of Duke program and extends Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 10
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent a parser to parse user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the output of Duke program after parsing the user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param tasks task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param storage storage of the data of the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return output of the program as String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String parse(String input, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assert input !\u003d null \u0026\u0026 tasks !\u003d null \u0026\u0026 storage !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        String[] args \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            switch (args[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new ByeCommand().execute();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new ListCommand(tasks).execute();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new DoneCommand(args, tasks, storage).execute();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new ToDoCommand(args, tasks, storage).execute();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new DeadlineCommand(args, tasks, storage).execute();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new EventCommand(args, tasks, storage).execute();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new DeleteCommand(args, tasks, storage).execute();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new FindCommand(args, tasks).execute();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"schedule\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new ScheduleCommand(args, tasks).execute();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                return new ErrorCommand(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\").execute();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 53
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represents a storage for the data (TaskList) of Duke program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private void readFileAndUpdateList(Scanner sc, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String[] data \u003d sc.nextLine().split(\"/\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String taskType \u003d data[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            boolean status \u003d data[1].equals(\"1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String description \u003d data[2];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            String additional;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"t\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                list.add(new ToDo(description, status));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"d\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                additional \u003d data[3];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                list.add(new Deadline(description, additional, status));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            case \"e\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                additional \u003d data[3];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                list.add(new Event(description, additional, status));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the list of tasks previously saved in the filepath specified."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                readFileAndUpdateList(sc, list);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                String[] path \u003d filePath.split(\"/\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                String[] dirPath \u003d new String[path.length - 1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                for (int i \u003d 0; i \u003c path.length - 1; i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                    dirPath[i] \u003d path[i];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                File dir \u003d new File(String.join(\"/\", dirPath));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(\"File not exists\" + e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(\"Something went wrong \" + e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Update the storage with the given list of tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param list list of tasks"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void update(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            StringBuilder textToAdd \u003d new StringBuilder();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                String data \u003d t.getData();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                textToAdd.append(data).append(\"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            fw.write(textToAdd.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            System.out.println(\"Something went wrong\" + e.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 107
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent a deadline that has additional LocalDate field and extends Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private LocalDate deadlineDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.deadlineDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.deadlineDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the data of this deadline task to be stored in the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return data of this deadline task as a String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"d/\" + super.getData() + \"/\" + this.by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the string representation of this deadline task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent an Event that has additional LocalDateTime field and extends Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private LocalDateTime eventDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.eventDateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.eventDateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd h:mm a\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the data of this deadline task to be stored in the storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return data of this deadline task as a String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"e/\" + super.getData() + \"/\" + this.at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the string representation of event task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.eventDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent the task for the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the symbol of the status of this task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return ✓ if task is done, ✘ if task is not done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                ? \"✓\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                : \"✘\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the data of this task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return data of this task as a String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return (this.isDone ? 1 : 0) + \"/\" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the status of this task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return true if this task is already done else false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the description of this task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return description of this task as a String"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Set the isDone attribute to true."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the string representation of this task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 69
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent the list of task for the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return this.list.isEmpty();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Update the storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param storage storage to be updated"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void updateStorage(Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        storage.update(list);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Add the task into the TaskList and update the storage at the same time."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param storage storage to be updated"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void add(Task task, Storage storage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.updateStorage(storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return task that is removed and update the storage at the same time."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param index index of element"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param storage storage to be updated"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public Task remove(int index, Storage storage) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assert index \u003c list.size() || index \u003e 0 : \"index out of bound\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Task task \u003d this.list.remove(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        this.updateStorage(storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return TaskList containing the search results."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param searchString the string to be searched "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return TaskList "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public TaskList find(String searchString) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        for (Task t : this.list) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            if (t.getDescription().contains(searchString)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                matchingTasks.add(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return new TaskList(matchingTasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 79
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent a to-do task for the duke program and extends task class without any additional field."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the data of this to-do task to be stored in the storage."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return data of this to-do task as a String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"t/\" + super.getData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Return the string representation of this to-do task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " * Represent the user interface for the Duke program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    private final String DIVIDER \u003d \"----------------------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                              + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                              + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                              + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                              + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Print the divider line to the standard output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Print the welcome logo to the standard output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println(\"\\n\" + LOGO);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Print to the standard output the result of user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @param output result after parsing user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void showOutput(String output) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * Read input from user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     * @return input string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 53
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #bcf3f7; -fx-background-radius: 10px; -fx-font-size: 14\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u003cInsets topRightBottomLeft\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Deadline deadline \u003d new Deadline(\"read books\", \"2020-08-25\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"[D][✘] read books (by: Aug 25 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testGetData() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"d/0/read books/2020-08-25\", deadline.getData());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 17
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    Event event \u003d new Event(\"read books\", \"2020-08-25 4:00 PM\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"[E][✘] read books (at: Aug 25 2020 4:00 PM)\", event.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testGetData() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"e/0/read books/2020-08-25 4:00 PM\", event.getData());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 18
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Task task \u003d new Task(\"read books\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"[✘] read books\", task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testSetDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Task task \u003d new Task(\"read books\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertTrue(task.getStatus());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testGetData() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Task task \u003d new Task(\"read books\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"0/read books\", task.getData());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        Task task \u003d new Task(\"read books\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"✘\", task.getStatusIcon());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 34
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    ToDo todo \u003d new ToDo(\"read books\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"[T][✘] read books\", todo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    public void testGetData() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "        assertEquals(\"t/0/read books\", todo.getData());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "todo read"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "event go out /at Sunday 4-5pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "asdf"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lyeyixian"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lyeyixian": 1,
      "-": 20
    }
  }
]
