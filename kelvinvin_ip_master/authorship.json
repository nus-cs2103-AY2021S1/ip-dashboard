[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "T | 0 | this"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "T | 0 | that"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "E | 0 | here | 2020-02-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "T | 0 | here aopinra"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "T | 0 | here"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "T | 0 | here /ateapi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "D | 0 | finish level-7 | 2020-08-24"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "T | 0 | this"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 8
    }
  },
  {
    "path": "src/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public TaskList getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return this.storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                Command c \u003d parser.parse();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void testRun(String[] input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        for (String line : input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                Parser parser \u003d new Parser(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                Command c \u003d parser.parse();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                if (c.isExit()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "         new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 67,
      "-": 3
    }
  },
  {
    "path": "src/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.CommandNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.IncompleteCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    String[] inputSplitWhitespace;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.inputSplitWhitespace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getTaskCategory() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return this.inputSplitWhitespace[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getTaskMessage() throws IncompleteCommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return this.inputSplitWhitespace[1].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new IncompleteCommandException(this.getTaskCategory());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getTaskDescription() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String[] taskMessageArr \u003d this.getTaskMessage().split(\"/\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return taskMessageArr[0].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getTaskTime() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String[] taskMessageArr \u003d this.getTaskMessage().split(\"/\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        boolean hasTime \u003d taskMessageArr.length \u003e 1 \u0026\u0026"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                taskMessageArr[1].split(\" \", 2).length \u003e 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        if (!hasTime) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"Please specify the time of task \" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                    \"e.g. event finish book /by 2019-15-10\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return taskMessageArr[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public int getTaskNumber() throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String digitsOnlyInput \u003d this.input.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        if (digitsOnlyInput.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"Specify the task number to change e.g. done 12 / delete 4\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            int taskNumberToMark \u003d Integer.parseInt(digitsOnlyInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return taskNumberToMark;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Command parse() throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        switch (getTaskCategory()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return new DoneCommand(getTaskNumber());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return new DeleteCommand(getTaskNumber());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return new AddCommand(\"todo\", getTaskMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                return new AddCommand(\"event\", getTaskDescription(), getTaskTime());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                throw new DukeException(\"Datetime could not be recognised. Use yyyy-mm-dd format e.g. 2019-10-15\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                return new AddCommand(\"deadline\", getTaskDescription(), getTaskTime());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                throw new DukeException(\"Datetime could not be recognised. Use yyyy-mm-dd format e.g. 2019-10-15\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new CommandNotFoundException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 84
    }
  },
  {
    "path": "src/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String fileData \u003d tasks.getAllTasksPlainText();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            fw.write(fileData);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            System.out.println(\"An IO exception has occurred writing to .\" + this.filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void delete() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        File fw \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(fw.delete());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String[] load() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            // creates data directory if it does not exist"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            // creates duke.txt if it does not exist"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            ArrayList\u003cString\u003e fileData \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                String plainText \u003d s.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                fileData.add(plainText);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String[] strAr \u003d new String[fileData.size()];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            return fileData.toArray(strAr);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"File could not be found\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 60
    }
  },
  {
    "path": "src/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public TaskList() { }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public TaskList(String[] taskList) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        for (String plainText : taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String[] plainTextSplit \u003d plainText.split(\" \\\\| \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String newTaskCategory \u003d plainTextSplit[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String newTaskStatus \u003d plainTextSplit[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String newTaskDescription \u003d plainTextSplit[2];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String newTaskTime \u003d plainTextSplit.length \u003e 3 ? plainTextSplit[3] : \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            switch (newTaskCategory) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                addTask(new ToDo(newTaskDescription, Boolean.parseBoolean(newTaskStatus)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                addTask(new Event(newTaskDescription, Boolean.parseBoolean(newTaskStatus), newTaskTime));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                addTask(new Deadline(newTaskDescription, Boolean.parseBoolean(newTaskStatus), newTaskTime));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task deleteTask(int taskNumberToMark) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Task taskToMark \u003d this.taskList.remove(taskNumberToMark - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return taskToMark;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task markTask(int taskNumberToMark) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Task taskToMark \u003d this.taskList.get(taskNumberToMark - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        taskToMark.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return taskToMark;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task addTask(Task newTask) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getAllTasksPlainText() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String[] taskArr \u003d new String[this.getSize()];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        for (int k \u003d 0; k \u003c this.getSize(); k++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            taskArr[k] \u003d this.getTask(k).getPlainText();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String fileData \u003d String.join(\"\\n\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                taskArr);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return fileData;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 75
    }
  },
  {
    "path": "src/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    Scanner scannerObj;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.scannerObj \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    private String MSG_DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(\"Oops! We couldn\u0027t load the file\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(MSG_DIVIDER);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void showError(String err) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(\"Error: \" + err);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void showMessage(String msg) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(\"Hello I\u0027m batman\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        System.out.println(\"byeee\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String input \u003d scannerObj.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 42
    }
  },
  {
    "path": "src/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    String taskCategory;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    String taskDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    String taskTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public AddCommand(String taskCategory, String taskDescription, String taskTime) throws DateTimeParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskCategory \u003d taskCategory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskTime \u003d taskTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public AddCommand(String taskCategory, String taskDescription) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskCategory \u003d taskCategory;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DateTimeParseException, DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        switch (taskCategory) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"event\" :"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            newTask \u003d new Event(taskDescription, taskTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            newTask \u003d new Deadline(taskDescription, taskTime);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            newTask \u003d new Task();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String successMsg \u003d \"Got it. I\u0027ve added this task:\\n\" + newTask;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String remainingTasksMsg \u003d \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        ui.showMessage(successMsg + remainingTasksMsg);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 52
    }
  },
  {
    "path": "src/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 18
    }
  },
  {
    "path": "src/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Command() { };"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 16
    }
  },
  {
    "path": "src/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    int taskNumberToDelete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public DeleteCommand(int taskNumberToDelete) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskNumberToDelete \u003d taskNumberToDelete;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        if (taskNumberToDelete \u003e tasks.getSize() | taskNumberToDelete \u003c 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"There is no such task number.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            Task taskToDelete \u003d tasks.deleteTask(this.taskNumberToDelete);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String successfulMsg \u003d \"Noted. I\u0027ve removed this task:\\n\" + taskToDelete;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            String remainingTasksMsg \u003d \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            ui.showMessage(successfulMsg + remainingTasksMsg);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 26
    }
  },
  {
    "path": "src/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    int taskNumberToMark;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public DoneCommand(int taskNumberToMark) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.taskNumberToMark \u003d taskNumberToMark;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        if (taskNumberToMark \u003e tasks.getSize() | taskNumberToMark \u003c 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"There is no such task number.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            Task taskToMark \u003d tasks.markTask(this.taskNumberToMark);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            ui.showMessage(\"Nicely done. I\u0027ve marked this task as done:\" + \"\\n\" + taskToMark);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 24
    }
  },
  {
    "path": "src/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            ui.showMessage(\"You have no tasks currently :)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            ui.showMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            for (int n \u003d 1; n \u003c\u003d tasks.getSize(); n++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "                ui.showMessage(n + \".\" + tasks.getTask(n - 1));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 19
    }
  },
  {
    "path": "src/duke/exception/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class CommandNotFoundException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public CommandNotFoundException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 7
    }
  },
  {
    "path": "src/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 7
    }
  },
  {
    "path": "src/duke/exception/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class IncompleteCommandException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public IncompleteCommandException(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(\"OOPS!!! The description of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 8
    }
  },
  {
    "path": "src/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"Datetime could not be recognised. Use yyyy-mm-dd format e.g. 2019-10-15\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"Loading: Datetime could not be recognised. Use yyyy-mm-dd format e.g. 2019-10-15\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getPlainText() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return super.getPlainText() + \" | \" + by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String formattedBy \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedBy + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 40
    }
  },
  {
    "path": "src/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"Datetime could not be recognised. Use yyyy-mm-dd format e.g. 2019-10-15\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Event(String description, boolean isDone, String at) throws DukeException  {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            throw new DukeException(\"Loading: Datetime could not be recognised. Use yyyy-mm-dd format e.g. 2019-10-15\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getPlainText() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return super.getPlainText() + \" | \" + at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String formattedAt \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedAt + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 41
    }
  },
  {
    "path": "src/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String getPlainText() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        char className \u003d this.getClass().getSimpleName().charAt(0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String completionStatus \u003d isDone? \"1\" : \"0\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return className + \" | \" + completionStatus + \" | \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 39
    }
  },
  {
    "path": "src/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 16
    }
  },
  {
    "path": "src/test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "D | 0 | finish level-7 | 2020-08-24"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 1
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void deadlineAddTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        File fw \u003d new File(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        fw.delete();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Duke testDuke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String[] testInput \u003d {\"deadline finish level-7 /by 2020-08-24\", \"bye\"};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        testDuke.testRun(testInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        assertEquals(1, testDuke.getTasks().getSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 21
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void todoParseTest(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String testInput \u003d \"todo read book\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Parser testParser \u003d new Parser(testInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        assertEquals(\"todo\", testParser.getTaskCategory());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void eventTimeParseTest() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String testInput \u003d \"event read book /by 2020-14-05\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Parser testParser \u003d new Parser(testInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        assertEquals(\"2020-14-05\", testParser.getTaskTime());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    public void eventAddTest() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        String testInput \u003d \"event finish level-7 /by 2020-08-25\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Parser testParser \u003d new Parser(testInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        Storage storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        storage.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            testParser.parse().execute(tasks, new Ui(), storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            assertEquals(1, tasks.getSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "            System.out.print(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "deadline wakeup /by 730am"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "todo finish cs2103 ip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "event lunch /at 12pm-1pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "event todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "todo event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "hey alexa play despacito"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kelvinvin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kelvinvin": 15
    }
  }
]
