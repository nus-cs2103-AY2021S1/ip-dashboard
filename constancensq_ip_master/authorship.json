[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a task with a deadline. A deadline task has a description and the deadline of the task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Marks a deadline task as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A deadline task that is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Deadline markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        Deadline doneDeadline \u003d new Deadline(this.description, this.by, true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return doneDeadline;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toTxtFileFormat() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"D\" + super.toTxtFileFormat() + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "constancensq": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Duke chatbot that can store, delete, mark tasks as done and display them."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Displays a welcome message and runs the chatbot, continuously receiving user input and executing them accordingly."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                String inputData \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                Command c \u003d Parser.parse(inputData);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Runs a Duke object with a file at filePath of \"data/duke.txt\"."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Duke dukeObj \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        dukeObj.run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 49,
      "constancensq": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents exceptions specific to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        super(\"☹ ERROR: \" + msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "constancensq": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a task that is an event with a description and timing"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, LocalDateTime at, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Marks the event task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Event task that is marked as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Event markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        Event doneEvent \u003d new Event(this.description, this.at, true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return doneEvent;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toTxtFileFormat() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"E\" + super.toTxtFileFormat() + \" | \" + this.at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "constancensq": 20
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a task with description and a boolean to signify if it is done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves information on whether task is done and represents with a symbol."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A String representing a tick (if task is done) or cross (if task is not done) symbol"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A task that is marked as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the representation of the task in a text file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String representation of task in a text file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toTxtFileFormat() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 26,
      "constancensq": 27
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a task to be done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Mark the ToDo task as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A ToDo task that is done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public ToDo markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        ToDo doneToDo \u003d new ToDo(this.description, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return doneToDo;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toTxtFileFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"T\" + super.toTxtFileFormat();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "constancensq": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "constancensq"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "constancensq"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline /by when"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event /at when"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event book launch"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "list all"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": "todo borrow english book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline return book /by Sunday 10pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event book launch /at Monday 2-4pm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "constancensq"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "constancensq"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "constancensq"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "constancensq"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "constancensq"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "constancensq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "constancensq": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "constancensq": 3
    }
  }
]
