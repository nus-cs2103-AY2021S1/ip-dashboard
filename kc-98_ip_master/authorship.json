[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    protected String dateAndOrTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    Deadline(String description, String dateAndOrTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        this.dateAndOrTime \u003d dateAndOrTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + dateAndOrTime + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kc-98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 14
    }
  },
  {
    "path": "src/main/java/DeleteFailureException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "public class DeleteFailureException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    DeleteFailureException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kc-98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 7
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                \"What can I do for you today? (type: \\\"help\\\" to view list of commands)\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        List\u003cTask\u003e pastInputs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        boolean terminated \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        while (!terminated \u0026\u0026 scanner.hasNext()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                //determining user input type via the first word"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                String[] splitInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                String keyWord \u003d getKeyWord(splitInput[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                if (keyWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    terminated \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    System.out.println(\"Duke says: Goodbye and have a nice day! :D\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    scanner.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else if (keyWord.equals(\"help\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    System.out.println(\"list: displays a sequential view of past inputs\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            \"done \u003ctask number\u003e: denotes a task as done by checking it\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            \"delete \u003ctask number\u003e: deletes an existing task\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            \"deadline \u003cdescription\u003e /by \u003cdate/time\u003e: adds a deadline with desired date/time\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            \"event \u003cdescription\u003e /at \u003cdate/time\u003e: adds an event with desired date/time\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            \"todo \u003cdescription\u003e: adds a todo task\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            \"bye: terminates program\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else if (keyWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    if (pastInputs.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        System.out.println(\"Duke says: No past inputs found\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        System.out.println(\"Here are your tasks:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        for (int i \u003d 1; i \u003c\u003d pastInputs.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            System.out.println(i + \". \" + pastInputs.get(i - 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        System.out.println(\"If you wish to mark a task as completed, input \\\"done \u003ctask number\u003e\\\"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else if (keyWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    //checks the formatting of user input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    if (splitInput.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            int taskNumber \u003d Integer.parseInt(splitInput[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            Task doneTask \u003d pastInputs.get(taskNumber - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            doneTask.markDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            pastInputs.set(taskNumber - 1, doneTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            System.out.println(\"Duke says: Good Job! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            System.out.println(doneTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            pastInputs.add(new Task(userInput));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            System.out.println(\"Duke added into your task list: \" + userInput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        } catch (Exception ex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                            System.out.println(\"Duke says: Please try again with a valid task number\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        pastInputs.add(new Task(userInput));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        System.out.println(\"Duke added into your task list:\\n\" + userInput);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        System.out.println(\"You now have \" + pastInputs.size() + \" task(s) in your list\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else if (keyWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    pastInputs \u003d deleteTask(pastInputs, splitInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    String[] data \u003d processInput(splitInput);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    if (keyWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        ToDo toDo \u003d new ToDo(data[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        pastInputs.add(toDo);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        System.out.println(\"Duke added into your task list:\\n\" + toDo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    } else if (keyWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        Deadline deadline \u003d new Deadline(data[0], data[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        pastInputs.add(deadline);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        System.out.println(\"Duke added into your task list:\\n\" + deadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    } else if (keyWord.equals(\"event\")){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        Event event \u003d new Event(data[0], data[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        pastInputs.add(event);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        System.out.println(\"Duke added into your task list:\\n\" + event);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    System.out.println(\"You now have \" + pastInputs.size() + \" task(s) in your list\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            } catch (InvalidKeyWordException ex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            } catch (EmptyTaskException ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    //returns a reserved keyword"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    public static String getKeyWord(String word) throws InvalidKeyWordException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        Set\u003cString\u003e reservedKeyWords \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        reservedKeyWords.add(\"help\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        reservedKeyWords.add(\"list\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        reservedKeyWords.add(\"done\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        reservedKeyWords.add(\"delete\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        reservedKeyWords.add(\"deadline\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        reservedKeyWords.add(\"event\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        reservedKeyWords.add(\"todo\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        reservedKeyWords.add(\"bye\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        if (!reservedKeyWords.contains(word)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            throw new InvalidKeyWordException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        return word;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    //returns an array of description and date/time(if applicable)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    public static String[] processInput(String[] array) throws EmptyTaskException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        if (array.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            if (array[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                throw new EmptyTaskException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            } else if (array[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                throw new EmptyTaskException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            } else if (array[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                throw new EmptyTaskException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                throw new EmptyTaskException(\"Unknown error!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        } else if (array[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            String des \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            String dateAndOrTime \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            boolean toBreak \u003d false;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            for (int i \u003d 1; i \u003c array.length; i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                if (array[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    //sets the breaking point of input"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    toBreak \u003d true;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else if (!toBreak) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    des +\u003d array[i] + \" \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    dateAndOrTime +\u003d array[i];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    if (i !\u003d array.length - 1) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        dateAndOrTime +\u003d \" \";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            //index 0 is description, index 1 is date/time"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            return new String[] {des, dateAndOrTime};"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        } else if (array[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            String des \u003d \"\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            String dateAndOrTime \u003d \"\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            boolean toBreak \u003d false;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            for (int i \u003d 1; i \u003c array.length; i++) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                if (array[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    //sets the breaking point of input"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    toBreak \u003d true;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else if (!toBreak) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    des +\u003d array[i] + \" \";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    dateAndOrTime +\u003d array[i];"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    if (i !\u003d array.length - 1) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                        dateAndOrTime +\u003d \" \";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            //index 0 is description, index 1 is date/time"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            return new String[] {des, dateAndOrTime};"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        } else if (array[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            String des \u003d \"\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            for (int i \u003d 1; i \u003c array.length; i++) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                des +\u003d array[i];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                if (i !\u003d array.length - 1) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                    des +\u003d \" \";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            //index 0 is description"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            return new String[] {des};"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        return new String[] {};"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    public static List\u003cTask\u003e deleteTask(List\u003cTask\u003e current, String[] input) throws DeleteFailureException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            if (input.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                List\u003cTask\u003e updated \u003d current;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(input[1]);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                Task removedTask \u003d current.get(taskNumber - 1);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                current.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(\"Successfully deleted the task!\\n\" + removedTask);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                System.out.println(\"You now have \" + updated.size() + \" task(s) in your list\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                return updated;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kc-98"
        },
        "content": "                throw new DeleteFailureException(\"Duke says: Please try again with a valid format.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kc-98"
        },
        "content": "            throw new DeleteFailureException(\"Duke says: Please try again with a valid number.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 196,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 6
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "public class EmptyTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    EmptyTaskException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kc-98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    protected String dateAndOrTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    Event(String description, String dateAndOrTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        this.dateAndOrTime \u003d dateAndOrTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + dateAndOrTime + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kc-98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 14
    }
  },
  {
    "path": "src/main/java/InvalidKeyWordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "public class InvalidKeyWordException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    InvalidKeyWordException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 6
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kc-98"
        },
        "content": "     public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kc-98"
        },
        "content": "     }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kc-98"
        },
        "content": "     @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kc-98"
        },
        "content": "     }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kc-98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 23
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    protected String dateAndOrTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kc-98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kc-98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kc-98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kc-98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kc-98": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kc-98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kc-98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kc-98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kc-98"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "kc-98": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kc-98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kc-98": 1,
      "-": 20
    }
  }
]
