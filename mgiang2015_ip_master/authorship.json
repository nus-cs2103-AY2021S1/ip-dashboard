[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    static String SYMBOL \u003d \"[D]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    private LocalDate deadlineDay;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    private LocalTime deadlineTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public Deadline(String name, String datetime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        super(name, TaskType.Deadline);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String[] date_time_arr \u003d datetime.split(\" \"); // Assuming must have date and time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String date \u003d date_time_arr[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String time \u003d date_time_arr[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.deadlineDay \u003d createDeadlineDay(date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.deadlineTime \u003d createDeadlineTime(time);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public LocalDate getDeadlineDay() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return deadlineDay;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public LocalTime getDeadlineTime() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return deadlineTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static LocalDate createDeadlineDay(String date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return LocalDate.parse(date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static LocalTime createDeadlineTime(String time) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return LocalTime.parse(time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String status \u003d this.isDone() ? \"T\" : \"F\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"%s~deadline %s /by %s %s\\n\", status, name, "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                deadlineDay.toString(), deadlineTime.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String tick \u003d this.isDone() ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"%s%s %s (by: %s %s)\", SYMBOL, tick, name, "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                deadlineDay.toString(), deadlineTime.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 50
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public void op() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        boolean end \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        while (!end) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            String input \u003d Ui.get_input(sc);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            String output_msg \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            if (Parser.isBye(input)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                end \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            } else if (Parser.isList(input)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                output_msg \u003d tasks.summarize();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            } else if (Parser.isDone(input)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                output_msg \u003d tasks.mark_done(Parser.getIndex(input)); "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            } else if (Parser.isDelete(input)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                output_msg \u003d tasks.deleteTask(Parser.getIndex(input)); "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            } else if (Parser.isFind(input)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                output_msg \u003d tasks.findTasksWith(Parser.getKeyword(input));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                Task taskInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                    taskInput \u003d Parser.parseTask(input); // catch duke exception from getTask(input)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                    System.out.println(Formatter.format_response(e.getMessage()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                output_msg \u003d tasks.addTask(taskInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            if (!end) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                FormatPrinter.print(output_msg);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        System.out.println(Formatter.format_response(\"Bye. Hope to see you again soon!\\n\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "\"   __ _____   __  ___  ___  ___  ___\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "\"  / // / _ | / / / _ \\\\/ _ \\\\/ _ \\\\/ _ \\\\\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "\" / _  / __ |/ /__\\\\_, / // / // / // /\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "\"/_//_/_/ |_/____/___/\\\\___/\\\\___/\\\\___/\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                                     "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        // Intro message"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        FormatPrinter.print("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            \"Hello! I\u0027m Hal9000\\nWhat can I do for you?\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        Duke hal9000 \u003d new Duke();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        File prev_tasks \u003d FileOpener.openFile(\"prev_tasks.txt\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        TaskLoader.load_tasks(prev_tasks, hal9000.tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        hal9000.op();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        TaskStorage.save_task(prev_tasks, hal9000.tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 61,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    static String SYMBOL \u003d \"[E]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public Event(String name, String details) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        super(name, TaskType.Event);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String status \u003d this.isDone() ? \"T\" : \"F\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"%s~event %s /at %s\\n\", status, name, details);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String tick \u003d this.isDone() ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"%s%s %s (at: %s)\", SYMBOL, tick, name, details);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 26
    }
  },
  {
    "path": "src/main/java/FileOpener.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class FileOpener {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static File openFile(String path) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        File prev_tasks \u003d new File(\"prev_tasks.txt\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            if (!prev_tasks.exists()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                prev_tasks.createNewFile();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            prev_tasks.setReadable(true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            prev_tasks.setWritable(true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return prev_tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 20
    }
  },
  {
    "path": "src/main/java/FormatPrinter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class FormatPrinter {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static void print(String str) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                System.out.println(Formatter.format_response(str));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 5
    }
  },
  {
    "path": "src/main/java/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static String format_response(String output_msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        \"____________________________________________________________\\n\"+"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        output_msg +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 8
    }
  },
  {
    "path": "src/main/java/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class NoDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public NoDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        super(message + \"\\n\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static TaskType categorize(String[] input_parts) throws Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        if (input_parts[0].compareTo(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return TaskType.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } else if (input_parts[0].compareTo(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return TaskType.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } else if (input_parts[0].compareTo(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return TaskType.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            throw new UndefinedWordException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    // Can be used to get the details too"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static String extractTask(String[] input_parts) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String task \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        for (int i \u003d 1; i \u003c input_parts.length; i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            task +\u003d input_parts[i] + \" \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return task.trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static String extractDetails(String[] input_parts) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String task \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        for (int i \u003d 0; i \u003c input_parts.length; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            task +\u003d input_parts[i] + \" \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return task.trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static Task parseTask(String input) throws Exception { // catch duke exception from extractTask and categorize, throw to op()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String[] parts \u003d input.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        TaskType type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            type \u003d categorize(parts);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } catch (UndefinedWordException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        if (type \u003d\u003d TaskType.ToDo) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            parts \u003d input.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            if (parts.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                throw new NoDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            } // if not, chillax and continue"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            String name \u003d extractTask(parts);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return new ToDo(name);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } else if (type \u003d\u003d TaskType.Deadline) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            if (input.split(\"/by\").length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                throw new NoDescriptionException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            } // if not, chillax and continue"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            String name \u003d extractTask(input.split(\"/by\")[0].split(\" \"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            String deadline \u003d extractDetails(input.split(\"/by\")[1].split(\" \"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return new Deadline(name, deadline); "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            if (input.split(\"/at\").length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                throw new NoDescriptionException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            } // if not, chillax and continue"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            String name \u003d extractTask(input.split(\"/at\")[0].split(\" \"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            String details \u003d extractDetails(input.split(\"/at\")[1].split(\" \"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return new Event(name, details);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static boolean isBye(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return input.compareTo(\"bye\") \u003d\u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static boolean isList(String input) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return input.compareTo(\"list\") \u003d\u003d 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static boolean isDone(String input) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return input.split(\" \")[0].compareTo(\"done\") \u003d\u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static boolean isDelete(String input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return input.split(\" \")[0].compareTo(\"delete\") \u003d\u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static boolean isFind(String input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return input.split(\" \")[0].compareTo(\"find\") \u003d\u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static int getIndex(String input) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static String getKeyword(String input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return input.split(\" \")[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 91
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public Task(String name, TaskType type) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String[] nameParts \u003d name.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        for (int i \u003d 0; i \u003c nameParts.length; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            if (nameParts[i].length() \u003d\u003d keyword.length() \u0026\u0026 "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                    nameParts[i].compareTo(keyword) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String status \u003d this.isDone() ? \"T\" : \"F\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"%s~%s\", status, name);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 45
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String summarize() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String all_tasks \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            all_tasks +\u003d String.format(\"%d.%s\\n\", i+1, t.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return all_tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String mark_done(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        if (!this.tasks.get(index).isDone()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            this.tasks.get(index).done();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return String.format(\"Nice! I\u0027ve marked this task as done:\\n[✓] %s\\n\", this.tasks.get(index).getName());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return String.format(\"Task %d already done!\\n\", index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String deleteTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        if (tasks.size() \u003c\u003d index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            return \"No such task\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        Task t \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\\n\", t.toString(), this.tasks.size());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String addTask(Task t) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\", t.toString(), this.tasks.size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String findTasksWith(String keyword) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            matchName(tasks.get(i), keyword, matches);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        // make String"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String output_msg \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        for (int i \u003d 0; i \u003c matches.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            Task t \u003d matches.get(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            output_msg +\u003d String.format(\"%d.%s\\n\", i+1, t.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return output_msg;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static void matchName(Task t, String keyword, ArrayList\u003cTask\u003e matches) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        if (t.containsKeyword(keyword)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            matches.add(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 73
    }
  },
  {
    "path": "src/main/java/TaskLoader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class TaskLoader {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static void load_tasks(File prev_tasks, TaskList tasks) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            Scanner sc_file \u003d new Scanner(prev_tasks);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            while (sc_file.hasNextLine()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                String[] saved_task \u003d sc_file.nextLine().split(\"~\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                Task new_task \u003d Parser.parseTask(saved_task[1]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                if (saved_task[0].compareTo(\"T\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                    new_task.done();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                tasks.addTask(new_task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            sc_file.close();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 24
    }
  },
  {
    "path": "src/main/java/TaskStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class TaskStorage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static void save_task(File prev_tasks, TaskList tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(prev_tasks));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "                writer.write(tasks.getTask(i).getFileString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 17
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    ToDo,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    Deadline,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    Event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 5
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    static String SYMBOL \u003d \"[T]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        super(name, TaskType.ToDo);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String getFileString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String status \u003d this.isDone() ? \"T\" : \"F\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"%s~todo %s\\n\", status, name);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String tick \u003d this.isDone() ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return String.format(\"%s%s %s\", SYMBOL, tick, name);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "     * get_input() is in charge of asking for input from user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "     * and return the input as a string to be used for something else."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "     * @param sc Scanner object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "     * @return a string representing user input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public static String get_input(Scanner sc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        String user_input \u003d sc.nextLine().trim(); // Read user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        return user_input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 19
    }
  },
  {
    "path": "src/main/java/UndefinedWordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "public class UndefinedWordException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    public UndefinedWordException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "# convert to UNIX format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mgiang2015"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mgiang2015": 3,
      "-": 35
    }
  }
]
