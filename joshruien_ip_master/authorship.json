[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "buildscript {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    repositories {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        maven {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            url \"https://plugins.gradle.org/m2/\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    dependencies {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        classpath \"com.github.jengelman.gradle.plugins:shadow:6.0.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "apply plugin: \"com.github.johnrengelman.shadow\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "apply plugin: \u0027java\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "joshruien": 31
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Boo Task Manager is a desktop app for managing tasks. This is a CS2103T individual project. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "* Features"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Adding a task: add](#adding-a-task-add)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Listing all tasks: list](#listing-all-tasks-list)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Marking a task complete: done](#marking-a-task-complete-done)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Delete a task: delete](#delete-a-task-delete)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Search for tasks: find](#search-for-tasks-find)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Archive a task: archive](#archive-a-task-archive)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Exiting the program: bye](#exiting-the-program-bye)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Error handling](#error-handling)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    * [Saving the data](#saving-the-data)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Adding a task: add"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Users are able to add 3 types of tasks to the application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "1. Todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "1. Deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "1. Event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Adding a todo task: `todo \u003ctodo description\u003e`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`todo Do laundry`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "[T][✘] Do laundry"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Adding a deadline task: `deadline \u003cdeadline description\u003e /by dd/MM/yyyy HH:mm`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`deadline Do assignment /by 23/09/2020 23:59`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "[D][✘] Do assignment (by: 23 Sep 2020 23:59)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Adding an event task: `event \u003cevent description\u003e /at dd/MM/yyyy HH:mm`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`event Sam\u0027s birthday party /at 26/09/2020 19:00`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "[E][✘] Sam\u0027s birthday party (at: 26 Sep 2020 19:00)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Listing all tasks: list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Users are able to view all the tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": "1.[T][✘] Do laundry"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "2.[D][✘] Do assignment (by: 23 Sep 2020 23:59)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": "3.[E][✘] Sam\u0027s birthday party (at: 26 Sep 2020 19:00)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Marking a task complete: done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Users are able to mark a task as complete once they have finished the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "The task number refers to the number in the list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Marking a task as done: `done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshruien"
        },
        "content": "[T][✓] Do laundry"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Delete a task: delete"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Users are able to delete a task from the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshruien"
        },
        "content": "The task number refers to the number in the list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Deleting a task: `delete \u003ctask number\u003e`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshruien"
        },
        "content": "[D][✘] Do assignment (by: 23 Sep 2020 23:59)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Search for tasks: find"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Users are able to search for tasks in the list matching the keywords."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Finding a task: `find \u003ckeywords\u003e`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`find birthday`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshruien"
        },
        "content": "1.[E][✘] Sam\u0027s birthday party (at: 26 Sep 2020 19:00)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Archive a task: archive"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Users are able to archive tasks. These archived tasks will be saved into an archive file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshruien"
        },
        "content": "The task number refers to the number in the list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Archive a task: `archive \u003ctask number\u003e`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`archive 1`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Noted. I\u0027ve archived this task:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshruien"
        },
        "content": "[T][✓] Do laundry"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Exiting the program: bye"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Error handling"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Should users key in any command in the wrong format, the application will inform the user of the error."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joshruien"
        },
        "content": "An example below illustrates what will happen if the user does not key in the task description for a todo"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joshruien"
        },
        "content": "task."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joshruien"
        },
        "content": "`todo`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joshruien"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joshruien"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joshruien"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joshruien"
        },
        "content": "The data is saved automatically after any command that changes the data. "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "joshruien"
        },
        "content": "There is no need to manually save."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joshruien"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Q: How do i transfer my data from one computer to another?"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "joshruien"
        },
        "content": "A: Run the application on the computer and overwrite the empty data file with your data file from "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joshruien"
        },
        "content": "your previous computer."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joshruien"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Action | Format, Examples"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joshruien"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Add | eg. todo do laundry \u003cbr\u003e eg. deadline assignment /by 23/09/2020 23:59 \u003cbr\u003e eg. event birthday /at 23/09/2020 19:00"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "joshruien"
        },
        "content": "List | list"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Done | done TASK NUMBER \u003cbr\u003e eg. done 1"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Delete | delete TASK NUMBER \u003cbr\u003e eg. delete 2"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Search | find KEYWORDS \u003cbr\u003e eg. find do homework"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Archive | archive TASK NUMBER \u003cbr\u003e eg. archive 4"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "joshruien"
        },
        "content": "Exit | bye"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "joshruien": 185
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 58
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private final static String FILE_PATH \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private final static String ARCHIVE_PATH \u003d System.getProperty(\"user.dir\") + \"/data/archive.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private final static String DATA_PATH \u003d System.getProperty(\"user.dir\") + \"/data/\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Storage archivedStorage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private TaskList archivedTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Creates and initialises a Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        archivedStorage \u003d new Storage(ARCHIVE_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            archivedTasks \u003d new TaskList(archivedStorage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            File newData \u003d new File(DATA_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            newData.mkdir();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            File newFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            File newArchive \u003d new File(ARCHIVE_PATH);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                boolean isSuccessful \u003d newFile.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                boolean archiveCreated \u003d newArchive.createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                archivedTasks \u003d new TaskList(archivedStorage.load());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(\"An error occurred, file could not be created.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Runs the Duke object after it has been initialised."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param command The input command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void run(String command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        input \u003d command;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            output \u003d Parser.commandParser(input, tasks, archivedTasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            output \u003d e.getMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Gets the response for the input command"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param input The input command"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return a String with the response"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     String getResponse(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": "             new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                 public void run() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                     Platform.exit();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                     System.exit(0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": "             } , 1000);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         run(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         return this.output;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "joshruien": 84
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            stage.setTitle(\"Boo Task Manager\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().welcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pumpkin.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Ghost.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String welcomeMessage \u003d \"Hello! I\u0027m Boo!\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                DialogBox.getDukeDialog(welcomeMessage, dukeImage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        assert !input.equals(\"\") : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 61
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * The Parser class is responsible for handling input commands."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Handles commands regarding todos, deadlines and events."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param input The command input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param list The current TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @throws DukeException if there is an error with the input or input is not given in the correct format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String commandTask(String input, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String[] splitString \u003d input.split(\" \",2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return todoHandler(splitString, list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitString[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return deadlineHandler(splitString, list);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return eventHandler(splitString, list);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Handles all non-task related commands(commands that do not begin with a task type)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param input The input command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param list The current TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @throws DukeException if there is an error with the input or input is not given in the correct format."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String commandParser(String input, TaskList list, TaskList archives) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        assert !input.equals(\"\"): \"Input cannot be empty\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitInput[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return list.listTasks();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return doneHandler(splitInput, list);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return deleteHandler(splitInput, list);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return findHandler(input, splitInput, list);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"archive\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return archiveHandler(splitInput, list, archives);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return byeHandler();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                return commandTask(input,list);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String archiveHandler(String[] splitInput, TaskList list, TaskList archives) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if(splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify which task to archive\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String taskToArchive \u003d splitInput[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                int taskNumberInt \u003d Integer.parseInt(taskToArchive) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskNumberInt + 1 \u003e list.getLength() || taskNumberInt \u003c\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Your task number is out of bounds\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return list.archiveTask(taskNumberInt, archives);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String byeHandler() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String doneHandler(String[] splitInput, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify which task is done\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String taskNumberString \u003d splitInput[1];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                int taskNumberInt \u003d Integer.parseInt(taskNumberString) - 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskNumberInt + 1 \u003e list.getLength() || taskNumberInt \u003c\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Your task number is out of bounds\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Task t \u003d list.get(taskNumberInt);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String text \u003d t.markDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.updateDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return text;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String deleteHandler(String[] splitInput, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify which task you want to delete\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String taskNumberString \u003d splitInput[1];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                int taskNumberInt \u003d Integer.parseInt(taskNumberString) - 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskNumberInt + 1 \u003e list.getLength() || taskNumberInt \u003c\u003d 0) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Your task number is out of bounds\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return list.removeTask(taskNumberInt);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String findHandler(String input, String[] splitInput, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify the keyword to find\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String[] findArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String keywords \u003d findArray[1];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            ArrayList\u003cTask\u003e temp \u003d list.findTasks(keywords);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String text \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            for (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                int listNumber \u003d i + 1;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                Task currentTask \u003d temp.get(i);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                text +\u003d \"\\n\" + listNumber + \".\" + currentTask.toString();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return text;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String todoHandler(String[] splitString, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String info \u003d splitString[1];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            Todo newTodo \u003d new Todo(info);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return list.addTask(newTodo);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String deadlineHandler(String[] splitString, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String info \u003d splitString[1];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String[] information \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (information.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify the deadline time\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String description \u003d information[0];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String by \u003d information[1];"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return list.addTask(newDeadline);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return \"Please specify the date and time in this format dd/MM/yyyy HH:mm\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static String eventHandler(String[] splitString, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String info \u003d splitString[1];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String[] information \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (information.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please state the event time\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String description \u003d information[0];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String at \u003d information[1];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Event newEvent \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return list.addTask(newEvent);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return \"Please specify the date and time in this format dd/MM/yyyy HH:mm\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "joshruien": 211
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * The Storage class can (i) load the data from duke.txt, (ii) save a task onto duke.txt,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": " *  (iii) rewrite duke.txt when a task is removed or updated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Creates and initialises a Storage object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param filePath the path of the file to be read"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Loads the data on duke.txt."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return An ArrayList of tasks from duke.txt."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @throws FileNotFoundException if there is no file found to load from."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Scanner scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String[] taskInfo \u003d scanner.nextLine().split(\",\", 4);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (taskInfo[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Todo todo \u003d new Todo(taskInfo[2], true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Todo todo \u003d new Todo(taskInfo[2], false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else if (taskInfo[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Deadline deadline \u003d new Deadline(taskInfo[2], taskInfo[3], true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Deadline deadline \u003d new Deadline(taskInfo[2], taskInfo[3], false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Event event \u003d new Event(taskInfo[2], taskInfo[3], true);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Event event \u003d new Event(taskInfo[2], taskInfo[3], false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Saves a task onto duke.txt"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param path The file path of duke.txt."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param todoList The current task ArrayList"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param task The task to be saved"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void saveTask(String path, ArrayList\u003cTask\u003e todoList, Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String s \u003d formatString(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (todoList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                appendToFile(path, s);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                appendToFile(path, System.lineSeparator() + s);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"exception\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Rewrites duke.txt with the tasks from the todoList"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param path The file path of duke.txt"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param todoList The current task ArrayList"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void rewriteList(String path, ArrayList\u003cTask\u003e todoList ) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (todoList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                writeToFile(path, \"\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String allTasks \u003d formatString(todoList.get(0));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                for (int i \u003d 1; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Task t \u003d todoList.get(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String s \u003d formatString(t);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    allTasks \u003d allTasks + \"\\n\" + s;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                writeToFile(path, allTasks);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"exception\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private static String formatString(Task task) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String formattedString;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (task.checkDone()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                formattedString \u003d \"T,1,\" + task.getDescription();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                formattedString \u003d \"T,0,\" + task.getDescription();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (task.checkDone()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                formattedString \u003d \"D,1,\" + task.getDescription() + \",\" + ((Deadline) task).getDeadline();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                formattedString \u003d \"D,0,\" + task.getDescription() + \",\" + ((Deadline) task).getDeadline();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (task.checkDone()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                formattedString \u003d \"E,1,\" + task.getDescription() + \",\" + ((Event) task).checkAt();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                formattedString \u003d \"E,0,\" + task.getDescription() + \",\" + ((Event) task).checkAt();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return formattedString;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 151
    }
  },
  {
    "path": "src/main/java/tasklist/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * Encapsulates a Deadline object in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected LocalDateTime deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Deadline(String task, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Deadline(String task, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ISO_LOCAL_DATE_TIME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.deadline \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String dateTime \u003d deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 33
    }
  },
  {
    "path": "src/main/java/tasklist/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * Encapsulates an Event object in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Event(String task, LocalDateTime at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Event(String task, String at, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(at, DateTimeFormatter.ISO_LOCAL_DATE_TIME);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.at \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public LocalDateTime checkAt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String dateTime \u003d at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 32
    }
  },
  {
    "path": "src/main/java/tasklist/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * Encapsulates a Task object in the Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Gets the status icon, if status is done a tick symbol is returned, else a cross symbol is returned."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return A string object of the status symbol."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String tickIcon \u003d \"[\" + \"\\u2713\" + \"]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String crossIcon \u003d \"[\" + \"\\u2718\" + \"]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return isDone ? tickIcon : crossIcon;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public boolean checkDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return The output string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String markDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (this.isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + this.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            return \"Task is already done.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 56
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * The TaskList class encapsulates information regarding the list of tasks in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * This class can (i) add tasks to the list, (ii) remove tasks from the list, (iii)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": " * list all tasks in Duke, (iv) update the status of a task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e allTask) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList \u003d allTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Adds a task to the list and store it in storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return String with add task message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Storage.saveTask(path, this.todoList, task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        text \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                \"Now you have \" + this.todoList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.todoList.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.todoList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Removes a task from the list and update storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param index The task number to be removed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return a String with the remove task message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String removeTask(int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Task removedTask \u003d this.todoList.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList.remove(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        text +\u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\" + removedTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                \"Now you have \" + this.todoList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Storage.rewriteList(path, this.todoList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String archiveTask(int index, TaskList archiveList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String text\u003d\"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String archivePath \u003d System.getProperty(\"user.dir\") + \"/data/archive.txt\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Task removedTask \u003d this.todoList.get(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList.remove(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        text +\u003d \"Noted. I\u0027ve archived this task:\" + \"\\n\" + removedTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                \"Now you have \" + this.todoList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Storage.rewriteList(path, this.todoList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Storage.saveTask(archivePath, archiveList.todoList ,removedTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        archiveList.todoList.add(removedTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Lists all the tasks in the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return a String with all the tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        text \u003d text + \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        for (int i \u003d 0; i \u003c this.todoList.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            int listNumber \u003d i + 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            Task currentTask \u003d todoList.get(i);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            text +\u003d \"\\n\" + listNumber + \".\" + currentTask.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Finds all the tasks that have the keyword in its description."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @param keyword The keyword searched"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * @return An array list of tasks that match the keyword"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        for (int i  \u003d 0; i \u003c this.todoList.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (this.todoList.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                temp.add(this.todoList.get(i));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     * Updates a task as done and update storage."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshruien"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void updateDone() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String path \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Storage.rewriteList(path, this.todoList);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 121
    }
  },
  {
    "path": "src/main/java/tasklist/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 18
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Ui() { };"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String greeting() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String border \u003d \"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "//"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "//        System.out.println(border);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "//        System.out.println(\"    Hello! I\u0027m Duke\" + \"\\n\" + \"    What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "//        System.out.println(border);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return border + \"\\n\" + \"    Hello! I\u0027m Duke\" + \"\\n\" + \"    What can I do for you?\" + \"\\n\" + border;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String sayBye() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 27
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.scene.effect.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-color: black; -fx-border-style: dotted; -fx-label-padding: 10; -fx-padding: 5; -fx-background-color: white;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            \u003cDropShadow /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003c/effect\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "joshruien": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"710.0\" prefWidth\u003d\"530.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: linen;\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#274d2a\" textOverrun\u003d\"CENTER_ELLIPSIS\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/background.css\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"700.0\" prefWidth\u003d\"530.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "joshruien": 23
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import tasklist.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        assertEquals(\"[T][✘] buy groceries\", new Todos(\"buy groceries\").toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String by \u003d \"12/09/2020 20:00\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Events e \u003d new Events(\"concert\", dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        assertEquals(\"[E][✘] concert (at: 12 Sep 2020 20:00)\", e.toString() );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "event project meeting /at 30/08/2020 20:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joshruien": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/*/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "joshruien": 2
    }
  }
]
