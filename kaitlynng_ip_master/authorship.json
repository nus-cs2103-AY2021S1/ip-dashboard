[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "Task list (Last updated Aug 31 2020, 05:26:36 AM):"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "1. [T][✗] hello"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "2. [T][✗] goodbye"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 3
    }
  },
  {
    "path": "src/main/java/DateTimeFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "enum DateTimeFormat {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    String,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    Date,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    DateTime,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 5
    }
  },
  {
    "path": "src/main/java/DateTimeUtility.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "public class DateTimeUtility {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static DateTimeFormat checkDateTimeType(String dateStr) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            LocalDateTime.parse(dateStr);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            return DateTimeFormat.DateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        } catch (DateTimeException e) {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            LocalDate.parse(dateStr);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            return DateTimeFormat.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        } catch (DateTimeException e) {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return DateTimeFormat.String;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static String formatString(String dateStr, DateTimeFormat format) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        switch(format) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            case DateTime:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                return LocalDateTime.parse(dateStr).format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm:ss a\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            case Date:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                return LocalDate.parse(dateStr).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                return dateStr;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static String formatString(String dateStr) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return DateTimeUtility.formatString(dateStr, DateTimeUtility.checkDateTimeType(dateStr));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static int compare(LocalDate a, LocalDate b) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return a.compareTo(b);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static int compare(LocalDateTime a, LocalDateTime b) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return a.compareTo(b);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static int compare(LocalDate a, LocalDateTime b) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return a.compareTo(b.toLocalDate());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static int compare(LocalDateTime a, LocalDate b) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return a.toLocalDate().compareTo(b);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static int compare(String a, String b) throws DateTimeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        DateTimeFormat aType \u003d DateTimeUtility.checkDateTimeType(a);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        DateTimeFormat bType \u003d DateTimeUtility.checkDateTimeType(b);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        //check all possible cases!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        if (aType \u003d\u003d DateTimeFormat.Date) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            if (bType \u003d\u003d DateTimeFormat.Date) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                return DateTimeUtility.compare(LocalDate.parse(a), LocalDate.parse(b));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            } else if (bType \u003d\u003d DateTimeFormat.DateTime) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                return DateTimeUtility.compare(LocalDate.parse(a), LocalDateTime.parse(b));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                throw new DateTimeException(\"Cannot compare Datetime with string!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        } else if (aType \u003d\u003d DateTimeFormat.DateTime) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            if (bType \u003d\u003d DateTimeFormat.Date) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                return DateTimeUtility.compare(LocalDateTime.parse(a), LocalDate.parse(b));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            } else if (bType \u003d\u003d DateTimeFormat.DateTime) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                return DateTimeUtility.compare(LocalDateTime.parse(a), LocalDateTime.parse(b));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                throw new DateTimeException(\"Cannot compare Datetime with string!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            throw new DateTimeException(\"Cannot compare Datetime with string!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 76
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + super.formatBy() + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    enum CMD {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        BYE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        LIST,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        DONE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        DELETE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        DEFAULT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static final String logo \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            \"       ,\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"       \\\\`-._           __\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"        \\\\\\\\  `-..____,.\u0027  `.\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"         :`.         /    \\\\`.\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"         :  )       :      : \\\\\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"          ;\u0027        \u0027   ;  |  :\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"          )..      .. .:.`.;  :\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"         /::...  .:::...   ` ;\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"         ; _ \u0027    __        /:\\\\\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"         `:o\u003e   /\\\\o_\u003e      ;:. `.\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"        `-`.__ ;   __..--- /:.   \\\\\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"        \u003d\u003d\u003d \\\\_/   ;\u003d\u003d\u003d\u003d\u003d_.\u0027:.     ;\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"         ,/\u0027`--\u0027...`--....        ;\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"              ;                    ;\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"            .\u0027                      ;\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"          .\u0027                        ;\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"        .\u0027     ..     ,      .       ;\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"       :       ::..  /      ;::.     |\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"      /      `.;::.  |       ;:..    ;\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"     :         |:.   :       ;:.    ;\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"     :         ::     ;:..   |.    ;\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"      :       :;      :::....|     |\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"      /\\\\     ,/ \\\\      ;:::::;     ;\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"    .:. \\\\:..|    :     ; \u0027.--|     ;\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"   ::.  :\u0027\u0027  `-.,,;     ;\u0027   ;     ;\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \".-\u0027. _.\u0027\\\\      / `;      \\\\,__:      \\\\\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"`---\u0027    `----\u0027   ;      /    \\\\,.,,,/\\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    \"                   `----`              \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static final String botName \u003d \"Duke\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static final String userName \u003d \"You\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static final String line \u003d \"-------------------------------------------------------------------------------\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static final Path dataPath \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static final String taskLogName \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        System.out.println(\"Tasks will be saved to: \" + dataPath.toAbsolutePath());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        String userInput \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        Boolean running \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        System.out.println(\"Oh hai kittehs! I r lolcatus. reziztents is fu... fut...\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            + logo + \"\\n\\n\" + \"reziztents dun werk.\\n\" + line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            System.out.print(userName + \" sed: \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                //split command"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                int space_idx \u003d userInput.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                CMD command;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    command \u003d CMD.valueOf((space_idx  \u003d\u003d -1 ? userInput : userInput.substring(0, space_idx)).toUpperCase());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    command \u003d CMD.DEFAULT;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                String rest \u003d space_idx \u003d\u003d -1 ? \"\" : userInput.substring(space_idx + 1).trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                String item, dateStr;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                int dateStrIdx;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                switch(command) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        running \u003d false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        tasks.add(new Todo(rest));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        if (rest.isEmpty()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            throw new DukeException(\"ME FINKZ DAT U NED 2 ENTR NAYM 4 UR TODO ITEM LULZ\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            System.out.println(fmtMsg(\"I PUT NEW TING IN DA LIST\\n  \" + tasks.get(tasks.size() - 1) +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    \"\\nNAO U HAS \" +  tasks.size() + \" FINGS IN DA LIST LULZIES\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            saveTasksToFile(tasks);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        if (rest.isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            throw new DukeException(\"ME FINKZ DAT U NED 2 ENTR NAYM 4 UR DEDLINE ITEM LULZ\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            dateStrIdx \u003d rest.indexOf(\"/by\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            if (dateStrIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                throw new DukeException(\"ME FINKZ U NED 2 GIV DATE 4 TIEM 4 DA DEDLINE USIN /by\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                item \u003d rest.substring(0, dateStrIdx).trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                dateStr \u003d rest.substring(dateStrIdx + 3).trim();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                if (item.isEmpty()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    throw new DukeException(\"ME FINKZ U NED 2 GIV DA DEDLINE A NAEM\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                } else if (dateStr.isEmpty()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    throw new DukeException(\"ME FINKZ U NED 2 PUT SUMTHIN 4 DA DATE OR TIEM\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    tasks.add(new Deadline(item, dateStr));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    System.out.println(fmtMsg(\"I PUT NEW TING IN DA LIST\\n  \" + tasks.get(tasks.size() - 1) +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                            \"\\nNAO U HAS \" +  tasks.size() + \" FINGS IN DA LIST LULZIES\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    saveTasksToFile(tasks);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        dateStrIdx \u003d rest.indexOf(\"/at\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        if (rest.isEmpty()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            throw new DukeException(\"ME FINKZ DAT U NED 2 ENTR NAYM 4 UR EVENT ITEM LULZ\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            dateStrIdx \u003d rest.indexOf(\"/at\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            if (dateStrIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                throw new DukeException(\"ME FINKZ U NED 2 GIV DATE 4 TIEM 4 DA EVENT USIN /at\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                item \u003d rest.substring(0, dateStrIdx).trim();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                dateStr \u003d rest.substring(dateStrIdx + 3).trim();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                if (item.isEmpty()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    throw new DukeException(\"ME FINKZ U NED 2 GIV DA EVENT A NAEM\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                } else if (dateStr.isEmpty()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    throw new DukeException(\"ME FINKZ U NED 2 PUT SUMTHIN 4 DA DATE OR TIEM\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    tasks.add(new Event(item, dateStr));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    System.out.println(fmtMsg(\"I PUT NEW TING IN DA LIST\\n  \" + tasks.get(tasks.size() - 1) +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                            \"\\nNAO U HAS \" +  tasks.size() + \" FINGS IN DA LIST LULZIES\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    saveTasksToFile(tasks);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            System.out.println(fmtMsg(\"UR LIST HAZ NUTHIN LOLOL\"));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            dateStrIdx \u003d rest.indexOf(\"/by\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            if (dateStrIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                String msg \u003d \"U HAS DEES TINGS IN UR LIST.\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    msg +\u003d \"\\n\" +(i + 1) + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                System.out.println(fmtMsg(msg));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                dateStr \u003d rest.substring(dateStrIdx + 3).trim();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                if (DateTimeUtility.checkDateTimeType(dateStr) \u003d\u003d DateTimeFormat.String) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    throw new DukeException(\"U NID 2 GIV CORRECT DATE FOMAT!\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    String msg \u003d \"U HAS DEES TINGS IN UR LIST DAT R DUE/HAPPENIN BY \""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                                 + DateTimeUtility.formatString(dateStr) + \": \";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                        if (tasks.get(i) instanceof TimedTask) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                            try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                                if (DateTimeUtility.compare(dateStr,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                                        ((TimedTask) tasks.get(i)).getByString()) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                                    msg +\u003d \"\\n\" + (i + 1) + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                            } catch (DateTimeException e) {}"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                    System.out.println(fmtMsg(msg));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            int idx \u003d Integer.parseInt(rest) - 1;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            if (idx \u003c 0 || idx \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                throw new DukeException(\"U DOAN HAS TASK WIF DIS LABEL\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                tasks.get(idx).setDone(true);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                System.out.println(fmtMsg(\"TASK IZ NAO DUNZ!!!!1!11!\\n\" +"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                        \"  \" + tasks.get(idx)));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                saveTasksToFile(tasks);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            throw new DukeException(\"U MUST ONLY PUT INDEX OV TASK LULS\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            int idx \u003d Integer.parseInt(rest) - 1;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                throw new DukeException(\"U CANT DELET ANYTHIN COZ U HAS NO TASKZ NAO LOLOL\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            if (idx \u003c 0 || idx \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                throw new DukeException(\"U DOAN HAS TASK WIF DIS LABEL\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                System.out.println(fmtMsg(\"TASK IZ NAO DELETZ!!!!1!11!\\n\" +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                        \"  \" + tasks.get(idx) + \"\\nNAO U HAS \" +  (tasks.size() - 1) + \" FINGS IN DA LIST LULZIES\"));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                tasks.remove(idx);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                                saveTasksToFile(tasks);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                            throw new DukeException(\"U MUST ONLY PUT INDEX OV TASK LULS\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                    case DEFAULT:"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        System.out.println(fmtMsg(\"NOTD WIF THX.\"));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                System.out.println(fmtMsg(botName + \" HAZ FINDED ERRRR!\\n\" + \"\u003d\u003e \" + e));"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        System.out.println(fmtMsg(\"OKAIS I IZ GOIN 2 NOM BYEEEEE C U !!!1!1!!\"));"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static void saveTasksToFile(ArrayList tasks) throws DukeException {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        //save tasks"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        File dataDir \u003d dataPath.toAbsolutePath().toFile();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        try (BufferedWriter writer \u003d Files.newBufferedWriter(Paths.get(dataPath.toString(), taskLogName))) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            String msg \u003d \"Task list (Last updated \""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                         + now.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm:ss a\"))"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                         + \"):\";"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "                msg +\u003d \"\\n\" +(i + 1) + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            writer.write(msg);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        } catch (IOException x) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "            System.err.format(\"IOException: %s%n\", x);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public static String fmtMsg(String msg) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return line + \"\\n\" + botName + \" sed: \" + msg + \"\\n\" + line;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "kaitlynng": 279
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + super.formatBy() + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static final String ICON_TICK \u003d \"✓\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    private static final String ICON_CROSS \u003d \"✗\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public void setDone(boolean status) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return (isDone ? ICON_TICK : ICON_CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 25
    }
  },
  {
    "path": "src/main/java/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "public class TimedTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    protected DateTimeFormat format;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    protected String byString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public TimedTask(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        this.byString \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        this.format \u003d DateTimeUtility.checkDateTimeType(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public String formatBy() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return DateTimeUtility.formatString(this.byString, this.format);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public String getByString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return byString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "todo eat lunch"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "deadline finish book /by Saturday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "event project meeting /at June 6th"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "hello"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kaitlynng": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaitlynng"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "kaitlynng": 1
    }
  }
]
