[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "# duke.duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.taskList \u003d new TaskList(storage.tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // displayed once Duke is run, without input from user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        duke.ui.greetings();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            String input \u003d duke.ui.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                Command command \u003d parser.parse(input, duke.taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                duke.ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                isExit \u003d command.isExit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            if (!isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                duke.ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // Save tasks before terminating program"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        duke.storage.saveTasks(duke.taskList.tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        duke.ui.goodbye();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 42,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    Duke duke;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Parser(Duke duke) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Parses the user input and returns a Command to be executed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @param input String input from user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @param tasks TaskList being used to handle tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @return Command to be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @throws DukeException if user input is invalid or improperly formatted."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Command parse(String input, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        String description \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            command \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            description \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            command \u003d input;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                return new listCommand(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    int deleteTaskNo \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    return new deleteCommand(tasks, deleteTaskNo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"Please include a task number after \u0027delete\u0027 command.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                int doneTaskNo \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                return new doneCommand(tasks, doneTaskNo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                if (description !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    Todo newTodo \u003d new Todo(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    return new addCommand(tasks, newTodo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                if (description !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        LocalDate deadlineDate \u003d LocalDate.parse(description.substring(description.indexOf(\"/by\") + 4));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        String deadlineDescription \u003d description.substring(0, description.indexOf(\"/by\") - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(deadlineDescription, deadlineDate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        return new addCommand(tasks, newDeadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        throw new DukeException(\"Please indicate deadline date formatted as: /by YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                if (description !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        String eventAt \u003d description.substring(description.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        String eventDescription \u003d description.substring(0, description.indexOf(\"/at\") - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        Event newEvent \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        return new addCommand(tasks, newEvent);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        throw new DukeException(\"Please indicate event details formatted as: /at ______ .\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    throw new DukeException(\"The description of a event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                return new endCommand(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                return new findCommand(tasks, description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                duke.ui.badInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        loadTasks(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Saves tasks stored in tasklist before program is terminated in a \u0027duke.txt\u0027 file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @param tasks ArrayList of Tasks to be saved."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // Creates a BufferedWriter"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // Write tasks as strings into file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                bufferedWriter.write(tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // Closes the writer"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Loads tasks stored in \u0027duke.txt\u0027 when program is executed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @param tasks ArrayList of Tasks to be loaded."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void loadTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        BufferedReader bufferedReader \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            String currentLine \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            FileReader file \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            if (file.ready()) { // file exists to be read"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                bufferedReader \u003d new BufferedReader(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                while ((currentLine \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    String taskType \u003d currentLine.substring(1, 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    boolean isDone \u003d currentLine.contains(\"✗\") ? false : true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    String taskDescription \u003d currentLine.substring(currentLine.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            tasks.add(new Todo(taskDescription, isDone));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        case \"D\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            String deadlineDescription \u003d taskDescription.substring(0, taskDescription.indexOf(\"(\") - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            String deadlineBy \u003d taskDescription.substring(taskDescription.indexOf(\"by:\") + 4,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                                    taskDescription.indexOf(\")\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            LocalDate deadline \u003d LocalDate.parse(deadlineBy,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                                    DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            tasks.add(new Deadline(deadlineDescription, deadline, isDone));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                        case \"E\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            String eventDescription \u003d taskDescription.substring(0, taskDescription.indexOf(\"(\") - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            String eventAt \u003d taskDescription.substring(taskDescription.indexOf(\"at:\") + 4,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                                    taskDescription.indexOf(\")\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            tasks.add(new Event(eventDescription, eventAt, isDone));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"File not found, an empty duke.txt file has been created for you.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                if (bufferedReader !\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    bufferedReader.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yeohhq": 105
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Greets user immediately when Duke is executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void greetings() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        String greetings \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.out.println(greetings);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Bids farewell to user when Duke is terminated with \u0027bye\u0027 command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // print goodbye message"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        String goodbye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.out.println(goodbye);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // exits program"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Throws DukeException when bad input is given by user to the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void badInput() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        throw new DukeException("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"I\u0027m sorry, but I don\u0027t know what that means :(\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"Here\u0027s the command list:\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"1. list - show your current list of tasks\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"2. todo - creates a to-do task\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"3. event - creates an event task\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"4. deadline - creates a deadline task\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"5. done - marks task as done\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"6. delete - deletes task from the list\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                \"7. find - finds tasks containing keyword\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Prints a single line of dashes to separate consecutive inputs and outputs."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Reads input from user to be processed by Parser."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @return String command to be processed by Parser."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        String input \u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // get rid of leading and trailing spaces"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 68
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Command(TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void execute() throws DukeException { }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 21
    }
  },
  {
    "path": "src/main/java/command/addCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class addCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public addCommand(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Adds task to list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.tasks.addTask(this.task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 21
    }
  },
  {
    "path": "src/main/java/command/deleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class deleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    int taskNo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public deleteCommand(TaskList tasks, int taskNo) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Deletes task to list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.tasks.deleteTask(taskNo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 23
    }
  },
  {
    "path": "src/main/java/command/doneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class doneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    int taskNo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public doneCommand(TaskList tasks, int taskNo) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.taskNo \u003d taskNo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Marks task as done in list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.tasks.markTaskDone(taskNo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 23
    }
  },
  {
    "path": "src/main/java/command/endCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class endCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public endCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Updates isExit boolean to true."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 19
    }
  },
  {
    "path": "src/main/java/command/findCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class findCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public findCommand(TaskList tasks, String keyword) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.tasks.findTask(keyword);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 18
    }
  },
  {
    "path": "src/main/java/command/listCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class listCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public listCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Lists tasks in list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "       this.tasks.list();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 19
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(\"[!] OOPS!!! \" + message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 8
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Deadline(String description, LocalDate by, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Returns description of this task and its completion status, with its deadline date."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @return String that describes task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 28
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Returns description of this task and its completion status, with its event date/location."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @return String that describes task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 24
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Returns the completion status of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @return Boolean of completion status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2717\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Marks this task as done/completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Returns description of this task and its completion status."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @return String that describes task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 41
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        if (tasks \u003d\u003d null) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Prints the tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            String item \u003d i + \".\" + tasks.get(i - 1).toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(item);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Adds the tasks to the tasklist."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // inform user item has been added"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Deletes the tasks from the tasklist."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @param taskNo Task number to be deleted."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void deleteTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // verify task number exists, then delete"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        if (taskNo - 1 \u003c tasks.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            Task toDelete \u003d tasks.get(taskNo - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            tasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(toDelete.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // task number does not exist"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            throw new DukeException(\"Sorry, this task does not exist!\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Marks the tasks as completed in the tasklist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @param taskNo Task number to be marked as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void markTaskDone(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        // verify task number exists, then mark as done"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        if (taskNo - 1 \u003c tasks.size()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            if (tasks.get(taskNo - 1).isDone) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                // task marked as done already"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                throw new DukeException(\"Duke.Task.Task is already done! :)\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                tasks.get(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                System.out.println(tasks.get(taskNo - 1).toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            // task number does not exist"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            throw new DukeException(\"Sorry, this task does not exist!\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Finds tasks with given keyword and prints them."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @param keyword String that user wants to find task with."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @throws DukeException if keyword is empty."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void findTask(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        if (keyword \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            throw new DukeException(\"Please indicate the keyword you wish to use to find tasks with.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                boolean isFound \u003d task.description.contains(keyword);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                if (isFound){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                    System.out.println((i + 1) + \".\" + task.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 104
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * Returns description of this task and its completion status."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     * @return String that describes task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void toDoTest() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Command command \u003d parser.parse(\"todo Project\", duke.taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Task taskAdded \u003d duke.taskList.tasks.get(0);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        assertEquals(taskAdded.toString(), \"[T][✗] Project\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void deadlineTest() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Command command \u003d parser.parse(\"deadline Project Research /by 2020-09-01\", duke.taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Task taskAdded \u003d duke.taskList.tasks.get(0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        assertEquals(taskAdded.toString(), \"[D][✗] Project Research (by: Sep 01 2020)\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        command \u003d parser.parse(\"done 1\", duke.taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Task taskDone \u003d duke.taskList.tasks.get(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        assertEquals(taskDone.toString(), \"[D][✓] Project Research (by: Sep 01 2020)\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    public void eventTest() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Parser parser \u003d new Parser(duke);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Command command1 \u003d parser.parse(\"event Project Meeting /at Zoom\", duke.taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        command1.execute();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        Task taskAdded \u003d duke.taskList.tasks.get(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "        assertEquals(taskAdded.toString(), \"[E][✗] Project Meeting (at: Zoom)\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 47
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "event"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todoo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "event aa"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "deadline aa"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 23
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yeohhq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yeohhq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yeohhq": 3,
      "-": 37
    }
  }
]
