[
  {
    "path": "CHANGELOG.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "# Changelog"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## [0.5.0](https://github.com/therizhao/ip/compare/v0.4.0...v0.5.0) (2020-09-15)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "* **A-UserGuide:** Add user guide to ui and docs ([a42b08c](https://github.com/therizhao/ip/commit/a42b08ca16576e194e5d805acee03392a62ee9be))"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Bug Fixes"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "* Fix Gui to be able to write tasklist into file ([219c2e6](https://github.com/therizhao/ip/commit/219c2e6b6935ab1c2ecf32302d615037b9e84d20))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## [0.4.0](https://github.com/therizhao/ip/compare/v0.3.0...v0.4.0) (2020-09-08)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "* **C-Tagging:** Add task tagging feature ([8170ab3](https://github.com/therizhao/ip/commit/8170ab33d02a91a9585d23f8eaf3d36c9f178681)), closes [#30](https://github.com/therizhao/ip/issues/30)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Bug Fixes"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "* Fix gradle shadowJar script ([22ef78f](https://github.com/therizhao/ip/commit/22ef78fcd9a890177ea8311a57441c7e93147f94))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## 0.3.0 (2020-09-02)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "* **Level10:** Add duke logic for gui ([ed9a7db](https://github.com/therizhao/ip/commit/ed9a7db09e55d14aa5bdc7be87a22abe1b7f60ff)), closes [#23](https://github.com/therizhao/ip/issues/23)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "* **Level10:** Add gui components ([fea5775](https://github.com/therizhao/ip/commit/fea57750669b71743757331676d74dbab4e054e0))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## 0.2.0 (2020-08-24)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level7:** Add save current task list ([bbfcc92](https://github.com/therizhao/ip/commit/bbfcc92aaf191d7389ea03e5b8879583b28df25d))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level8:** add list date command to print deadlines/events occurring on a specific date ([385cda4](https://github.com/therizhao/ip/commit/385cda46f79504ed6f0424105eddbf780f83d909))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level8:** Store actual date object in Event and Deadline class ([9c4abe1](https://github.com/therizhao/ip/commit/9c4abe1b3a0c044aee8ce0ac247a974ef7fef1af))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Bug Fixes"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Fix task type tag of deadline task ([14383a1](https://github.com/therizhao/ip/commit/14383a1f74325eeb218e837858cf22a89f66599a))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## 0.1.0 (2020-08-17)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Features"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level1:** Add greet, echo and exit functionality ([de60fe6](https://github.com/therizhao/ip/commit/de60fe69a835ac6f41a3a40cd41b968d06639c45))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level2:** Add list and add commands ([ee8bd8f](https://github.com/therizhao/ip/commit/ee8bd8fb91444b8fb4015e451e667870caa79d8b))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level3:** Add done command ([c28d3fe](https://github.com/therizhao/ip/commit/c28d3fe98b0d0bbbf85fd6799dfd2fcd71b95e0b))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level4:** Add input processing for task added ([fa2b191](https://github.com/therizhao/ip/commit/fa2b19161190676df1ef50646435ff6a94165647))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level4:** Add todo, event \u0026 deadline commands and corresponding classes ([9fcc85d](https://github.com/therizhao/ip/commit/9fcc85dd2233641242b571190eb969fa1c7d89dc))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level5:** Add exception handling using DukeException ([7c3258b](https://github.com/therizhao/ip/commit/7c3258b708be13c8d7f5e22f24d3a55fff380ab0))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- **level6:** Add delete task function ([de94551](https://github.com/therizhao/ip/commit/de94551b18ddd63dbed9205f840521cd40a662ef))"
      }
    ],
    "authorContributionMap": {
      "therizhao": 59
    }
  },
  {
    "path": "CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "| Display                                                      |        Name         |            Github Profile             |                      Homepage                      |"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "| ------------------------------------------------------------ | :-----------------: | :-----------------------------------: | :------------------------------------------------: |"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "| ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         |"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "| ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) |"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "therizhao": 5
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "This project is part of a module for CS2103 Software Engineering in NUS."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "It is a todo list that runs on javafx."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "**Changelog:**  https://github.com/therizhao/ip/blob/master/CHANGELOG.md"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## How to run the program?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "1. Download the latest release"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "2. Execute it"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## How are commits done?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Commits follow [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) specification"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- An [Intellij IDE tool](https://plugins.jetbrains.com/plugin/9861-git-commit-template) is used to enforce the styling "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## How is the Changelog generated?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "To generate the changelog, run the follow steps"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "1. Run `npm i` in cli (to download `standard-version` package)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "2. Run `npm run release` in cli"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    - Git tag of the new version will be auto-added"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    - Changelog will be auto-updated"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "therizhao": 23
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "therizhao": 18
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## What is Duke?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "Duke is an imperfect task manager. It\u0027s not the most elegant nor the most efficient, but it gets the job done, sometimes."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "## How to use?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "Duke understands the list of commands below. Duke doesn\u0027t understand anything else (Yes, it\u0027s not very smart)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "### Commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`list` - List all tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`date \u003cdate\u003e` - List all tasks on a date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": " `todo \u003ctask_name\u003e` - Adds a todo task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": " `event `"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": " `deadline \u003ctask_name\u003e /by \u003cdate\u003e` - Add a deadline task to be completed by `\u003cdate\u003e`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`event \u003ctask_name\u003e /at \u003cdate\u003e` - Add an event task that is scheduled for `\u003cdate\u003e`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`done \u003ctask_index\u003e` - Marks the task at the task index as done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`delete \u003ctask_index\u003e` - Deletes the task at the task index "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`find \u003ckeywords\u003e` - Finds all the tasks in the task list that has the keywords "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`tag \u003ctask_index\u003e \u003ctag_name\u003e` - Adds a tag to the task specified"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`bye` - Shuts down the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "#### How to input the variables?"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`\u003cdate\u003e`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Input `date` with this format: `yyyy-mm-dd`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Make sure date is within valid range"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`\u003ctask_index\u003e`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Run `list` command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- The number associated with the target task is the `task_index`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`\u003ckeywords\u003e`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Input a string (can have spaces in between)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`\u003ctask_name\u003e`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Input a string (can have spaces in between)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "`\u003ctag_name\u003e`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "- Input a string (can have spaces in between)"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "therizhao": 39
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 85,
      "therizhao": 4
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.launcher.GuiLauncher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Application.launch(GuiLauncher.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 9
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * Duke class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalSystemOut \u003d System.out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Duke\u0027s constructor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private ByteArrayOutputStream setupOutStream() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return outContent;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private void restoreOutStream() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(this.originalSystemOut);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Runs a command string and returns the response"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString Raw command from user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return String containing the response from Duke"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Response runCommand(String commandString) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        ByteArrayOutputStream outContent \u003d setupOutStream();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Response response \u003d new Response();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Command cmd \u003d Parser.parseCommandString(commandString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            cmd.execute(this.taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (cmd.isExit()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                response.setExit(true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        response.setText(outContent.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        restoreOutStream();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "therizhao": 61
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** ByeCommand signals the program should end */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ByeCommand(String commandString) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.BYE, commandString);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /** Prints goodbye output */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showBye();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 22
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Command is the base class of all commands */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final CommandType commandType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final String commandString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Constructor for command class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandType Type of command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString String of actual command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Command(CommandType commandType, String commandString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.commandString \u003d commandString;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a Command subclass object based on the commandType and commandString given"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandType of the commandString"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString represent the command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a Command subclass object based on the commandType and commandString given"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command is invalid"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static Command create(CommandType commandType, String commandString) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case LIST_DATE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new ListDateCommand(commandString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new ListCommand(commandString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new DoneCommand(commandString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new ToDoCommand(commandString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new DeadlineCommand(commandString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new EventCommand(commandString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new DeleteCommand(commandString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new ByeCommand(commandString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new FindCommand(commandString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        case TAG:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new TagCommand(commandString);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.commandInvalidException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the description of the task excluding the command type"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return the description of the task excluding the command type"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the description is not found"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String getTaskDescription() throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return Parser.getTaskDescription(this.commandType, this.commandString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the command string of the command"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return the command string of the command"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return commandString;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the command type of the command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return the command type of the command"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public CommandType getCommandType() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.commandType;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns true if and only if the program should exit"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return true if and only if the program should exit"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks TaskList object to be modified / accessed by the command"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when something goes wrong"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public abstract void execute(TaskList tasks) throws DukeException;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 103
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** CommandType represents all the valid commands available */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    LIST_DATE(\"date\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    FIND(\"find\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    TAG(\"tag\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    CommandType(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns true if an only if the command string matches the command type"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString to be checked"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return true if an only if the command string matches the command type"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public boolean is(String commandString) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return commandString.startsWith(this.name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 36
    }
  },
  {
    "path": "src/main/java/duke/command/CreateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * UpdateCommand is the abstract superclass of all command classes that requires adding of new items"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * into the task list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public abstract class CreateCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public CreateCommand(CommandType commandType, String commandString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(commandType, commandString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds a task into the task list and prints the task added"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param task  the task to be added"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void addTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showAddTask(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * EventCommand adds a deadline task to the task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DeadlineCommand extends CreateCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public DeadlineCommand(String commandString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.DEADLINE, commandString);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds a deadline event to the task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command string has no valid date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String description \u003d super.getTaskDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String[] taskParts \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (taskParts.length !\u003d 2 || taskParts[1].equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskDateEmptyException(super.getCommandType());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String name \u003d taskParts[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String dateString \u003d taskParts[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super.addTask(tasks, new Deadline(name, Parser.parseDateString(dateString)));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 36
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * DeleteComamnd deletes the task specifed in the tasklist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DeleteCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public DeleteCommand(String commandString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.DELETE, commandString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Deletes the task specifed in the tasklist"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks a list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int index \u003d super.getTaskTargetIndex();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showDeleted(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * DoneCommand sets the task specified in the command as done in the task list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DoneCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public DoneCommand(String commandString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.DONE, commandString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Sets the task specified in the command as done in the task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the index in the command string is invalid"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int index \u003d super.getTaskTargetIndex();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showDone(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 29
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * EventCommand adds an event to the task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class EventCommand extends CreateCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public EventCommand(String commandString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.EVENT, commandString);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds an event to the task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command string has no valid date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String description \u003d super.getTaskDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String[] taskParts \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (taskParts.length !\u003d 2 || taskParts[1].equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskDateEmptyException(super.getCommandType());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String name \u003d taskParts[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String dateString \u003d taskParts[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super.addTask(tasks, new Event(name, Parser.parseDateString(dateString)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 35
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * FindCommand finds all tasks matching keyword"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public FindCommand(String commandString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.FIND, commandString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Finds all the tasks in the task list that matches keyword"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command string has no keyword"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String keyword \u003d super.getTaskDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (task.getName().contains(keyword)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showList(filteredTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * ListCommand lists all the tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ListCommand(String commandString) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.LIST, commandString);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Lists all the tasks in the task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showList(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * ListDateCommand lists all the tasks on the date specified"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ListDateCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ListDateCommand(String commandString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.LIST_DATE, commandString);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * ListDateCommand lists all the tasks on the date specified"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the date is invalid"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String dateString \u003d this.getTaskDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        LocalDate date \u003d Parser.parseDateString(dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showListDate(tasks, date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 30
    }
  },
  {
    "path": "src/main/java/duke/command/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.util.IndexDescriptionPair;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * TagCommand add a tag to the task specified in the tasklist"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public TagCommand(String commandString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.TAG, commandString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public IndexDescriptionPair getIndexDescriptionPair() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return Parser.getTaskTargetIndexDescription(super.getCommandType(), super.getCommandString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds a tag to the task specified in the tasklist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks a list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        IndexDescriptionPair indexDescriptionPair \u003d getIndexDescriptionPair();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d tasks.get(indexDescriptionPair.getIndex());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Tag tag \u003d new Tag(indexDescriptionPair.getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.addTag(tag);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showTagged(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * ToDo command that adds a todo task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ToDoCommand extends CreateCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ToDoCommand(String commandString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(CommandType.TODO, commandString);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds a todo task to the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String description \u003d this.getTaskDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.addTask(tasks, new ToDo(description));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 25
    }
  },
  {
    "path": "src/main/java/duke/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * UpdateCommand is the abstract superclass of all command classes that requires editing (except"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * adding new items) of the tasklist in the execute command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public abstract class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public UpdateCommand(CommandType commandType, String commandString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(commandType, commandString);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the index in the command string"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return an int that represent the index in the command string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the index is invalid, i.e. when it cannot be parsed as an integer"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public int getTaskTargetIndex() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return Parser.getTaskTargetIndex(super.getCommandType(), super.getCommandString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * DukeException is the custom exception class of the Duke program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private static final long serialVersionUID \u003d 50572093442410692L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 12
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Label label;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * DialogBox constructor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param text  Label test of dialog box"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param image User image avatar in dialog box"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        label.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image iv) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        var db \u003d new DialogBox(text, iv);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * File name of the file where the current task list is saved (under ./data/ directory)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private static final String FILE_STRING \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Initializes the main window by setting up scroll properties and showing greetings"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        dukePrint(Ui.getGreetings());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        createStorage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Creates storage to store text output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void createStorage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            this.storage \u003d Storage.create(FILE_STRING);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            dukePrint(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Prints message on User\u0027s dialog"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param message to be printed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void userPrint(String message) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(message, userImage));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Prints message on Duke\u0027s dialog"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param message to be printed"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void dukePrint(String message) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(message, dukeImage));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void handleUserInput() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Response dukeResponse \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            userPrint(userText);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            dukePrint(dukeResponse.getText());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (dukeResponse.getExit()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                storage.write(duke.getTaskList());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                storage.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            dukePrint(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Response getResponse(String input) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return duke.runCommand(input);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 110
    }
  },
  {
    "path": "src/main/java/duke/launcher/CliLauncher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.launcher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.response.Response;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.scanner.CommandScanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class CliLauncher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * File name of the file where the current task list is saved (under ./data/ directory)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private static final String FILE_STRING \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Runs Duke\u0027s cli based program. Saves output in the file specified in the fileString"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        CommandScanner cmdScanner \u003d new CommandScanner();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Ui.showGreetings();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Storage storage \u003d Storage.create(CliLauncher.FILE_STRING);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                String cmdString \u003d cmdScanner.nextCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Response response \u003d duke.runCommand(cmdString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                System.out.println(response.getText());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                if (response.getExit()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            storage.write(duke.getTaskList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            storage.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Ui.showUnexpectedError(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 46
    }
  },
  {
    "path": "src/main/java/duke/launcher/GuiLauncher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.launcher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.gui.MainWindow;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class GuiLauncher extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(GuiLauncher.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 34
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.util.IndexDescriptionPair;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * Parser that parses raw user input into digestible output"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the description excluding the command type in the command string\u003cbr /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * CommandString Format: `command_type` `description_to_be_returned`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandType   of the commandString"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString to be parsed to get the description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a String that represent the description excluding the command type in the command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the description is not found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static String getTaskDescription(CommandType commandType, String commandString)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String[] cmdParts \u003d commandString.split(commandType.toString() + \" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (cmdParts.length !\u003d 2 || cmdParts[1].equals(\"\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskDescriptionEmptyException(commandType);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return cmdParts[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the index in the command string\u003cbr /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * CommandString Format: `command_type` `index_to_be_returned`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandType   of the commandString"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString to be parsed to get the index"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return an int that represent the index in the command string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the index is invalid, i.e. when it cannot be parsed as an integer"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static int getTaskTargetIndex(CommandType commandType, String commandString)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String description \u003d Parser.getTaskDescription(commandType, commandString);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return Integer.parseInt(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskIndexFormatException(commandType);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the index and additional description in the command string\u003cbr /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * CommandString Format: `command_type` `index_to_be_returned` `description_to_be_returned`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandType   of the commandString"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString to be parsed to get the index description pair"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return an int that represent the index in the command string"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the index is invalid, i.e. when it cannot be parsed as an integer"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static IndexDescriptionPair getTaskTargetIndexDescription(CommandType commandType, String commandString)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        DukeException indexDescriptionFormatException \u003d Ui.taskIndexDescriptionFormatException(commandType, \"\u003ctags\u003e\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String indexDescription \u003d Parser.getTaskDescription(commandType, commandString);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String[] rawDescriptionPair \u003d indexDescription.split(\" \", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (rawDescriptionPair.length !\u003d 2 || rawDescriptionPair[1].equals(\"\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw indexDescriptionFormatException;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            int index \u003d Integer.parseInt(rawDescriptionPair[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            String description \u003d rawDescriptionPair[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new IndexDescriptionPair(index, description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw indexDescriptionFormatException;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a LocalDate object by parsing a date string \u003cbr\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * dateString should be of format yyyy-mm-dd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param dateString to be parsed into the LocalDate"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a LocalDate object that is a representation of the dateString argument"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the date is invalid"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static LocalDate parseDateString(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskDateFormatException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a Command object after parsing the command string"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param commandString a string representing the command"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a Command object parsed from the command string"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when the command string is invalid"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static Command parseCommandString(String commandString) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Optional\u003cCommandType\u003e commandType \u003d"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Stream.of(CommandType.values()).filter(command -\u003e command.is(commandString)).findAny();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (commandType.isPresent()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return Command.create(commandType.get(), commandString);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.commandInvalidException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 120
    }
  },
  {
    "path": "src/main/java/duke/response/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.response;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private String text \u003d \"\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void setExit(boolean exit) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        isExit \u003d exit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void setText(String text) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public boolean getExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 22
    }
  },
  {
    "path": "src/main/java/duke/scanner/CommandScanner.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * CommandScanner that scans for commands"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class CommandScanner {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public CommandScanner() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns next command as as string from the user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a String that represent the next command in the user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String nextCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 23
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": " * Storage class that writes the tasks to a file specified in data directory"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static final Path DATA_DIR \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final BufferedWriter writer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private Storage(BufferedWriter writer) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.writer \u003d writer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Creates a file in the src/data directory"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param fileName Name of the file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a new Storage object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException that there is an io error"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static Storage create(String fileName) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (!Files.exists(Storage.DATA_DIR)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Files.createDirectory(Storage.DATA_DIR);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Path filePath \u003d Paths.get(Storage.DATA_DIR.toString(), fileName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            BufferedWriter writer \u003d Files.newBufferedWriter(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return new Storage(writer);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.ioException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Writes the taskList into the file stream"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param taskList to be written into the file stream"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when there is an IOException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void write(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.write(Ui.getListString(taskList));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Writes the message into the file stream"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param message to be written into the file stream"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when there is an IOException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void write(String message) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            this.writer.write(message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.ioException(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Closes the buffered writer, writing the content into the file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when there is an IOException while writing"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void close() throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            this.writer.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.ioException(e);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 80
    }
  },
  {
    "path": "src/main/java/duke/tag/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Tag(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Deadline Task with a specified date that that is the time of the Deadline */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Deadline(String name, LocalDate date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(name, TaskType.DEADLINE, date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            \"%s (by: %s)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            super.toString(), super.getDate().get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Event Task with a specified date that that is the time of the event */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(name, TaskType.EVENT, date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            \"%s (at: %s)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            super.toString(), super.getDate().get().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Task */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private static final String DONE \u003d \"[x]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private static final String NOT_DONE \u003d \"[ ]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final TaskType taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final Optional\u003cLocalDate\u003e date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final List\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Creates a task with a date, date set to Optional.empty"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param name Name of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param type Type of the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Task(String name, TaskType type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.taskType \u003d type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.date \u003d Optional.empty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Creates a task with a date"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param name Name of the task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param type Type of the task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param date Date of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Task(String name, TaskType type, LocalDate date) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.taskType \u003d type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.date \u003d Optional.of(date);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds a tag to the task\u0027s list of tags"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tag to be added"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void addTag(Tag tag) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.tags.add(tag);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the list of tags of the task in string format"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return the list of tags of the task in string format"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String getTagsString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return String.join(\", \", this.tags.stream().map(tag -\u003e tag.toString()).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns the name of the task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return the name of the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a String that show the status of the task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return String that shows the status of the task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.isDone ? Task.DONE : Task.NOT_DONE;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns an Optional object containing the date associated with the task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return an Optional object containing the date associated with the task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Optional\u003cLocalDate\u003e getDate() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Sets the task as done or not done"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param isDone a boolean that determines if the task is done (true if done, false if not done)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (this.tags.isEmpty()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return String.format(\"%s%s %s\", this.taskType, this.getStatus(), this.name);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return String.format(\"%s%s %s (tags: %s)\", this.taskType, this.getStatus(), this.name, this.getTagsString());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 109
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** TaskList that is 1-indexed list of tasks */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class TaskList implements Iterable\u003cTask\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Constructor to initiate a tasklist"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.tasks.add(null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Parses index to make sure it is within range"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return valid index"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when index is out of bounds in tasklist"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private int parseIndex(int index) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e this.tasks.size() - 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            throw Ui.taskIndexOutOfBoundsException(index, this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns length of the tasklist"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return an integer that is the length of all tasklist"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert this.tasks.size() \u003e\u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.tasks.size() - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Adds a task into the tasklist"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param task a task to be added to the tasklist"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Removes the task at the index from the tasklist"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param index the index of the task in the tasklist to be removed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return the task removed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when index is out of bounds in tasklist"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Task remove(int index) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int validIndex \u003d this.parseIndex(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.tasks.remove(validIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns task at the specified index in the tasklist"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param index of the task in the tasklist (index starts from 1)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return the task at the specified index in the tasklist"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @throws DukeException when index is out of bounds in tasklist"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Task get(int index) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int validIndex \u003d this.parseIndex(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.tasks.get(validIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns an iterator of the tasklist"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return an iterator of the tasklist"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public Iterator\u003cTask\u003e iterator() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new Iterator\u003c\u003e() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            private int currentIndex \u003d 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            public boolean hasNext() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                return currentIndex \u003c TaskList.this.tasks.size();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            public Task next() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Task task \u003d TaskList.this.tasks.get(currentIndex);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                this.currentIndex++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        };"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 106
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** Different possible TaskType */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    TODO(\"[T]\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    EVENT(\"[E]\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    DEADLINE(\"[D]\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    TaskType(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 19
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "/** ToDo task */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        super(name, TaskType.TODO);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 8
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a string representing the task list in a human readable format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks to be printed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a string representing the task list in a human readable format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static String getListString(TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            output.append(String.format(\"%d. %s%n\", index, task));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * Returns a string representing the list of the tasks that matches the specified date in the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * list in a human readable format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param tasks task list of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param date  of the tasks to be found in the output string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @return a string representing the list of the tasks that matches the specified date in the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static String getListDate(TaskList tasks, LocalDate date) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (task.getDate().isPresent() \u0026\u0026 task.getDate().get().isEqual(date)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                output.append(String.format(\"%d. %s%n\", index, task));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static String getGreetings() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            \"Hi here are the list of commands I understand.\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"`list` - List all tasks\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"`date \u003cdate\u003e` - List all tasks on a date\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \" `todo \u003ctask_name\u003e` - Adds a todo task\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \" `event `\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \" \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \" `deadline \u003ctask_name\u003e /by \u003cdate\u003e` - Add a deadline task to be completed by `\u003cdate\u003e`\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \" \\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"`event \u003ctask_name\u003e /at \u003cdate\u003e` - Add an event task that is scheduled for `\u003cdate\u003e`\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"`done \u003ctask_index\u003e` - Marks the task at the task index as done\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"`delete \u003ctask_index\u003e` - Deletes the task at the task index \\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"`find \u003ckeywords\u003e` - Finds all the tasks in the task list that has the keywords \\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"`tag \u003ctask_index\u003e \u003ctag_name\u003e` - Adds a tag to the task specified\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"`bye` - Shuts down the program\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.print(Ui.getListString(tasks));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showListDate(TaskList tasks, LocalDate date) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(Ui.getListDate(tasks, date));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showGreetings() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(Ui.getGreetings());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showBye() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(\"Bye! Hope to never see you again!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showDone(Task task) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.printf(\"Good job. This task is marked as done:\\n %s%n\", task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showDeleted(Task task) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.printf(\"Noted. I\u0027ve remove this task:\\n %s%n\", task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showTagged(Task task) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.printf(\"Noted. I\u0027ve tagged this task:\\n %s%n\", task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showAddTask(Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.printf(\"Got it. I\u0027ve added this task:%n %s%n\", task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showError(String message) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static void showUnexpectedError(String message) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.out.println(\"Unexpected Error:\\n\" + message);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException commandInvalidException() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException(\"This command is invalid.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskDescriptionEmptyException(CommandType type) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException(String.format(\"The description of a %s cannot be empty.\", type));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskDateEmptyException(CommandType type) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            String.format(\"Error! The description of a %s is missing a date.\", type));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskIndexDescriptionFormatException(CommandType type, String descriptionFormat) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            String"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                .format(\"Input format is wrong. Please make sure it is `%s \u003ctask-index\u003e %s`\", type, descriptionFormat));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskIndexFormatException(CommandType type) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            String.format(\"Input format is wrong. Please make sure it is `%s \u003ctask-index\u003e`\", type));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskDateFormatException() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException("
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            \"Date format is wrong. It should be yyyy-mm-dd and within possible date ranges\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException taskIndexOutOfBoundsException(int index, TaskList tasks) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        StringBuilder message \u003d"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                new StringBuilder(String.format(\"Task at index %d doesn\u0027t exist%n\", index));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            message.append(\"\\nThere are no tasks currently.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            message.append("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                            \"There are %d tasks currently. Please a number between 1 and %d inclusive.\","
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                            tasks.size(), tasks.size()));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException(message.toString());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public static DukeException ioException(IOException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return new DukeException(\"Something is wrong with the input:\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 163
    }
  },
  {
    "path": "src/main/java/duke/util/IndexDescriptionPair.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class IndexDescriptionPair {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * IndexDescriptionPair\u0027s constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param index       of the pair"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     * @param description of the pair"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public IndexDescriptionPair(int index, String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        IndexDescriptionPair that \u003d (IndexDescriptionPair) o;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return index \u003d\u003d that.index \u0026\u0026 description.equals(that.description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return Objects.hash(index, description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        return \"IndexDescriptionPair{\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            + \"index\u003d\" + index"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            + \", description\u003d\u0027\" + description + \u0027\\\u0027\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            + \u0027}\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 52
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    \u003cLabel fx:id\u003d\"label\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "therizhao": 14
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "therizhao": 19
    }
  },
  {
    "path": "src/test/java/duke/command/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeList_returnListCommand() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.LIST, \"something\") instanceof ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeListDate_returnListDateCommand() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.LIST_DATE, \"something\") instanceof ListDateCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeDone_returnDoneCommand() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.DONE, \"something\") instanceof DoneCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeToDo_returnToDoCommand() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.TODO, \"something\") instanceof ToDoCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeDeadline_returnDeadlineCommand() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.DEADLINE, \"something\") instanceof DeadlineCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeEvent_returnEventCommand() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.EVENT, \"something\") instanceof EventCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeDelete_returnDeleteCommand() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.DELETE, \"something\") instanceof DeleteCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeBye_returnByeCommand() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.BYE, \"something\") instanceof ByeCommand;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeFind_returnFindCommand() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.FIND, \"something\") instanceof FindCommand;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void create_commandTypeTag_returnTagCommand() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assert Command.create(CommandType.TAG, \"something\") instanceof TagCommand;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 57
    }
  },
  {
    "path": "src/test/java/duke/command/DeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class DeadlineCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_addDeadlineTaskToTaskList() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new DeadlineCommand(\"deadline return book /by 2020-07-29\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[D][ ] return book (by: Jul 29 2020)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidCommandNoDescription_throwsException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new DeadlineCommand(\"deadline \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new DeadlineCommand(\"deadline\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 32
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class DeleteCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_deleteTaskFromTaskList() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.size(), 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new DeleteCommand(\"delete 1\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.size(), 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidIndex_throwsException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new DeleteCommand(\"delete 0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new DeleteCommand(\"delete 3\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 37
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class DoneCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_setTaskAsDone() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new DoneCommand(\"done 1\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[T][ ] hello\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[T][x] hello\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidIndex_throwsException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new DeleteCommand(\"done 0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new DeleteCommand(\"done 3\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 37
    }
  },
  {
    "path": "src/test/java/duke/command/EventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class EventCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_addEventTaskToTaskList() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new EventCommand(\"event return book /at 2020-07-29\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[E][ ] return book (at: Jul 29 2020)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidCommandNoDescription_throwsException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new EventCommand(\"event \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new EventCommand(\"event\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 32
    }
  },
  {
    "path": "src/test/java/duke/command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class FindCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validKeyword_printsTasksMatchingKeyword() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello cat\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"dog walk\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"dog dance\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        new FindCommand(\"find dog\").execute(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(\"1. [T][ ] dog walk\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"2. [T][ ] dog dance\\n\", outContent.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 44
    }
  },
  {
    "path": "src/test/java/duke/command/ListDateCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class ListDateCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validDate_printsCorrectTasks() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String dateString \u003d \"2019-02-03\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"sing\", LocalDate.parse(dateString)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"shower\", LocalDate.parse(\"2012-02-02\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"sleep\", LocalDate.parse(\"2019-02-04\")));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"talk\", LocalDate.parse(dateString)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"walk\", LocalDate.parse(dateString)));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        new ListDateCommand(\"date \" + dateString).execute(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(\"1. [D][ ] sing (by: Feb 3 2019)\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"2. [D][ ] talk (by: Feb 3 2019)\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"3. [D][ ] walk (by: Feb 3 2019)\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"\\n\", outContent.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 49
    }
  },
  {
    "path": "src/test/java/duke/command/TagCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class TagCommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_tagTaskFromTaskList() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new TagCommand(\"tag 1 balls\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new TagCommand(\"tag 1 dogs\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd1.execute(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd2.execute(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[T][ ] hello (tags: balls, dogs)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidIndex_throwsException() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new TagCommand(\"tag 0 \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            cmd1.execute(tasks)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new TagCommand(\"tag 3\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            cmd2.execute(tasks)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 39
    }
  },
  {
    "path": "src/test/java/duke/command/ToDoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class ToDoCommandTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_validCommand_addToDoTaskToTaskList() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd \u003d new ToDoCommand(\"todo return book\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        cmd.execute(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(tasks.get(1).toString(), \"[T][ ] return book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void execute_invalidCommandNoDescription_throwsException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd1 \u003d new ToDoCommand(\"todo \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd1.execute(tasks)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Command cmd2 \u003d new ToDoCommand(\"todo\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                cmd2.execute(tasks)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 32
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.command.CommandType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.util.IndexDescriptionPair;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskDescription_validCommand_returnDescription() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.getTaskDescription(CommandType.DEADLINE, \"deadline hello world\"), \"hello world\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(Parser.getTaskDescription(CommandType.DEADLINE, \"deadline hello world\"), \"rld\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskDescription_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Parser.getTaskDescription(CommandType.DEADLINE, \"deadlin hello world\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskTargetIndex_validCommand_returnIndex() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.getTaskTargetIndex(CommandType.DELETE, \"delete 100\"), 100);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.getTaskTargetIndex(CommandType.DELETE, \"delete 10\"), 10);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(Parser.getTaskTargetIndex(CommandType.DELETE, \"delete 9\"), 10);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskTargetIndex_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Parser.getTaskTargetIndex(CommandType.DELETE, \"del hello world\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskTargetIndexDescription_validCommand_returnIndexDescription() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.getTaskTargetIndexDescription(CommandType.TAG, \"tag 100 dogs\"),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            new IndexDescriptionPair(100, \"dogs\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.getTaskTargetIndexDescription(CommandType.TAG, \"tag 10 paper balls\"),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            new IndexDescriptionPair(10, \"paper balls\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(Parser.getTaskTargetIndexDescription(CommandType.TAG, \"tag 10 paper balls\"),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            new IndexDescriptionPair(20, \"paper balls\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getTaskTargetIndexDescription_invalidCommand_throwsException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Parser.getTaskTargetIndexDescription(CommandType.TAG, \"tag 1dance\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Parser.getTaskTargetIndexDescription(CommandType.TAG, \"tag 13 \")"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            Parser.getTaskTargetIndexDescription(CommandType.TAG, \"tag 13\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void parseDateString_validDate_returnLocalDate() throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(Parser.parseDateString(\"1966-04-02\"), LocalDate.parse(\"1966-04-02\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(Parser.parseDateString(\"1966-04-02\"), LocalDate.parse(\"1966-04-01\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void parseDateString_invalidDate_throwsException() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Parser.parseDateString(\"1966-04-\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void parseCommandString_validCommandString_doesNotThrowException() throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Parser.parseCommandString(\"deadline return book /by 2020-07-29\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void parseCommandString_invalidCommandString_throwsException() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Parser.parseCommandString(\"deadlin return book /by 2020-07-29\")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 91
    }
  },
  {
    "path": "src/test/java/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testWrite_shouldWriteToFile() throws DukeException, IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        final String fileName \u003d \"test.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        final String text \u003d \"test\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Storage storage \u003d Storage.create(fileName);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        storage.write(text);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        storage.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Path file \u003d Storage.DATA_DIR.resolve(fileName);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        String content \u003d Files.readString(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(content, text);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 28
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void size_intial_returnZero() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.size(), 0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void size_afterAddingOneItem_returnOne() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(new Task(\"some\", TaskType.TODO));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.size(), 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testAddAndRemove_validIndex_returnCorrectTasks() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task1 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task2 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task3 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task3);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.remove(1), task1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(taskList.remove(1), task1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.remove(1), task3);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testAddAndRemove_index0_throwsException() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                taskList.remove(0)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testAddAndRemove_indexOutOfRange_throwsException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                taskList.remove(100)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void get_afterAddTasks_returnCorrectTasks() throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task1 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task2 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task3 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task3);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.get(1), task1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertNotEquals(taskList.get(1), task2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(taskList.get(3), task3);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void iterator_afterAddTasks_returnTasksInCorrectOrder() throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task1 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task2 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task3 \u003d new Task(\"some\", TaskType.TODO);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        taskList.add(task3);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                assertEquals(taskList.get(i), task1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            } else if (i \u003d\u003d 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                assertEquals(taskList.get(i), task2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            } else if (i \u003d\u003d 3) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                assertEquals(taskList.get(i), task3);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therizhao"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 92
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.tag.Tag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.name \u003d \"test\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        this.date \u003d LocalDate.parse(\"1900-01-02\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getDate_datePresent_returnDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(new Task(name, type, date).getDate().get(), date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getDate_dateEmpty_returnEmpty() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(new Task(name, type).getDate(), Optional.empty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testToString_withoutTags() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(new Task(name, type).toString(), \"[T][ ] test\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void testToString_withTags() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(name, type);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.addTag(new Tag(\"sign\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.addTag(new Tag(\"dogs\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(task.toString(), \"[T][ ] test (tags: sign, dogs)\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void setDone_done_showDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(name, type);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(task.toString(), \"[T][x] test\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void setDone_notDone_showNotDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        Task task \u003d new Task(name, type);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        task.setDone(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals(task.toString(), \"[T][ ] test\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 64
    }
  },
  {
    "path": "src/test/java/duke/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getListString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hi\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"hello\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new ToDo(\"how\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Ui.getListString(tasks), \"1. [T][ ] hi\\n\" + \"2. [T][ ] hello\\n\" + \"3. [T][ ] how\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    void getListDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"hi\", LocalDate.parse(\"1900-05-10\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Event(\"hi\", LocalDate.parse(\"1900-05-10\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        tasks.add(new Deadline(\"hi\", LocalDate.parse(\"2010-05-10\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therizhao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therizhao"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                Ui.getListDate(tasks, LocalDate.parse(\"1900-05-10\")),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therizhao"
        },
        "content": "                \"1. [D][ ] hi (by: May 10 1900)\\n\" + \"2. [E][ ] hi (at: May 10 1900)\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therizhao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therizhao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therizhao": 36
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therizhao"
        },
        "content": "todo buy book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event sky jumping /at Sat 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event funny  Sat 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event funny /at 2019-05-32"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event funny /at 2019-05-25"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline la la meeting  Sat 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline return book /by 2020-07-29"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline return book /by 2020-07-100"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therizhao"
        },
        "content": "deadline funny /by 2019-05-25"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therizhao"
        },
        "content": "todo team bundling"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therizhao"
        },
        "content": "todo eat chicken nuggets"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therizhao"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therizhao"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "event sing song /at Fri 2pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therizhao"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therizhao"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therizhao"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therizhao"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therizhao"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "date 2019-05-25"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therizhao"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "therizhao": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therizhao"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Main.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therizhao"
        },
        "content": "java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "therizhao": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therizhao"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Main.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therizhao"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "therizhao": 2
    }
  }
]
