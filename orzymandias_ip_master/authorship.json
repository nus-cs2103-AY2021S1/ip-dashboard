[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    mainClassName \u003d \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 17,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "# Intrubot User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "## What is Intrubot"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Intrubot is a **desktop based chat application** for keeping track of your tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "You can interact via a Command Line Interface view responses via a Graphical"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "User Interface (GUI)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "- [Getting Started](#getting-started)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "- [About Intrubot\u0027s Features](#features)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [Add tasks](#add-tasks)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [List items](#list-items)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [Find items](#find-items)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [Mark tasks](#mark-tasks)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [Clear items](#clear-items)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [No Duplicates](#no-duplicates)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [Add Trivia](#add-trivia)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [Exit](#exit)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "- [Usage](#usage)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [todo](#todo)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [deadline](#deadline)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [event](#event)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [trivia](#trivia)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [list](#list)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [clear](#clear)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [find](#find)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [done](#done)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [delete](#delete)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    - [bye](#bye)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "## Getting Started "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Download the latest `.jar` from [here](https://github.com/orzymandias/ip/releases/tag/A-Release)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Windows OS:Double-click the file to start the app."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* MacOS/*nix: Navigate to directory containing jar file and run `java -jar duke.jar`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "![Intrubot_Screenshot](Ui.png)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "#### Add Tasks "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Save 3 kinds of tasks to your task list: todo, deadline, event. "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "#### Add trivia"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Learnt a fun fact? Save the question and answer to Intrubot."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "#### List Items "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Lists all the tasks and trivia you have saved."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "#### Find Items "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Search for tasks and trivia in your list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "#### Mark Tasks "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Mark tasks as done when you have completed them."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "#### Clear Items"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Want to start on a fresh slate? Intrubot can clear all your items in your list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "#### No Duplicates"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Ensure you never save redundant tasks with a friendly reminder "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "when you try to add a task that already exists."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "#### Exit"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "* Done using Intrubot? Simply exit! Your data will be waiting for you when you come back."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `todo` "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Adds a todo to the task list. Todos only have a description and status."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`todo buy watermelons`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    [T][✘] work"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `deadline` "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Adds a deadline to the task list. Deadlines store a description, completion status and date of the deadline."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`deadline submit homework /by 2020-11-27`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    [D][✘] submit homework (by:Nov 27 2020) "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Now you have 6 tasks in the list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `event` "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Adds a event to the list. Events store a description, completion status and date of the event."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`event \u003cdescription\u003e /at \u003cYYYY-MM-DD\u003e`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`event flight to korea /at 2020-06-17`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    [E][✘] flight to korea (at:Jun 17 2020) "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `trivia` "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Adds a trivia to the list. Trivia contains a question and an answer."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`trivia \u003cquestion\u003e /ans \u003cans\u003e`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`trivia how many legs does a ladybug have /ans 6 legs`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Got it. I\u0027ve added this trivia:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    [Q] how many legs does a ladybug have"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    [A] 6 legs"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Now you have 4 items in the list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `list` "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "List all the item stored to intrubot."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "1. [D][✘] do homework (by: Dec 12 2020)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "2. [D][✘] submit homework (by: Nov 27 2020)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "3. [E][✘] flight to korea (at: Jun 17 2020)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `clear` "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "clear all the item stored to intrubot."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`clear`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Task list cleared"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `find` "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Find items in the list with matching description."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`find \u003cString\u003e`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`find to`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "HAI. Here are matching tasks:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "1. [E][✘] flight to korea (at: Jun 17 2020)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "2. [T][✓] go to supermarket"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `done` "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Marks a tasks as complete by specifying its index."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "[D][✓] do homework (by: Dec 12 2020)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `delete` "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Delete an item by specifying its index."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "HAI. I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    [D][✓] do homework (by: Dec 12 2020)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Now you have 3 tasks in the list)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "### `bye` "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Quit using intrubot."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "SAYONARA!"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "```"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "Good bye message is shown and program will close."
      }
    ],
    "authorContributionMap": {
      "orzymandias": 211,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 60
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /** File path for storage object to write to. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private TaskList taskItems;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Instantiates Duke Object which initializes variables needed throughout program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            taskItems \u003d new TaskList(storage.loadTasksFromMemory());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            taskItems \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Greets the user upon execution of duke process."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Reads User input and execute appropriate command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.out.println(ui.greetUser());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                System.out.println(ui.formatReply(c.execute(taskItems, ui, storage)));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } catch (DukeException duked) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                System.out.println(ui.formatReply(ui.showError(duked.getMessage())));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns responses after parsing user commands."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return command.execute(taskItems, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /** * Executes the Duke process."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param args command line argument it is a collection of variables in the string format."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 62
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the Exception object which would be thrown throughout the process of running Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 10
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static final String MAINWINDOW_FXML_PATH \u003d \"/view/MainWindow.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static final String CSS_FILE_PATH \u003d \"/view/main.css\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static final String BOT_NAME \u003d \"INTRUBOT\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(MAINWINDOW_FXML_PATH));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            scene.getStylesheets().add(CSS_FILE_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            stage.setTitle(BOT_NAME);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.concurrent.CompletableFuture;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static final String GREETING_MESSAGE \u003d \"Greetings! I am Intrubot! \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"Here are some commands to get started: \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"Adding Items: \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  todo \u003cdescription\u003e \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  event \u003cdescription\u003e /at \u003cYYYY-MM-DD\u003e \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  trivia \u003cquestion\u003e /ans \u003cans\u003e \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"Manipulating Items: \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  delete \u003cindex\u003e \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  done \u003cindex\u003e \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  clear \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"Querying Items: \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  list \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  find \u003cquery\u003e \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"Exit: \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        + \"  bye\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/john.png\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cicero.png\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initialises the dialogContainer, initial greeting message from Duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        dialogContainer.prefWidthProperty().bind(scrollPane.widthProperty().add(-15));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        dialogContainer.prefHeightProperty().bind(scrollPane.heightProperty());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                DialogBox.getDukeDialog(GREETING_MESSAGE, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            response \u003d Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        );"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        CompletableFuture.runAsync(() -\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    Thread.sleep(1000);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                Thread.currentThread().interrupt();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                System.exit(1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "orzymandias": 95
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.TriviaCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Trivia;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents Parser Object which parses user reply and execute appropriate response."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    // check if user input contains a single word"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static boolean checkIfSingleWordReply(String[] commandAndArguments) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int SINGLE_WORD_LENGTH \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return commandAndArguments.length \u003d\u003d SINGLE_WORD_LENGTH;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Parses user input and returns appropriate Command Object for execution in Duke class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user message input into Intrubot."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return Command to be executed by Duke class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws DukeException if invalid command or arguments specified."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static Command parse(String reply) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String[] commandAndArguments \u003d reply.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int COMMAND_INDEX \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String command \u003d commandAndArguments[COMMAND_INDEX];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        boolean isSingleWordCommand \u003d checkIfSingleWordReply(commandAndArguments);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (isSingleWordCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            case \"clear\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                return new ClearCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        String.format(\"Invalid Command Exception: %s is not a valid single word command.\", command));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } else if (!isSingleWordCommand) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"trivia\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    Task newTrivia \u003d parseTriviaArguments(reply);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new TriviaCommand(newTrivia);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    int indexOfTaskToMarkDone \u003d parsedDoneArguments(reply);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new DoneCommand(indexOfTaskToMarkDone);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    int indexOfTaskToDelete \u003d parsedDeleteArguments(reply);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new DeleteCommand(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String searchQuery \u003d parseFindArguments(reply);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new FindCommand(searchQuery);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    Task newTodo \u003d parseTodoArguments(reply);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new ToDoCommand(newTodo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    Task newDeadline \u003d parseDeadlineArguments(reply);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new DeadlineCommand(newDeadline);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    Task newEvent \u003d parseEventArguments(reply);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new EventCommand(newEvent);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    throw new DukeException("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            String.format(\"Invalid Command Exception: %s is not a valid command.\", command));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                throw new DukeException(String.format("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"Time format has to be in the form: YYYY-MM-DD %s\", e.getMessage()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                throw new DukeException(String.format(\"Invalid arguments specified for %s\", command));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Unexpected number of Commands\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * parse done command arguments for item index to mark done."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user reply inclusive or arguments."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return int of item index to mark done."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static int parsedDoneArguments(String reply) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return Integer.parseInt(reply.split(\" \")[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * parse delete command arguments for item index to delete."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user reply inclusive or arguments."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return int of item index to delete."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static int parsedDeleteArguments(String reply) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return Integer.parseInt(reply.split(\" \")[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * parse find command arguments for user search query."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user reply inclusive or arguments."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return string of user search query."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static String parseFindArguments(String reply) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int ARG_POSITION \u003d 5;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return reply.substring(ARG_POSITION);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Parse event command arguments to create Todo object."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user reply inclusive or arguments."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return New Todo object based on command arguments."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static Task parseTriviaArguments(String reply) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int ARG_POSITION \u003d 7;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String[] questionAndAnswerArray \u003d reply.split(\" /ans \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String question \u003d questionAndAnswerArray[0].substring(ARG_POSITION);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String answer \u003d questionAndAnswerArray[1];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Task newTrivia \u003d new Trivia(question, answer);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return newTrivia;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Parse event command arguments to create Todo object."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user reply inclusive or arguments."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return New Todo object based on command arguments."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static Task parseTodoArguments(String reply) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int ARG_POSITION \u003d 5;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Task newTodo \u003d new ToDo(reply.substring(ARG_POSITION));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return newTodo;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Parse deadline command arguments to create deadline object."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user reply inclusive or arguments."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return New deadline object based on command arguments."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static Task parseDeadlineArguments(String reply) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int ARG_POSITION \u003d 9;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String[] taskAndTimeByArray \u003d reply.split(\" /by \");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String deadlineDescription \u003d taskAndTimeByArray[0].substring(ARG_POSITION);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String deadlineTiming \u003d taskAndTimeByArray[1];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Task newDeadline \u003d new Deadline(deadlineDescription, LocalDate.parse(deadlineTiming));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return newDeadline;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Parse event command arguments to create event object."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user reply inclusive or arguments."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return New event object based on command arguments."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static Task parseEventArguments(String reply) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int ARG_POSITION \u003d 6;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String[] taskAndTimeAtArray \u003d reply.split(\" /at \");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String eventDescription \u003d taskAndTimeAtArray[0].substring(ARG_POSITION);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String eventTiming \u003d taskAndTimeAtArray[1];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Task newEvent \u003d new Event(eventDescription, LocalDate.parse(eventTiming));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return newEvent;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 183
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Trivia;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the Storage Object containing logic to writing and storing task list to memory."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes Storage object to be used for saving and loading task list throughout Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param filePath specified file for Storage object to read from and write to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Handles logic where ./data or duke.txt does not exists by creating them."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param savedTasks File Object for loading and saving tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws IOException if File object cannot create new file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private void handleFileOrDirectoryDoesNotExist(File savedTasks) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        // create ./data directory if it does not exist"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        savedTasks.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        // create duke.txt in ./data directory if it does not exist"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        savedTasks.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Saves tasks list to memory."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems tasks list to be saved to memory."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws DukeException if task cannot be written to memory if file created in path."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void saveTaskToMemory(List\u003cTask\u003e taskItems) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        File savedTasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (!savedTasks.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                handleFileOrDirectoryDoesNotExist(savedTasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // Once file path exists, instantiate FileWriter Object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            String tasksToWriteToMemory \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            for (Task task: taskItems) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    tasksToWriteToMemory +\u003d String.format(\"T,%d,%s\\n\", task.getIsDone() ? 1 : 0, task.getDescription());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    tasksToWriteToMemory +\u003d String.format(\"D,%d,%s,%s\\n\", task.getIsDone() ? 1 : 0,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                                                task.getDescription(), ((Deadline) task).getByWhen());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    tasksToWriteToMemory +\u003d String.format(\"E,%d,%s,%s\\n\", task.getIsDone() ? 1 : 0,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                                                task.getDescription(), ((Event) task).getAtWhen());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else if (task instanceof Trivia) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    tasksToWriteToMemory +\u003d String.format(\"Q,%s,%s\\n\", ((Trivia) task).getTriviaQuestion(), ("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                                                (Trivia) task).getTriviaAnswer());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    throw new DukeException(\"Cannot save invalid task type\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fw.write(tasksToWriteToMemory);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(String.format(\"task cannot be saved to memory %s\", exception.getMessage()));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Loads Tasks array from memory, else returns an empty array."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return List Object containing tasks loaded from memory."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public List\u003cTask\u003e loadTasksFromMemory() throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            File savedTasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // file or directory does not exists, make parent directory and file"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (!savedTasks.exists()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                handleFileOrDirectoryDoesNotExist(savedTasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                return loadedTasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // read and return from saved file"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Scanner sc \u003d new Scanner(savedTasks);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                final int TASK_TYPE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                final int TASK_COMPLETION_INDEX \u003d 1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                final int TASK_DESCRIPTION_INDEX \u003d 2;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                final int TASK_TIMING_INDEX \u003d 3;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                Task taskToLoad;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String taskFromMemory \u003d sc.nextLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                // parse task string for its attributes"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String[] taskAttributes \u003d taskFromMemory.split(\",\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                assert taskAttributes.length \u003e\u003d 3 : \"items retrieved must have type and 2 other attributes\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                // Extract task attributes."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String taskType \u003d taskAttributes[TASK_TYPE_INDEX];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                if (taskType.equals(\"Q\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    final int TRIVIA_QUESTION_INDEX \u003d 1;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    final int TRIVIA_ANSWER_INDEX \u003d 2;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String question \u003d taskAttributes[TRIVIA_QUESTION_INDEX];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String answer \u003d taskAttributes[TRIVIA_ANSWER_INDEX];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    taskToLoad \u003d new Trivia(question, answer);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else if (taskType.matches(\"T|D|E\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    boolean isDone \u003d taskAttributes[TASK_COMPLETION_INDEX].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String description \u003d taskAttributes[TASK_DESCRIPTION_INDEX];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String time;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        taskToLoad \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        time \u003d taskAttributes[TASK_TIMING_INDEX];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        taskToLoad \u003d new Deadline(description, isDone, LocalDate.parse(time));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        time \u003d taskAttributes[TASK_TIMING_INDEX];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        taskToLoad \u003d new Event(description, isDone, LocalDate.parse(time));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        throw new DukeException(\"Task cannot be read from Duke.txt\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    throw new DukeException(\"Unknown task type in Duke.txt\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                loadedTasks.add(taskToLoad);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return loadedTasks;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(String.format(\"File cannot be loaded %s\", exception.getMessage()));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 148
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Representation of list of tasks added by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes task list object with an empty ArrayList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes task list object with specified Task List."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Adds tasks to task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task to be added to task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Remove task from task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param index index of task to be removed offset by -1 due to 1 indexed based list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return Task object which is removed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        // 1 index list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int OFFSET \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return taskList.remove(index - OFFSET);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Gets all the tasks in the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return List Object with all tasks in the TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public List\u003cTask\u003e getAll() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Get task from task list offset by one"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskIndex index of task to be retrieved."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return Task Object retrieved based on index."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int OFFSET \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return taskList.get(taskIndex - OFFSET);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Gets size of task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return number of items int taskList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Clears all tasks from taskList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String clearAll() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"Task list cleared\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * String representation of taskList."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String object representing taskList."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String formattedListString \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        final int OFFSET \u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            formattedListString +\u003d String.format(\"%d. %s\\n\", i + OFFSET, taskList.get(i));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return formattedListString;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns boolean indicating presence of duplicate taskA.s"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task task to check against if there are duplicates of."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return true if duplicates exists."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean findIfDuplicateExists(Task task) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return taskList.stream().anyMatch(taskItem -\u003e taskItem.checkIfDuplicate(task));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 111
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents Ui Components for user interaction and displaying messages."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Sends greeting message to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of greeting message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String greetUser() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String greetingLogo \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                \"8888888 888b    888 88888888888 8888888b.  888     888 888888b.    .d88888b. 88888888888 \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                + \"  888   8888b   888     888     888   Y88b 888     888 888  \\\"88b  d88P\\\" \\\"Y88b    888     \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                + \"  888   88888b  888     888     888    888 888     888 888  .88P  888     888    888     \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                + \"  888   888Y88b 888     888     888   d88P 888     888 8888888K.  888     888    888     \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                + \"  888   888 Y88b888     888     8888888P\\\"  888     888 888  \\\"Y88b 888     888    888     \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                + \"  888   888  Y88888     888     888 T88b   888     888 888    888 888     888    888     \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                + \"  888   888   Y8888     888     888  T88b  Y88b. .d88P 888   d88P Y88b. .d88P    888     \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                + \"8888888 888    Y888     888     888   T88b  \\\"Y88888P\\\"  8888888P\\\"   \\\"Y88888P\\\"     888\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"ITS ME: \\n\" + greetingLogo + \"\\nI want to know EVERYTHING ABOUT YOU\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Sends good bye message to user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String with good bye message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String sayGoodbye() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"SAYONARA!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Wraps message in partitioning for clearer readability."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply to be wrapped in partition."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of reply."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static String formatReply(String reply) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String partition \u003d \"__________________________\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(partition + \"\\n%s\\n\" + partition, reply);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Formats list object to be String representation."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems taskItems to be converted to appropriate String representation."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of taskItems."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static String listFormatter(List\u003cTask\u003e taskItems) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        StringBuilder formattedListString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        for (int i \u003d 0; i \u003c taskItems.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            formattedListString.append(String.format(\"%d. %s\\n\", i + 1, taskItems.get(i)));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return formattedListString.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task error message with a wrapper."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param errorMessage custom error message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static String showError(String errorMessage) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"Something is amiss `(OCO)/ !!: %s\", errorMessage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task done message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task which is mark complete."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of task done message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String doneTaskReply(Task task) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task added message."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task which is added."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String addTaskReply(Task task, TaskList taskItems) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n    %s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                task.toString(), taskItems.getSize());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task added message."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task which is added."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String addTriviaReply(Task task, TaskList taskItems) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this trivia:\\n    %s\\nNow you have %d items in the list\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                task.toString(), taskItems.getSize());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task deleted message."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task which is deleted."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of delete message"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String deleteTaskReply(Task task, TaskList taskItems) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"HAI. I\u0027ve deleted this task:\\n    %s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                task.toString(), taskItems.getSize());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task found message."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param matchingTasks list of matching tasks."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of delete message"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String findTaskReply(List\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"HAI. Here are matching tasks:\\n%s\", listFormatter(matchingTasks));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Reads user input in the command line."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of user input."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return SCANNER.nextLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 136
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the Command where user exits the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders good bye message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return ui.sayGoodbye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class to terminate programme."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return true to terminate program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return taskItems.clearAll();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 18
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the base command which all other command have to abide to."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Contains a series of logic for the execution of Command specified by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui ui component which user interacts with or sees."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public abstract String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to terminate or not terminate the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the command where user specifies adding deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DeadlineCommand extends ToDoCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Instantiates the DeadlineCommand Object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task Stores Deadline object associated with command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DeadlineCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Adds the task to task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders the Ui for feedback when user adds task successfully."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Saves task to storage across sessions."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if there is error saving task to storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return super.execute(taskItems, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the command object where user executes deletion of task from TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes the DeleteCommand Object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskIndex task to delete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Removes tasks from task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders delete message upon successful deletion."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Updates local storage with updated task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if task number specified by user does not exist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            assert taskIndex \u003c\u003d taskItems.getSize() : \"Cannot remove from index larger than taskItems length\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Task task \u003d taskItems.removeTask(taskIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            storage.saveTaskToMemory(taskItems.getAll());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return ui.deleteTaskReply(task, taskItems);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Cannot delete task that does not exist\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to not terminate the program."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 55
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the done command when user wants to mark task as complete from task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes the DoneCommand Object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskIndex task to mark as complete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Sets task status to complete."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders task complete message upon successful update."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Updates local storage with updated task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if task number specified by user does not exist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Task task \u003d taskItems.getTask(taskIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            storage.saveTaskToMemory(taskItems.getAll());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return ui.doneTaskReply(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Task number does not exist\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to not terminate the program."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 54
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the command where user specifies adding Event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class EventCommand extends ToDoCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Instantiates the Event Object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task Stores Event object associated with command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public EventCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Adds the task to task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders the Ui for feedback when user adds task successfully."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Saves task to storage across sessions."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if there is error saving task to storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return super.execute(taskItems, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 36
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private String arg;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public FindCommand(String arg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        List\u003cTask\u003e tasksItems \u003d taskItems.getAll();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        for (Task task: tasksItems) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (task.getDescription().contains(arg)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return ui.findTaskReply(matchingTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the list command when user wants to list all task in TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders view of all tasks in task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if task number specified by user does not exist."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return ui.listFormatter(taskItems.getAll());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to not terminate the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the ToDo Command when user adds tasks to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /** Stores ToDo associated with ToDoCommand. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initialzes TodoCommand Object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task ToDo associated with Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDoCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Adds the task to task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders the Ui for feedback when user adds task successfully."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Saves task to storage across sessions."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if there is error saving task to storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        boolean hasDuplicates \u003d taskItems.findIfDuplicateExists(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (hasDuplicates) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Duplicate Task Added\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        taskItems.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        storage.saveTaskToMemory(taskItems.getAll());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return ui.addTaskReply(task, taskItems);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to not terminate the program."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "orzymandias": 55
    }
  },
  {
    "path": "src/main/java/duke/command/TriviaCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class TriviaCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /** Stores Trivia associated with this command. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initialzes Trivia Command Object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param trivia trivia associated with Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public TriviaCommand(Task trivia) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        task \u003d trivia;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Contains a series of logic for the execution of Command specified by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        boolean hasDuplicates \u003d taskItems.findIfDuplicateExists(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (hasDuplicates) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Duplicate Trivia Added\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        taskItems.addTask(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        storage.saveTaskToMemory(taskItems.getAll());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return ui.addTriviaReply(task, taskItems);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to terminate or not terminate the program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 51
    }
  },
  {
    "path": "src/main/java/duke/stubs/ToDoStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ToDoStub extends ToDo {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDoStub(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes Deadline object that has not completed task by default."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param by Date that task has to finished by."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes Deadline object with specified task completion status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param by Date that task has to finished by."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public LocalDate getByWhen() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean checkIfDuplicate(Task otherTask) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (otherTask instanceof Deadline) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // share same description and timing"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return super.checkIfDuplicate(otherTask) \u0026\u0026 by.equals(((Deadline) otherTask).getByWhen());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String formattedTimeBy \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"[D]\" + super.toString() + \" (by: %s)\", formattedTimeBy);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initiate Event object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param description description of event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param at time which event takes place."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initiate Event object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param description description of event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param isDone specifies if event is completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param time which event takes place."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.at \u003d time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public LocalDate getAtWhen() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean checkIfDuplicate(Task otherTask) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (otherTask instanceof Event) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // share same description and timing"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return super.checkIfDuplicate(otherTask) \u0026\u0026 at.equals(((Event) otherTask).getAtWhen());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String formattedTimeAt \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"[E]\" + super.toString() + \" (at: %s)\", formattedTimeAt);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Instantiate Task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Instantiate Task object with completion status specified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param isDone indicates whether task is completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void markDone() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean getIsDone() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean checkIfDuplicate(Task otherTask) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return description.equals(otherTask.getDescription());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "orzymandias": 55
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (super.equals(obj) || obj instanceof ToDo) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            ToDo todoObj \u003d (ToDo) obj;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return todoObj.isDone \u003d\u003d this.isDone \u0026\u0026 todoObj.description.equals(this.description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Trivia.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Trivia extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private String triviaQuestion;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private String triviaAnswer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initiate Trivia object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param triviaQuestion trivia question."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param triviaAnswer answer to the trivia question."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Trivia(String triviaQuestion, String triviaAnswer) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(triviaQuestion + triviaAnswer);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.triviaQuestion \u003d triviaQuestion;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.triviaAnswer \u003d triviaAnswer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String getTriviaQuestion() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.triviaQuestion;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String getTriviaAnswer() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.triviaAnswer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void markDone() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        throw new DukeException(\"Cannot mark trivia as done\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean getIsDone() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        throw new DukeException(\"Cannot mark trivia as done\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean checkIfDuplicate(Task otherTask) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (otherTask instanceof Trivia) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return super.checkIfDuplicate(otherTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"[Q] %s\\n    [A] %s\", this.triviaQuestion, this.triviaAnswer);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 51
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            maxWidth\u003d\"-Infinity\" "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            minHeight\u003d\"-Infinity\" "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            minWidth\u003d\"-Infinity\" "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            prefHeight\u003d\"600.0\" "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            prefWidth\u003d\"400.0\" "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\" "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\" "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"77\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.topAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            \u003ccontent \u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" AnchorPane.rightAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 27
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.stubs.ToDoStub;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void testLoadFileFromMemory_todoStub_success() throws DukeException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        // clear file from previous session if it exists"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Files.delete(Paths.get(Duke.FILE_PATH));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (NoSuchFileException exception) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            System.out.println(\"File path does not originally exist\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Storage store \u003d new Storage(Duke.FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            List\u003cTask\u003e expected \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            expected.add(new ToDoStub(\"test description\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            store.saveTaskToMemory(expected);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            store.saveTaskToMemory(expected);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            List\u003cTask\u003e actual \u003d store.loadTasksFromMemory();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (expected.size() \u003d\u003d actual.size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                for (int i \u003d 0; i \u003c expected.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    // compare if expected equals to Task retrieved from memory"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    assertEquals(true, expected.get(i).equals(actual.get(i)));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 41
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void testTaskMarkDone_success() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Task task \u003d new Task(\"description\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        assertEquals(task.getIsDone(), true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void testCreateCompletedTask_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Task task \u003d new Task(\"do homework\", true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        assertEquals(\"[\\u2713] do homework\", task.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void testCreateTask_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Task task \u003d new Task(\"do homework\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        assertEquals(\"[\\u2718] do homework\", task.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 27
    }
  },
  {
    "path": "src/test/java/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Tests Ui output."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void greetingMessage_messageSuccess() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        assertEquals(\"SAYONARA!\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                     ui.sayGoodbye());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "deadline return book /by 2020-12-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "deadline return book /by 2020-12-02"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "event project meeting /at 2012-11-03"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "find book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "sayonara"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "bye"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "event project meeting /at 2012-11-4"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 3,
      "-": 19
    }
  }
]
