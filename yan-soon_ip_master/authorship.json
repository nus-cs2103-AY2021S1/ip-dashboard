[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "clean {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    delete \u0027tasks\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "yan-soon": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[D][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import jdk.swing.interop.SwingInterOpUtils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.sql.SQLOutput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Duke implements Serializable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Starts up the bot by calling the Parser class and its methods"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void run() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        System.out.println(\"Hello I\u0027m Greg!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        System.out.println(\"How may I be of service today?\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        parser.commandParser(tasks, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Creates a new Duke Instance and calls upon the run method to start up the bot."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        new Duke(\"tasks\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "   "
      }
    ],
    "authorContributionMap": {
      "yan-soon": 54,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    String s;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.s \u003d s;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Handles various exceptions for the bot and returns messages accordingly"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return Refer to various messages at the bottom"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        if (this.s.equals(\"\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter your command.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description of your todo with the command.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description and timing of the deadline with the command.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"event\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the description and timing of the event with the command.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"The list is currently empty, add items with the todo, deadline or event command.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the number position of the item that you wish to delete.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"delete2\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"That item has already been deleted or it does not exist.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter the number position of the item that you wish to mark done.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else if (this.s.equals(\"find\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Please enter what you wish to find along with the find command.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return \"Sorry I do not understand that command.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 37
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Events extends Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Events(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[E][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (at:\" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 26
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    Parser() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Helps to parse commands from the scanner, that tells the bot what actions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * to take"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param store"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void commandParser(TaskList list, Storage store ) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        ArrayList\u003cTask\u003e storage \u003d list.getTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        Scanner scan1 \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        while (scan1.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            String command \u003d scan1.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (list.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    for (Task item : storage ) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        int position \u003d storage.indexOf(item) + 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(position + \".\" + item);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        int number \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        Task current \u003d storage.get(number - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        current.setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        store.save(storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(current.getStatusIcon() + \" \" + current.getDescription());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(\"delete2\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String desc \u003d command.split(\" \")[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    Todo todo \u003d new Todo(desc);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    store.save(storage, todo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int size \u003d storage.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"  \" + todo);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String desc \u003d command.split(\"/by \")[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String[] string \u003d command.split(\"/by \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (string.length \u003c 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    Deadline deadline \u003d new Deadline(string[0], string[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    store.save(storage, deadline);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int size \u003d storage.size();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"  \" + deadline);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String desc \u003d command.split(\"/at \")[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String[] string \u003d command.split(\"/at \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (string.length \u003c 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    Events event \u003d new Events(string[0], string[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    store.save(storage, event);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int size \u003d storage.size();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"  \" + event);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String bye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    System.out.println(bye);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    scan1.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        int number \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        Task task \u003d storage.get(number - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        storage.remove(number - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        store.save(storage);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        int size \u003d storage.size();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(\"delete2\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String[] desc \u003d command.split(\"find\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    if (desc.length \u003c 2) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        throw new DukeException(command);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    String keyword \u003d command.split(\" \")[1];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    int count \u003d 1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    for (Task item : storage) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        if (item.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                            System.out.println(count + \".\" + item);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                            count++;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 139
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    String filepath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Loads up an ArrayList\u003cTask\u003e from an existing filepath"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Returns an empty ArrayList\u003cTask\u003e if the file does not exist"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return the specified ArrayList or an empty one"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filepath));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        ) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "             return (ArrayList\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        catch (EOFException | FileNotFoundException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            System.out.println(\"An error has occurred\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Takes a task and an ArrayList\u003cTask\u003e as arguments and stores the task into"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * that particular ArrayList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list, Task task) throws FileNotFoundException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try (FileOutputStream tasks \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "             ObjectOutputStream oos \u003d new ObjectOutputStream(tasks)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            oos.writeObject(list);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        try (FileOutputStream tasks \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "             ObjectOutputStream oos \u003d new ObjectOutputStream(tasks)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            oos.writeObject(list);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 57
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Returns the status icon of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return returns a tick or a cross, to indicate the status of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Returns the description of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return Description of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Returns a true or false, to indicate if the task has been done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return Whether the task has been done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Sets the status of a task to \"Done\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 44
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Retrieves the ArrayList\u003cTask\u003e attribute"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * @return returns the TaskList\u0027s ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Todo extends Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 13
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        return \"Duke is facing some loading issues, please try again later!\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 5
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    Task task \u003d new Task(\"return book\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Tests the getDescription method from the Task Class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        assertEquals(\"return book\", task.getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     * Tests the testIsDone method from the Task Class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    public void testIsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "        assertEquals(false, task.isDone());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "event soccer match /at tomorrow"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yan-soon": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "    pause"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yan-soon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yan-soon"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "yan-soon": 6
    }
  }
]
