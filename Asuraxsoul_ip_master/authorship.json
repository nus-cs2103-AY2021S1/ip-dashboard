[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    archiveBaseName \u003d \"Duke_shadowJar\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 16,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "[T][1] Watch anime"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "[E][0] CS2100 Assignment 1 (at: Sep 16 2020)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "[D][0] CS2103T Week 6 ip (by: Sep 17 2020)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "[T][1] Get parcel from ninjavan"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "# Individual Project DUKE"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Overview "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "DUKE is an interactive chat bot that not only has the function of user interaction, "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "but also the function of helping users keep a list of different types of tasks "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "(namely todos, events, deadlines). "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "- Users are able to create tasks `todo, event, deadline`."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "- Users are able to filter task list `find, reminder`."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "- Users are also able to manipulate the tasks `done, delete`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Feature 1: Greetings"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Upon initiating this program, the chat bot prints its unique introductory greeting to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "welcome the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 1: Upon running the program"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e Prints a greeting message whenever the Duke program starts."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "- Start the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     _______________________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      ***Welcome to Project DUKE***"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      CS2103T Individual Project"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      What can I do for you?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     _______________________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Feature 2: Task Creation"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "The task creation commands is followed by a space character and then the "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "description to the task. This adds a task to the list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 1: Creates a todo task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e The todo task only requires `todo` command and description."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "A not yet done todo task is created."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`todo return book`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [T][✘] return book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 2: Creates a event task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e The event task only requires `event` command, `/at` command, description and"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "a date formatted to `YYYY-MM-DD`. A not yet done event task is created."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`event return storybook /at 2020-06-16`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [E][✘] return storybook (at: Jun 6 2020)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 3: Creates a deadline task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e The deadline task only requires `deadline` command, `/by` command, description "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "and a date formatted to `YYYY-MM-DD`. A not yet done deadline task is created."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`deadline finish CS2103T project /by 2020-07-07`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [D][✘] finish CS2103T project (by: Jul 7 2020)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Feature 3: List Manipulation"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "The list manipulation command changes the list of tasks displayed to the "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "user."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 1: Displays all current tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e This function only requires `list` command. Displays all tasks read currently."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Here are the task(s) in your list:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     1.[T][✘] return book"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     2.[E][✓] return storybook (at: Jun 16 2020)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 2: Find all current tasks with matching word"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e This function requires `find` command and a keyword. "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "It is also caps sensitive."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`find Assignment`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Here are the matching task(s) in your list:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     1.[E][✘] CS2100 Assignment 1 (at: Sep 16 2020)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 3: Reminders to upcoming tasks to complete"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e Displays a list of incomplete tasks that are required to be completed in 3 "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "days including the day today. Incomplete Todo tasks are all displayed."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "- Start the program."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "- On press \"My Reminder\" button at the top of the Duke program."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "**IF** *There are tasks to be completed:*"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     ***Reminder:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Here are the tasks to be completed within 3 days:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     1.[E][✘] CS2100 Assignment 1 (at: Sep 16 2020)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     2.[D][✘] CS2103T Week 6 ip (by: Sep 17 2020)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "**ELSE** *There are no tasks to be completed:*"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     ***Reminder:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     There are no urgent tasks to be completed."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     You can take a break! :)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Feature 4: Task Manipulation"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "The task manipulation command changes the tasks\u0027 states within the list of "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "data."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 1: Marks the specific task as done"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e This function only requires `done` command and task index. Finds the task"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "with the index number specified by user and marks the task as done."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [E][✓] return storybook (at: Jun 6 2020)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 2: Deletes the specific task"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e This function only requires `delete` command and task index."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "       [D][✘] finish CS2103T project (by: Jul 7 2020)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "   "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "## Feature 5: System Automation"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "There are inbuilt functions which allows users to load, save and exit their "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "program with more convenience."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 1: Closing of Program"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e This function only requires `bye` command. Duke prints a goodbye message and"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "then closes the Duke program for the user in 2 seconds."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Usage example:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     See you again!"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    _______________________________________________________________________"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "*The Duke program then proceeds to close in 2 seconds*."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "   "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 2: Loading of data"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e Loads the data from a data file in `duke.txt` format upon starting the Duke"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "program. If the file does not exists in the user directory, a new `duke.txt` "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "file will be created."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "### Usage 3: Saving of data"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003e Data will automatically be saved to the `duke.txt` data file every time user "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "inputs a new command."
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 183,
      "-": 16
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private final static int TIMEOUT \u003d 2;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"See you again!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void closeProgram() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Thread t1 \u003d new Thread(() -\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                TimeUnit.SECONDS.sleep(TIMEOUT);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                MainWindow.closeWindow();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (InterruptedException ie) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                System.out.println(\"Unable to sleep\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        t1.start();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        closeProgram();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 30
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String dukeMessage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected Command(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        dukeMessage \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected void appendDukeMessage(String extraMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        dukeMessage \u003d dukeMessage + extraMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return dukeMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Deadline task which is a subclass of Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private final static String DATE_FORMAT \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private LocalDate timeDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String formattedTimeDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file writing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param timeDescription is the LocalDate input representing date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Deadline(String description, LocalDate timeDescription) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, Task.DEADLINE_TASK);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.formattedTimeDescription \u003d this.timeDescription.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file reading."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param formattedTimeDescription is the LocalDate input representing date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param isDone states if the Deadline object is completed or not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Deadline(String description, String formattedTimeDescription, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, Task.DEADLINE_TASK, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.formattedTimeDescription \u003d formattedTimeDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the String description of the completion time of Deadline object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getFormattedTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.formattedTimeDescription;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a String representation of Deadline object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Deadline object description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + getDescription()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"(by: \" + getFormattedTime() + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 58
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList taskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public DeadlineCommand(String userInput, TaskList taskManager) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.taskManager \u003d taskManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int length \u003d userInput.trim().length();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int timePrefix \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (length \u003d\u003d 9) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.NO_DESCRIPTION);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (timePrefix \u003c 0 || timePrefix + 4 \u003e\u003d length) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.INVALID_DEADLINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            LocalDate date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String dateString \u003d userInput.substring(timePrefix + 4, length);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(ExceptionCommand.INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(userInput.substring(9, timePrefix), date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.taskManager.store(newDeadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\n  \" + newDeadline"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\nNow you have \" + this.taskManager.getTaskNum() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 44
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList taskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public DeleteCommand(String userInput, TaskList taskManager) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.taskManager \u003d taskManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int length \u003d userInput.length();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String index \u003d userInput.substring(7, length);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int realIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (realIndex \u003e\u003d this.taskManager.getTaskNum() || realIndex \u003c 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.INVALID_INDEX);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            assert this.taskManager.getTaskNum() \u003e\u003d realIndex + 1 : \"There should be a task in task list to mark delete\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task taskSubject \u003d this.taskManager.remove(realIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"Noted. I\u0027ve removed this task:\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\n  \" + taskSubject"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\nNow you have \" + this.taskManager.getTaskNum() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 30
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a DialogBox for GUI conversation between user and Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param img Image to add in DialogBox."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param text to display text in DialogBox."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Uses a factory method to create DialogBox objects"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Uses a factory method to create flipped DialogBox objects"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 73
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList taskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public DoneCommand(String string, TaskList taskManager) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        userInput \u003d string;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.taskManager \u003d taskManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int length \u003d userInput.length();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String index \u003d userInput.substring(5, length);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int realIndex \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (realIndex \u003e\u003d this.taskManager.getTaskNum() || realIndex \u003c 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.INVALID_INDEX);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            assert this.taskManager.getTaskNum() \u003e\u003d realIndex + 1 : \"There should be a task in task list to mark done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task taskSubject \u003d this.taskManager.markDone(realIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"  \" + taskSubject);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Duke object that acts like a program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Contains the main method."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private boolean isFileLoaded;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is to start the Duke program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Variable filepath is directory to the duke.txt file where reading and writing of the file occurs."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Initialises Ui, Storage classes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Sets isLoadingSuccess to true, assuming no errors."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Loads the file contents."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Path path \u003d Paths.get(home, \"Desktop\", \"CS2103T\", \"ip\", \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        filepath \u003d path.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        isFileLoaded \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        storage.loadFileContent();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        List\u003cTask\u003e fileTasks \u003d storage.getSavedTasks();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        tasks \u003d new TaskList(fileTasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        isFileLoaded \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Retrieves the file loading status"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return boolean that states whether file is successfully loaded into Duke program or not."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public boolean getFileLoadedStatus() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return isFileLoaded;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Gets reminders from user\u0027s file data."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Passes reminders to MainWindow to display as text."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return String representation of reminders of unfinished/urgent tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getReminder() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return tasks.getUrgentTasks();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns response from Duke based on user input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param input represents user input in String format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return String represents Duke\u0027s output in String format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            output \u003d parser.parseUserInput(input);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                storage.writeToFile(tasks.getTasks());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                output \u003d ui.displayUpdateFileError(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            output \u003d e.toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 88,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a DukeException object which is a subclass of java Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * For printing of Duke program related error messages."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a DukeException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is used for Duke error printing."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param message is the description of the Duke errors."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Prints out DukeException object in String format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a string representation of DukeException object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 28
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents an Event task which is a subclass of Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private final static String DATE_FORMAT \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private LocalDate timeDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String formattedTimeDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates an Event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file writing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param timeDescription is the LocalDate input representing date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Event(String description, LocalDate timeDescription) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, Task.EVENT_TASK);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.timeDescription \u003d timeDescription;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.formattedTimeDescription \u003d this.timeDescription.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates an Event object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file reading."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param formattedTimeDescription is the LocalDate input representing date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param isDone states if the Event object is completed or not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Event(String description, String formattedTimeDescription, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, Task.EVENT_TASK, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.formattedTimeDescription \u003d formattedTimeDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the String description of the completion time of Event object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getFormattedTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.formattedTimeDescription;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a String representation of Event object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Event object description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + getDescription()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"(at: \" + getFormattedTime() + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 58
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList taskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public EventCommand(String userInput, TaskList taskManager) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.taskManager \u003d taskManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int length \u003d userInput.trim().length();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int timePrefix \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.NO_DESCRIPTION);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (timePrefix \u003c 0 || timePrefix + 4 \u003e\u003d length) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.INVALID_EVENT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            LocalDate date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String dateString \u003d userInput.substring(timePrefix + 4, length);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(ExceptionCommand.INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Event newEvent \u003d new Event(userInput.substring(6, timePrefix), date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.taskManager.store(newEvent);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\n  \" + newEvent"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\nNow you have \" + this.taskManager.getTaskNum() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 45
    }
  },
  {
    "path": "src/main/java/ExceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class ExceptionCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public final static String INVALID_COMMAND \u003d \"IC\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public final static String INVALID_INDEX \u003d \"II\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public final static String NO_DESCRIPTION \u003d \"ND\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public final static String NO_KEYWORD \u003d \"NC\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public final static String INVALID_EVENT \u003d \"IE\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public final static String INVALID_DATE_FORMAT \u003d \"IDF\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public final static String INVALID_DEADLINE \u003d \"ID\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String exceptionType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public ExceptionCommand(String exceptionType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (this.exceptionType.equals(INVALID_COMMAND)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"*Invalid command.*\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\n  Duke Commands: bye, list, find, done, delete,\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\n                               todo, event, deadline\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (this.exceptionType.equals(INVALID_INDEX)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"*Invalid task index, please try again.*\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (this.exceptionType.equals(NO_DESCRIPTION)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"*Please fill in task description*\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (this.exceptionType.equals(NO_KEYWORD)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"*Please fill in a keyword to find*\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (this.exceptionType.equals(INVALID_EVENT)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"*Please fill in event completion time in the following format:*\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\n  eg. event CCA meeting /at YYYY-MM-DD\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (this.exceptionType.equals(INVALID_DATE_FORMAT)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"*Please fill in the time in the YYYY-MM-DD format*\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (this.exceptionType.equals(INVALID_DEADLINE)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"*Please fill in deadline completion time in the following format:*\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\n  eg. deadline return book to Jurong Regional Library /by YYYY-MM-DD\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 46
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList taskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public FindCommand(String userInput, TaskList taskManager) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.taskManager \u003d taskManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int length \u003d userInput.length();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.NO_KEYWORD);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(exceptionCommand.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String keyword \u003d userInput.substring(5, length);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            List\u003cTask\u003e allTasks \u003d taskManager.getTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int fullSize \u003d taskManager.getTaskNum();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            for (int i \u003d 0; i \u003c fullSize; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                Task task \u003d allTasks.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                if (taskString.contains(keyword)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    filteredTasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String output \u003d \"Here are the matching task(s) in your list:\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int partialSize \u003d filteredTasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            for (int i \u003d 0; i \u003c partialSize; i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                output \u003d output + \"  \" + index + \".\" + filteredTasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(output);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 47
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Launcher object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * To run Duke GUI."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 11
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    TaskList taskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public ListCommand(TaskList taskManager) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"Here are the task(s) in your list:\\n\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.taskManager \u003d taskManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskManager.getTasks();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int size \u003d taskManager.getTaskNum();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String parsedTasks \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            parsedTasks \u003d parsedTasks + \"  \" + index + \".\" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.appendDukeMessage(parsedTasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 26
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a GUI stage for user to use."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            stage.setTitle(\"DUKE_ip_v2.0\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String reminders \u003d duke.getReminder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showReminder(reminders);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 35
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.text.TextFlow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TextFlow txtF;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private Image mascotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaMascot.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String welcomeMessage \u003d Ui.welcomeGreetings();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Text text \u003d new Text(welcomeMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        txtF.getChildren().add(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * References the same Duke object initialised in Main."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param d is the Duke object initialised by Main."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Shows and reminds user of the upcoming tasks to complete."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void showReminder(String reminders) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DialogBox.getDukeDialog(reminders, mascotImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Closes the window."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static void closeWindow() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates dialog box for reminders of tasks on pressing the Reminder button."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private void handleReminderAction() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String reminder \u003d duke.getReminder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DialogBox.getDukeDialog(reminder, mascotImage)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        );"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 91
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Parser object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Handles the user input commands and executes them."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int START \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int MINIMUM_COMMAND_LENGTH \u003d 3;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int END_FOUR_CHARACTERS \u003d 4;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int END_FIVE_CHARACTERS \u003d 5;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int END_SIX_CHARACTERS \u003d 6;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int END_SEVEN_CHARACTERS \u003d 7;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int END_NINE_CHARACTERS \u003d 9;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String COMMAND_SEPARATOR \u003d \" \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String PARSE_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String PARSE_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String PARSE_DONE \u003d \"done \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String PARSE_TODO \u003d \"todo \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String PARSE_FIND \u003d \"find \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String PARSE_EVENT \u003d \"event \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String PARSE_DELETE \u003d \"delete \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String PARSE_DEADLINE \u003d \"deadline \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList taskManager;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Parser object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is used for identifying String inputs from user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param taskManager TaskList object, required to interact with it."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Parser(TaskList taskManager) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.taskManager \u003d taskManager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Processes user input for classification and execution."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param str is the line of String obtained from user input when user is using the JavaFX GUI."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Reads and makes sense of user input commands which includes:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * (bye, list, todo, deadline, event, delete)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It changes the output to a String as Duke Response."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a String representation of Duke output based on user commands."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @throws DukeException when command is wrong, unidentifiable or missing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String parseUserInput(String str) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String trimmedStr \u003d str.trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int commandSpace \u003d str.indexOf(COMMAND_SEPARATOR);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (trimmedStr.length() \u003c MINIMUM_COMMAND_LENGTH) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand  \u003d new ExceptionCommand(ExceptionCommand.INVALID_COMMAND);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assert trimmedStr.length() \u003e 2 : \"user input should not be empty/just white spaces\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (str.equals(PARSE_BYE)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ByeCommand byeCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return byeCommand.getOutput();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.equals(PARSE_LIST)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ListCommand listCommand \u003d new ListCommand(taskManager);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return listCommand.getOutput();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d START) { //No space in user input"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand  \u003d new ExceptionCommand(ExceptionCommand.INVALID_COMMAND);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assert commandSpace \u003e 0 : \"There should be a spacing after command call from this point onwards\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (str.substring(START, END_FIVE_CHARACTERS).equals(PARSE_DONE)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            DoneCommand doneCommand \u003d new DoneCommand(str, taskManager);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return doneCommand.getOutput();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(START, END_FIVE_CHARACTERS).equals(PARSE_TODO)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            TodoCommand todoCommand \u003d new TodoCommand(str, taskManager);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return todoCommand.getOutput();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (str.substring(START, END_FIVE_CHARACTERS).equals(PARSE_FIND)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            FindCommand findCommand \u003d new FindCommand(str, taskManager);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return findCommand.getOutput();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d END_FOUR_CHARACTERS) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.INVALID_COMMAND);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assert str.length() \u003e 4 : \"The length of command with a space character should be \u003e 4\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (str.substring(START, END_SIX_CHARACTERS).equals(PARSE_EVENT)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                EventCommand eventCommand \u003d new EventCommand(str, taskManager);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                return eventCommand.getOutput();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch(DukeException de) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d END_FIVE_CHARACTERS) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand  \u003d new ExceptionCommand(ExceptionCommand.INVALID_COMMAND);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assert str.length() \u003e 5 : \"The length of command with a space character should be \u003e 5\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (str.substring(START, END_SEVEN_CHARACTERS).equals(PARSE_DELETE)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            DeleteCommand deleteCommand \u003d new DeleteCommand(str, taskManager);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return deleteCommand.getOutput();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (commandSpace \u003c\u003d END_SIX_CHARACTERS) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand  \u003d new ExceptionCommand(ExceptionCommand.INVALID_COMMAND);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assert str.length() \u003e 6 : \"The length of command with a space character should be \u003e 6\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (str.substring(START, END_NINE_CHARACTERS).equals(PARSE_DEADLINE)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DeadlineCommand deadlineCommand \u003d new DeadlineCommand(str, taskManager);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                return deadlineCommand.getOutput();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch(DukeException de) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                throw new DukeException(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand  \u003d new ExceptionCommand(ExceptionCommand.INVALID_COMMAND);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            throw new DukeException(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 138
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Storage object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * For reading and writing of the specified file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final char TICK \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final char CROSS \u003d \u0027\\u2718\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final char CONVERTED_TICK \u003d \u00271\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final char CONVERTED_CROSS \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int TYPE_START_INDEX \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int TYPE_END_INDEX \u003d 2;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int ISDONE_START_INDEX \u003d 4;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int ISDONE_END_INDEX \u003d 5;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int DATE_OFFSET_INDEX \u003d 5;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final int DESCRIPTION_START_INDEX \u003d 7;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String DONE \u003d \"1\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String DATE_OPEN_BRACKET \u003d \"(\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private static final String DATE_CLOSE_BRACKET \u003d \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private List\u003cTask\u003e savedTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Storage object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is used reading a file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param filePath is a relative directory to the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.savedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Loads the file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A java Scanner object is used to read the .txt file and temporarily"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * stores the data."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void loadFileContent() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        File storedFile \u003d new File(filePath); // create a File for the given file path;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Scanner scanner \u003d new Scanner(storedFile); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                String taskSummary \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                lineReader(taskSummary);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            File directory \u003d storedFile.getParentFile();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                if (!directory.exists() || !directory.isDirectory()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    directory.mkdirs();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                storedFile.createNewFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                System.out.println(\"Unable to open/create file: \" + ex.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * File line parser."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Reads and identifies the tasks specified in the file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param task is the line String representation of task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * read from the file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void lineReader(String task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String type \u003d task.substring(TYPE_START_INDEX, TYPE_END_INDEX);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (task.substring(ISDONE_START_INDEX, ISDONE_END_INDEX).equals(DONE)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (type.equals(Task.TODO_TASK)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            todoReader(task, isDone);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (type.equals(Task.EVENT_TASK)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            eventReader(task, isDone);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else if (type.equals(Task.DEADLINE_TASK)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            deadlineReader(task, isDone);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void todoReader(String parsedTask, Boolean isDone) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int end \u003d parsedTask.length();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String description \u003d parsedTask.substring(DESCRIPTION_START_INDEX, end);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Todo newTodo \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        savedTasks.add(newTodo);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void eventReader(String parsedTask, Boolean isDone) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int dateStart \u003d parsedTask.indexOf(DATE_OPEN_BRACKET);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int dateEnd \u003d parsedTask.lastIndexOf(DATE_CLOSE_BRACKET);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String timeDescription \u003d parsedTask.substring(dateStart + DATE_OFFSET_INDEX, dateEnd);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String description \u003d parsedTask.substring(DESCRIPTION_START_INDEX, dateStart);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Event newEvent \u003d new Event(description, timeDescription, isDone);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        savedTasks.add(newEvent);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void deadlineReader(String parsedTask, Boolean isDone) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int dateStart \u003d parsedTask.indexOf(DATE_OPEN_BRACKET);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int dateEnd \u003d parsedTask.lastIndexOf(DATE_CLOSE_BRACKET);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String timeDescription \u003d parsedTask.substring(dateStart + DATE_OFFSET_INDEX, dateEnd);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        String description \u003d parsedTask.substring(DESCRIPTION_START_INDEX, dateStart);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, timeDescription, isDone);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        savedTasks.add(newDeadline);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a list of Tasks object stored after reading the file."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a list of Task objects."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public List\u003cTask\u003e getSavedTasks() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return savedTasks;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Writes the data to the file."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param tasksToWrite is the list of Tasks."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * This method will convert Task to their String representation,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * modify them and write in the file."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @throws IOException if file is somehow not found."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void writeToFile(List\u003cTask\u003e tasksToWrite) throws IOException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int totalTasks \u003d tasksToWrite.size();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        for (int i \u003d 0; i \u003c totalTasks; i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task writeTask \u003d tasksToWrite.get(i);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String taskString \u003d writeTask.toString();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String replaceTick \u003d taskString.replace(TICK, CONVERTED_TICK);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String replaceCross \u003d replaceTick.replace(CROSS, CONVERTED_CROSS);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            fw.write(replaceCross + \"\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 164
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Task object which is a parent class of:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Deadline, Event and Todo."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected static final String DEADLINE_TASK \u003d \"D\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected static final String EVENT_TASK \u003d \"E\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    protected static final String TODO_TASK \u003d \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Task object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file writing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param type is the type of subclass task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Task(String description, String type) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Task object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file reading."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param type is the type of subclass task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param isDone states if the Task object is completed or not."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Task(String description, String type, boolean isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a String representation of a tick or a cross."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Based on the Task\u0027s isDone status."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a tick or a cross."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return (isDone ? TICK_ICON : CROSS_ICON);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a boolean value that describes the completion of the Task object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return a boolean value."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public boolean getCompletionStatus() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the String description of the Task object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Changes the state of completion of a Task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Not done to Done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the String representation of Task type."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Task type."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the String representation of Task object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return Task object overall description."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 96
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a TaskList object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Stores the List of Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private final String IMPOSSIBLE_DATE \u003d \"2000-01-01\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private final static String DATE_FORMAT \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a TaskList object to store tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param tasks is the list of Task objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the list of Tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return current list of Tasks stored."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns the number of Tasks stored."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @return current number of Tasks stored."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public int getTaskNum() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A command to store a Task object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param newTask is the new Task to be stored."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public void store(Task newTask) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A command to remove a Task object from current list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Returns a Task object that is removed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param index specifies the position of Task in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task removedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * A command to mark a Task object from current list as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param index identifies the Task object to be marked as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Task markDone(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task doneTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getUrgentTasks() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        List\u003cTask\u003e tasks \u003d this.getTasks();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        LocalDate now \u003d LocalDate.now().plusDays(3);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String taskType \u003d currentTask.getType();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            LocalDate taskTime;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (taskType.equals(Task.EVENT_TASK)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                Event currentEventTask \u003d (Event)currentTask;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                String formattedTime \u003d currentEventTask.getFormattedTime();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                taskTime \u003d LocalDate.parse(formattedTime, dateFormatter);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } else if (taskType.equals(Task.DEADLINE_TASK)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                Deadline currentDeadlineTask \u003d (Deadline)currentTask;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                String formattedTime \u003d currentDeadlineTask.getFormattedTime();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                taskTime \u003d LocalDate.parse(formattedTime, dateFormatter);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                taskTime \u003d LocalDate.parse(IMPOSSIBLE_DATE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (!(currentTask.getType().equals(Task.TODO_TASK))"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    \u0026\u0026 currentTask.getCompletionStatus() \u003d\u003d false"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    \u0026\u0026 now.isAfter(taskTime)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                filteredTasks.add(currentTask);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            if (currentTask.getCompletionStatus() \u003d\u003d false"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    \u0026\u0026 currentTask.getType().equals(Task.TODO_TASK)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                filteredTasks.add(currentTask);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (filteredTasks.size() \u003c 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return \"***Reminder:\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"There are no urgent tasks to be completed.\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"You can take a break! :)\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            String output \u003d \"***Reminder:\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"Here are your tasks to be completed within 3 days:\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int partialSize \u003d filteredTasks.size();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            for (int i \u003d 0; i \u003c partialSize; i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                output \u003d output + \"  \" + index + \".\" + filteredTasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 135
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Todo task which is a subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Todo object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file writing."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, Task.TODO_TASK);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Creates a Todo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * It is mainly for file reading."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param description is the description of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param isDone states if the Todo object is completed or not."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(description, Task.TODO_TASK, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 26
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    private TaskList taskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public TodoCommand(String userInput, TaskList taskManager) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        this.taskManager \u003d taskManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        int length \u003d this.userInput.length();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        if (length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            ExceptionCommand exceptionCommand \u003d new ExceptionCommand(ExceptionCommand.NO_DESCRIPTION);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(exceptionCommand.getOutput());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            Todo newTodo \u003d new Todo(userInput.substring(5, length));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.taskManager.store(newTodo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            this.appendDukeMessage(\"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\n  \" + newTodo"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                    + \"\\nNow you have \" + this.taskManager.getTaskNum() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 27
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Represents a Ui object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " * Prints hardcoded designs that prompts the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the welcome greetings when user runs Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static String welcomeGreetings() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"    _______________________________________________________________________\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"     ***Welcome to Project DUKE***\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"     CS2103T Individual Project\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     Hello! I\u0027m Duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n     What can I do for you?\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n    _______________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the error message when there is error loading the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static String loadFileErrorMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"*Error: Text File not found*\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\nPlease specify the correct file location\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\nto read and write on the text file.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the message when file is loaded successfully."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public static String loadFileSuccessMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"*File has successfully loaded!*\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\nDuke Commands: \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\nbye, list, find, done, delete, todo, event, deadline\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * Displays the error message when there is error updating the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     * @param message is the essence of error."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    public String displayUpdateFileError(String message) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        return \"*Error: Unable to save changes to file*\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n  Please check if your file still exists in your directory\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                + \"\\n\" + message;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 47
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.effect.InnerShadow?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "         \u003c/opaqueInsets\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            \u003cInnerShadow /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "         \u003c/effect\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c?import javafx.scene.text.TextFlow?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Add command here...\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"26.0\" prefHeight\u003d\"531.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"530.0\" prefWidth\u003d\"388.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                  \u003cTextFlow fx:id\u003d\"txtF\" prefHeight\u003d\"83.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "               \u003c/children\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      \u003cTextFlow prefHeight\u003d\"28.0\" prefWidth\u003d\"400.0\" AnchorPane.bottomAnchor\u003d\"572.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "            \u003cButton fx:id\u003d\"reminderButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleReminderAction\" prefHeight\u003d\"25.0\" prefWidth\u003d\"400.0\" text\u003d\"My Reminder\" textFill\u003d\"#2d6dbf\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "               \u003cgraphic\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                  \u003cImageView fitHeight\u003d\"21.0\" fitWidth\u003d\"22.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                     \u003cimage\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                        \u003cImage url\u003d\"@../images/Bell.PNG\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                     \u003c/image\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "                  \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "               \u003c/graphic\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "      \u003c/TextFlow\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 37
    }
  },
  {
    "path": "test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"Play Maplestory \", LocalDate.parse(\"2019-10-25\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[D][✘] Play Maplestory (by: Oct 25 2019)\", newDeadline.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testFileTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"Play Summoners War \", \"Dec 15 2018\", true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[D][✓] Play Summoners War (by: Dec 15 2018)\", newDeadline.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testAddTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"Play Brawl Stars \", LocalDate.parse(\"2019-10-25\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[D][✘] Play Brawl Stars (by: Oct 25 2019)\", newDeadline.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 24
    }
  },
  {
    "path": "test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.yaml.snakeyaml.events.AliasEvent;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Event newEvent \u003d new Event(\"Read Douluo Dalu \", LocalDate.parse(\"2019-10-25\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[E][✘] Read Douluo Dalu (at: Oct 25 2019)\", newEvent.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testFileTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Event newEvent \u003d new Event(\"Read Doupo Cangqiong \", \"Dec 15 2018\", true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[E][✓] Read Doupo Cangqiong (at: Dec 15 2018)\", newEvent.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testAddTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Event newEvent \u003d new Event(\"Read Wudong Qiankun \", LocalDate.parse(\"2019-10-25\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[E][✘] Read Wudong Qiankun (at: Oct 25 2019)\", newEvent.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 25
    }
  },
  {
    "path": "test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task task \u003d new Task(\"Watch Tokyo Ravens\", \"T\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"\\u2718\", task.getStatusIcon());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task task \u003d new Task(\"Watch Tokyo Ravens\", \"T\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"Watch Tokyo Ravens\", task.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task task \u003d new Task(\"Watch D-gray man\", \"D\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"D\", task.getType());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Task task \u003d new Task(\"Watch Enen no Shobotai\", \"E\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[E][✘] Watch Enen no Shobotai\", task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 28
    }
  },
  {
    "path": "test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        Todo newTodo \u003d new Todo(\"Read Asura Omega manga\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "        assertEquals(\"[T][✘] Read Asura Omega manga\", newTodo.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "deadline finish project CS2103T /at today"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "deadline finish project CS2103T /by today"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "todoOP1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "todo Oral Presentation preparations"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "hello"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "SET MY_PATH\u003dC:\\repo\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "javac  -cp %MY_PATH%\\src\\main\\java -Xlint:none -d %MY_PATH%\\bin %MY_PATH%\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asuraxsoul"
        },
        "content": "java -classpath %MY_PATH%\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Asuraxsoul": 4,
      "-": 19
    }
  }
]
