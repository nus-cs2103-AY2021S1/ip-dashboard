[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "urieltan"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "urieltan"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "urieltan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "urieltan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "urieltan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        System.out.println(\"What can I do for you today?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        Scanner scanner \u003d new Scanner(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            if(input.contentEquals(\"bye\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                System.out.println(\"\\t\" + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            else if(input.contentEquals(\"list\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                for(int i \u003d 0; i \u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\" + (i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            else if(input.startsWith(\"remove \")){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                String indexStr \u003d input.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                int index \u003d Integer.parseInt(indexStr) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                Task t \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                System.out.println(\"\\t\" + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                System.out.println(\"\\t\\t\" + t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                System.out.println(\"\\t\" + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            else if(input.startsWith(\"done \")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                String indexStr \u003d input.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                int index \u003d Integer.parseInt(indexStr) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                taskList.get(index).setDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                System.out.println(\"\\t\" + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                System.out.println(\"\\t\\t\" + taskList.get(index));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            else if(input.startsWith(\"todo \") || input.equals(\"todo\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                input \u003d input.substring(4).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    Task newTask \u003d new Todo(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    taskList.add(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\\t\" + newTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                catch(EmptyStringException e){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\" + \"Todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            else if(input.startsWith(\"deadline \") || input.equals(\"deadline\")){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                input \u003d input.substring(8).trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    Task newTask \u003d new Deadline(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    taskList.add(newTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\\t\" + newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                catch(EmptyStringException e){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\" + \"Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            else if(input.startsWith(\"event \") || input.equals(\"event\")){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                input \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    Task newTask \u003d new Event(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    taskList.add(newTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\\t\" + newTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                catch(EmptyStringException e){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                    System.out.println(\"\\t\" + \"Event cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "urieltan"
        },
        "content": "                System.out.println(\"\\t\" + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "urieltan": 78,
      "-": 10
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "urieltan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "urieltan"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    public Deadline(String line) throws EmptyStringException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        if(line.isBlank()){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            throw new EmptyStringException(\"Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        String[] command \u003d line.split(\" \\\\/by \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this.item \u003d command[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this.time \u003d command[1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        taskType \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        return super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "urieltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "urieltan": 20
    }
  },
  {
    "path": "src/main/java/task/EmptyStringException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "urieltan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "urieltan"
        },
        "content": "public class EmptyStringException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    public EmptyStringException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "urieltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "urieltan": 7
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "urieltan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "urieltan"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    public Event(String line) throws EmptyStringException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        if(line.isBlank()){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            throw new EmptyStringException(\"Event cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        String[] command \u003d line.split(\" \\\\/at \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this.item \u003d command[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this.time \u003d command[1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        taskType \u003d \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        return super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "urieltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "urieltan": 20
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "urieltan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "urieltan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    protected String item;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    protected Task(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this.item \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this.taskType \u003d \"-\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    protected Task(String item) throws EmptyStringException{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        if(item.isBlank()){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            throw new EmptyStringException(\"Task cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        String typeString \u003d \"[\" + taskType + \"]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        String doneString \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            doneString \u003d \"[✓]\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "urieltan"
        },
        "content": "            doneString \u003d \"[✗]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        return typeString + \" \" + doneString + \" \" + item;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "urieltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "urieltan": 37
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "urieltan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "urieltan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "urieltan"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    public Todo(String item) throws EmptyStringException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        super(item);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "urieltan"
        },
        "content": "        taskType \u003d \"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "urieltan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "urieltan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "urieltan": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "urieltan"
        },
        "content": "todo eggs"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "urieltan"
        },
        "content": "deadline egg /by 20"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "urieltan"
        },
        "content": "event egger /at 2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "urieltan"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "urieltan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "urieltan"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "urieltan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "urieltan": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "urieltan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "urieltan": 1,
      "-": 37
    }
  }
]
